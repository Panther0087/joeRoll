/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { JoeVote } from "../JoeVote";

export class JoeVote__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _pair: string,
    _bar: string,
    _joe: string,
    _chef: string,
    _pid: BigNumberish,
    overrides?: Overrides
  ): Promise<JoeVote> {
    return super.deploy(
      _pair,
      _bar,
      _joe,
      _chef,
      _pid,
      overrides || {}
    ) as Promise<JoeVote>;
  }
  getDeployTransaction(
    _pair: string,
    _bar: string,
    _joe: string,
    _chef: string,
    _pid: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pair,
      _bar,
      _joe,
      _chef,
      _pid,
      overrides || {}
    );
  }
  attach(address: string): JoeVote {
    return super.attach(address) as JoeVote;
  }
  connect(signer: Signer): JoeVote__factory {
    return super.connect(signer) as JoeVote__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JoeVote {
    return new Contract(address, _abi, signerOrProvider) as JoeVote;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_joe",
        type: "address",
      },
      {
        internalType: "address",
        name: "_chef",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a13380380610a13833981810160405260a081101561003357600080fd5b508051602082015160408301516060840151608090940151600080546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417909355600280549285169284169290921790915560038054939094169290911691909117909155600455610962806100b16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146101a557806370a08231146101c357806395d89b41146101e9578063a9059cbb14610115578063dd62ed3e146101f157610093565b806306fdde0314610098578063095ea7b31461011557806318160ddd1461015557806323b872dd1461016f575b600080fd5b6100a061021f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101416004803603604081101561012b57600080fd5b506001600160a01b038135169060200135610240565b604080519115158252519081900360200190f35b61015d610249565b60408051918252519081900360200190f35b6101416004803603606081101561018557600080fd5b506001600160a01b0381358116916020810135909116906040013561036b565b6101ad610374565b6040805160ff9092168252519081900360200190f35b61015d600480360360208110156101d957600080fd5b50356001600160a01b0316610379565b6100a06107c9565b61015d6004803603604081101561020757600080fd5b506001600160a01b0381358116916020013516610240565b6040805180820190915260078152664a6f65566f746560c81b602082015290565b60005b92915050565b6000805460408051630240bc6b60e21b8152905183926001600160a01b031691630902f1ac916004808301926060929190829003018186803b15801561028e57600080fd5b505afa1580156102a2573d6000803e3d6000fd5b505050506040513d60608110156102b857600080fd5b5051600254600154604080516370a0823160e01b81526001600160a01b03928316600482015290516dffffffffffffffffffffffffffff909416945060009391909216916370a08231916024808301926020929190829003018186803b15801561032157600080fd5b505afa158015610335573d6000803e3d6000fd5b505050506040513d602081101561034b57600080fd5b505190506103648161035e8460026107ea565b9061084a565b9250505090565b60009392505050565b601290565b60025460008054604080516370a0823160e01b81526001600160a01b0392831660048201529051929384939216916370a0823191602480820192602092909190829003018186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d60208110156103f757600080fd5b505160008054604080516318160ddd60e01b8152905193945091926001600160a01b03909116916318160ddd916004808301926020929190829003018186803b15801561044357600080fd5b505afa158015610457573d6000803e3d6000fd5b505050506040513d602081101561046d57600080fd5b505160008054604080516370a0823160e01b81526001600160a01b038981166004830152915194955092939116916370a08231916024808301926020929190829003018186803b1580156104c057600080fd5b505afa1580156104d4573d6000803e3d6000fd5b505050506040513d60208110156104ea57600080fd5b505160035460048054604080516393f1a40b60e01b8152928301919091526001600160a01b03898116602484015281519495506000949316926393f1a40b926044808201939291829003018186803b15801561054557600080fd5b505afa158015610559573d6000803e3d6000fd5b505050506040513d604081101561056f57600080fd5b5051905061057d828261084a565b915060006105a0600261059a8661059489886107ea565b906108a4565b906107ea565b600154604080516370a0823160e01b81526001600160a01b038b81166004830152915193945060009391909216916370a08231916024808301926020929190829003018186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d602081101561061d57600080fd5b5051600154604080516318160ddd60e01b815290519293506000926001600160a01b03909216916318160ddd91600480820192602092909190829003018186803b15801561066a57600080fd5b505afa15801561067e573d6000803e3d6000fd5b505050506040513d602081101561069457600080fd5b5051600254600154604080516370a0823160e01b81526001600160a01b039283166004820152905193945060009391909216916370a08231916024808301926020929190829003018186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d602081101561071657600080fd5b50519050600061072a8361059484876107ea565b600254604080516370a0823160e01b81526001600160a01b038f81166004830152915193945060009391909216916370a08231916024808301926020929190829003018186803b15801561077d57600080fd5b505afa158015610791573d6000803e3d6000fd5b505050506040513d60208110156107a757600080fd5b505190506107b98161035e888561084a565b9c9b505050505050505050505050565b6040805180820190915260078152664a4f45564f544560c81b602082015290565b6000826107f957506000610243565b8282028284828161080657fe5b04146108435760405162461bcd60e51b815260040180806020018281038252602181526020018061090c6021913960400191505060405180910390fd5b9392505050565b600082820183811015610843576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008082116108fa576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161090357fe5b04939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220d33408a1f09563f905531793c5e29b0531c72ba9eb38c3467c99961ea553f78564736f6c634300060c0033";
