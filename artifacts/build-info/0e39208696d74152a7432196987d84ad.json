{
  "id": "0e39208696d74152a7432196987d84ad",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.12",
  "solcLongVersion": "0.6.12+commit.27d51765",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/boringcrypto/BoringHelperV1.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n * This is a helper contract used by Sushiswap frontend to get all pool data.\r\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\r\n * It needs flattened due to cyclic dependencies.\r\n * BoringHelperV1 has been modified by:\r\n *  - Renaming Sushi -> Joe\r\n *  - Renaming ETH -> AVAX\r\n *  - Removed bentobox/kashi logic.\r\n *\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n// Copyright (c) 2021 BoringCrypto\r\n// Twitter: @Boring_Crypto\r\n\r\n// Version 22-Mar-2021\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function owner() external view returns (address);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\ninterface IMasterChef {\r\n    function BONUS_MULTIPLIER() external view returns (uint256);\r\n\r\n    function devaddr() external view returns (address);\r\n\r\n    function migrator() external view returns (address);\r\n\r\n    function owner() external view returns (address);\r\n\r\n    function startBlock() external view returns (uint256);\r\n\r\n    function joe() external view returns (address);\r\n\r\n    function joePerBlock() external view returns (uint256);\r\n\r\n    function totalAllocPoint() external view returns (uint256);\r\n\r\n    function poolLength() external view returns (uint256);\r\n\r\n    function poolInfo(uint256 nr)\r\n        external\r\n        view\r\n        returns (\r\n            address,\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        );\r\n\r\n    function userInfo(uint256 nr, address who)\r\n        external\r\n        view\r\n        returns (uint256, uint256);\r\n\r\n    function pendingTokens(uint256 pid, address who)\r\n        external\r\n        view\r\n        returns (\r\n            uint256,\r\n            address,\r\n            string memory,\r\n            uint256\r\n        );\r\n}\r\n\r\ninterface IPair is IERC20 {\r\n    function token0() external view returns (IERC20);\r\n\r\n    function token1() external view returns (IERC20);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112,\r\n            uint112,\r\n            uint32\r\n        );\r\n}\r\n\r\ninterface IFactory {\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function allPairs(uint256 i) external view returns (IPair);\r\n\r\n    function getPair(IERC20 token0, IERC20 token1)\r\n        external\r\n        view\r\n        returns (IPair);\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function feeToSetter() external view returns (address);\r\n}\r\n\r\nlibrary BoringMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require((c = a + b) >= b, \"BoringMath: Add Overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require((c = a - b) <= a, \"BoringMath: Underflow\");\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public immutable owner;\r\n\r\n    constructor() internal {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n}\r\n\r\nlibrary BoringERC20 {\r\n    function returnDataToString(bytes memory data)\r\n        internal\r\n        pure\r\n        returns (string memory)\r\n    {\r\n        if (data.length >= 64) {\r\n            return abi.decode(data, (string));\r\n        } else if (data.length == 32) {\r\n            uint8 i = 0;\r\n            while (i < 32 && data[i] != 0) {\r\n                i++;\r\n            }\r\n            bytes memory bytesArray = new bytes(i);\r\n            for (i = 0; i < 32 && data[i] != 0; i++) {\r\n                bytesArray[i] = data[i];\r\n            }\r\n            return string(bytesArray);\r\n        } else {\r\n            return \"???\";\r\n        }\r\n    }\r\n\r\n    function symbol(IERC20 token) internal view returns (string memory) {\r\n        (bool success, bytes memory data) = address(token).staticcall(\r\n            abi.encodeWithSelector(0x95d89b41)\r\n        );\r\n        return success ? returnDataToString(data) : \"???\";\r\n    }\r\n\r\n    function name(IERC20 token) internal view returns (string memory) {\r\n        (bool success, bytes memory data) = address(token).staticcall(\r\n            abi.encodeWithSelector(0x06fdde03)\r\n        );\r\n        return success ? returnDataToString(data) : \"???\";\r\n    }\r\n\r\n    function decimals(IERC20 token) internal view returns (uint8) {\r\n        (bool success, bytes memory data) = address(token).staticcall(\r\n            abi.encodeWithSelector(0x313ce567)\r\n        );\r\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\r\n    }\r\n\r\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\r\n        (bool success, bytes memory data) = address(token).staticcall{\r\n            gas: 10000\r\n        }(abi.encodeWithSelector(0x3644e515));\r\n        return\r\n            success && data.length == 32\r\n                ? abi.decode(data, (bytes32))\r\n                : bytes32(0);\r\n    }\r\n\r\n    function nonces(IERC20 token, address owner)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        (bool success, bytes memory data) = address(token).staticcall{\r\n            gas: 5000\r\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\r\n        return\r\n            success && data.length == 32\r\n                ? abi.decode(data, (uint256))\r\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\r\n    }\r\n}\r\n\r\nlibrary BoringPair {\r\n    function factory(IPair pair) internal view returns (IFactory) {\r\n        (bool success, bytes memory data) = address(pair).staticcall(\r\n            abi.encodeWithSelector(0xc45a0155)\r\n        );\r\n        return\r\n            success && data.length == 32\r\n                ? abi.decode(data, (IFactory))\r\n                : IFactory(0);\r\n    }\r\n}\r\n\r\ninterface IStrategy {\r\n    function skim(uint256 amount) external;\r\n\r\n    function harvest(uint256 balance, address sender)\r\n        external\r\n        returns (int256 amountAdded);\r\n\r\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\r\n\r\n    function exit(uint256 balance) external returns (int256 amountAdded);\r\n}\r\n\r\ninterface IBentoBox {\r\n    event LogDeploy(\r\n        address indexed masterContract,\r\n        bytes data,\r\n        address indexed cloneAddress\r\n    );\r\n    event LogDeposit(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount,\r\n        uint256 share\r\n    );\r\n    event LogFlashLoan(\r\n        address indexed borrower,\r\n        address indexed token,\r\n        uint256 amount,\r\n        uint256 feeAmount,\r\n        address indexed receiver\r\n    );\r\n    event LogRegisterProtocol(address indexed protocol);\r\n    event LogSetMasterContractApproval(\r\n        address indexed masterContract,\r\n        address indexed user,\r\n        bool approved\r\n    );\r\n    event LogStrategyDivest(address indexed token, uint256 amount);\r\n    event LogStrategyInvest(address indexed token, uint256 amount);\r\n    event LogStrategyLoss(address indexed token, uint256 amount);\r\n    event LogStrategyProfit(address indexed token, uint256 amount);\r\n    event LogStrategyQueued(address indexed token, address indexed strategy);\r\n    event LogStrategySet(address indexed token, address indexed strategy);\r\n    event LogStrategyTargetPercentage(\r\n        address indexed token,\r\n        uint256 targetPercentage\r\n    );\r\n    event LogTransfer(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 share\r\n    );\r\n    event LogWhiteListMasterContract(\r\n        address indexed masterContract,\r\n        bool approved\r\n    );\r\n    event LogWithdraw(\r\n        address indexed token,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount,\r\n        uint256 share\r\n    );\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    function balanceOf(IERC20, address) external view returns (uint256);\r\n\r\n    function batch(bytes[] calldata calls, bool revertOnFail)\r\n        external\r\n        payable\r\n        returns (bool[] memory successes, bytes[] memory results);\r\n\r\n    function claimOwnership() external;\r\n\r\n    function deploy(\r\n        address masterContract,\r\n        bytes calldata data,\r\n        bool useCreate2\r\n    ) external payable;\r\n\r\n    function deposit(\r\n        IERC20 token_,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\r\n\r\n    function harvest(\r\n        IERC20 token,\r\n        bool balance,\r\n        uint256 maxChangeAmount\r\n    ) external;\r\n\r\n    function masterContractApproved(address, address)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    function masterContractOf(address) external view returns (address);\r\n\r\n    function nonces(address) external view returns (uint256);\r\n\r\n    function owner() external view returns (address);\r\n\r\n    function pendingOwner() external view returns (address);\r\n\r\n    function pendingStrategy(IERC20) external view returns (IStrategy);\r\n\r\n    function permitToken(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function registerProtocol() external;\r\n\r\n    function setMasterContractApproval(\r\n        address user,\r\n        address masterContract,\r\n        bool approved,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\r\n\r\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\r\n        external;\r\n\r\n    function strategy(IERC20) external view returns (IStrategy);\r\n\r\n    function strategyData(IERC20)\r\n        external\r\n        view\r\n        returns (\r\n            uint64 strategyStartDate,\r\n            uint64 targetPercentage,\r\n            uint128 balance\r\n        );\r\n\r\n    function toAmount(\r\n        IERC20 token,\r\n        uint256 share,\r\n        bool roundUp\r\n    ) external view returns (uint256 amount);\r\n\r\n    function toShare(\r\n        IERC20 token,\r\n        uint256 amount,\r\n        bool roundUp\r\n    ) external view returns (uint256 share);\r\n\r\n    function totals(IERC20)\r\n        external\r\n        view\r\n        returns (uint128 elastic, uint128 base);\r\n\r\n    function transfer(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 share\r\n    ) external;\r\n\r\n    function transferMultiple(\r\n        IERC20 token,\r\n        address from,\r\n        address[] calldata tos,\r\n        uint256[] calldata shares\r\n    ) external;\r\n\r\n    function transferOwnership(\r\n        address newOwner,\r\n        bool direct,\r\n        bool renounce\r\n    ) external;\r\n\r\n    function whitelistMasterContract(address masterContract, bool approved)\r\n        external;\r\n\r\n    function whitelistedMasterContracts(address) external view returns (bool);\r\n\r\n    function withdraw(\r\n        IERC20 token_,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external returns (uint256 amountOut, uint256 shareOut);\r\n}\r\n\r\nstruct Rebase {\r\n    uint128 elastic;\r\n    uint128 base;\r\n}\r\n\r\nstruct AccrueInfo {\r\n    uint64 interestPerSecond;\r\n    uint64 lastAccrued;\r\n    uint128 feesEarnedFraction;\r\n}\r\n\r\ninterface IOracle {\r\n    function get(bytes calldata data)\r\n        external\r\n        returns (bool success, uint256 rate);\r\n\r\n    function peek(bytes calldata data)\r\n        external\r\n        view\r\n        returns (bool success, uint256 rate);\r\n\r\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\r\n\r\n    function symbol(bytes calldata data) external view returns (string memory);\r\n\r\n    function name(bytes calldata data) external view returns (string memory);\r\n}\r\n\r\ninterface IKashiPair {\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function accrue() external;\r\n\r\n    function accrueInfo() external view returns (AccrueInfo memory info);\r\n\r\n    function addAsset(\r\n        address to,\r\n        bool skim,\r\n        uint256 share\r\n    ) external returns (uint256 fraction);\r\n\r\n    function addCollateral(\r\n        address to,\r\n        bool skim,\r\n        uint256 share\r\n    ) external;\r\n\r\n    function allowance(address, address) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function asset() external view returns (IERC20);\r\n\r\n    function balanceOf(address) external view returns (uint256);\r\n\r\n    function bentoBox() external view returns (IBentoBox);\r\n\r\n    function borrow(address to, uint256 amount)\r\n        external\r\n        returns (uint256 part, uint256 share);\r\n\r\n    function claimOwnership() external;\r\n\r\n    function collateral() external view returns (IERC20);\r\n\r\n    function cook(\r\n        uint8[] calldata actions,\r\n        uint256[] calldata values,\r\n        bytes[] calldata datas\r\n    ) external payable returns (uint256 value1, uint256 value2);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function exchangeRate() external view returns (uint256);\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function getInitData(\r\n        IERC20 collateral_,\r\n        IERC20 asset_,\r\n        address oracle_,\r\n        bytes calldata oracleData_\r\n    ) external pure returns (bytes memory data);\r\n\r\n    function init(bytes calldata data) external payable;\r\n\r\n    function isSolvent(address user, bool open) external view returns (bool);\r\n\r\n    function liquidate(\r\n        address[] calldata users,\r\n        uint256[] calldata borrowParts,\r\n        address to,\r\n        address swapper,\r\n        bool open\r\n    ) external;\r\n\r\n    function masterContract() external view returns (address);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function nonces(address) external view returns (uint256);\r\n\r\n    function oracle() external view returns (IOracle);\r\n\r\n    function oracleData() external view returns (bytes memory);\r\n\r\n    function owner() external view returns (address);\r\n\r\n    function pendingOwner() external view returns (address);\r\n\r\n    function permit(\r\n        address owner_,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function removeAsset(address to, uint256 fraction)\r\n        external\r\n        returns (uint256 share);\r\n\r\n    function removeCollateral(address to, uint256 share) external;\r\n\r\n    function repay(\r\n        address to,\r\n        bool skim,\r\n        uint256 part\r\n    ) external returns (uint256 amount);\r\n\r\n    function setFeeTo(address newFeeTo) external;\r\n\r\n    function setSwapper(address swapper, bool enable) external;\r\n\r\n    function swappers(address) external view returns (bool);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function totalAsset() external view returns (Rebase memory total);\r\n\r\n    function totalBorrow() external view returns (Rebase memory total);\r\n\r\n    function totalCollateralShare() external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function transferOwnership(\r\n        address newOwner,\r\n        bool direct,\r\n        bool renounce\r\n    ) external;\r\n\r\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\r\n\r\n    function userBorrowPart(address) external view returns (uint256);\r\n\r\n    function userCollateralShare(address) external view returns (uint256);\r\n\r\n    function withdrawFees() external;\r\n}\r\n\r\ncontract BoringHelperV1 is Ownable {\r\n    using BoringMath for uint256;\r\n    using BoringERC20 for IERC20;\r\n    using BoringERC20 for IPair;\r\n    using BoringPair for IPair;\r\n\r\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\r\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\r\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\r\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\r\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\r\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\r\n\r\n    constructor(\r\n        IMasterChef chef_,\r\n        address maker_,\r\n        IERC20 joe_,\r\n        IERC20 WAVAX_,\r\n        IFactory joeFactory_,\r\n        IFactory pangolinFactory_,\r\n        IERC20 bar_\r\n    ) public {\r\n        chef = chef_;\r\n        maker = maker_;\r\n        joe = joe_;\r\n        WAVAX = WAVAX;\r\n        joeFactory = joeFactory_;\r\n        pangolinFactory = pangolinFactory_;\r\n        bar = bar_;\r\n    }\r\n\r\n    function setContracts(\r\n        IMasterChef chef_,\r\n        address maker_,\r\n        IERC20 joe_,\r\n        IERC20 WAVAX_,\r\n        IFactory joeFactory_,\r\n        IFactory pangolinFactory_,\r\n        IERC20 bar_\r\n    ) public onlyOwner {\r\n        chef = chef_;\r\n        maker = maker_;\r\n        joe = joe_;\r\n        WAVAX = WAVAX_;\r\n        joeFactory = joeFactory_;\r\n        pangolinFactory = pangolinFactory_;\r\n        bar = bar_;\r\n    }\r\n\r\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\r\n        if (token == WAVAX) {\r\n            return 1e18;\r\n        }\r\n        IPair pairPangolin;\r\n        IPair pairJoe;\r\n        if (pangolinFactory != IFactory(0)) {\r\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\r\n        }\r\n        if (joeFactory != IFactory(0)) {\r\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\r\n        }\r\n        if (\r\n            address(pairPangolin) == address(0) &&\r\n            address(pairJoe) == address(0)\r\n        ) {\r\n            return 0;\r\n        }\r\n\r\n        uint112 reserve0;\r\n        uint112 reserve1;\r\n        IERC20 token0;\r\n        if (address(pairPangolin) != address(0)) {\r\n            (\r\n                uint112 reserve0Pangolin,\r\n                uint112 reserve1Pangolin,\r\n\r\n            ) = pairPangolin.getReserves();\r\n            reserve0 += reserve0Pangolin;\r\n            reserve1 += reserve1Pangolin;\r\n            token0 = pairPangolin.token0();\r\n        }\r\n\r\n        if (address(pairJoe) != address(0)) {\r\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\r\n            .getReserves();\r\n            reserve0 += reserve0Joe;\r\n            reserve1 += reserve1Joe;\r\n            if (token0 == IERC20(0)) {\r\n                token0 = pairJoe.token0();\r\n            }\r\n        }\r\n\r\n        if (token0 == WAVAX) {\r\n            return (uint256(reserve1) * 1e18) / reserve0;\r\n        } else {\r\n            return (uint256(reserve0) * 1e18) / reserve1;\r\n        }\r\n    }\r\n\r\n    struct Factory {\r\n        IFactory factory;\r\n        uint256 allPairsLength;\r\n    }\r\n\r\n    struct UIInfo {\r\n        uint256 avaxBalance;\r\n        uint256 joeBalance;\r\n        uint256 joeBarBalance;\r\n        uint256 xjoeBalance;\r\n        uint256 xjoeSupply;\r\n        uint256 joeBarAllowance;\r\n        Factory[] factories;\r\n        uint256 avaxRate;\r\n        uint256 joeRate;\r\n        uint256 btcRate;\r\n        uint256 pendingJoe;\r\n        uint256 blockTimeStamp;\r\n    }\r\n\r\n    function getUIInfo(\r\n        address who,\r\n        IFactory[] calldata factoryAddresses,\r\n        IERC20 currency,\r\n        address[] calldata masterContracts\r\n    ) public view returns (UIInfo memory) {\r\n        UIInfo memory info;\r\n        info.avaxBalance = who.balance;\r\n\r\n        info.factories = new Factory[](factoryAddresses.length);\r\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\r\n            IFactory factory = factoryAddresses[i];\r\n            info.factories[i].factory = factory;\r\n            info.factories[i].allPairsLength = factory.allPairsLength();\r\n        }\r\n\r\n        if (currency != IERC20(0)) {\r\n            info.avaxRate = getAVAXRate(currency);\r\n        }\r\n\r\n        if (joe != IERC20(0)) {\r\n            info.joeRate = getAVAXRate(joe);\r\n            info.joeBalance = joe.balanceOf(who);\r\n            info.joeBarBalance = joe.balanceOf(address(bar));\r\n            info.joeBarAllowance = joe.allowance(who, address(bar));\r\n        }\r\n\r\n        if (bar != IERC20(0)) {\r\n            info.xjoeBalance = bar.balanceOf(who);\r\n            info.xjoeSupply = bar.totalSupply();\r\n        }\r\n\r\n        if (chef != IMasterChef(0)) {\r\n            uint256 poolLength = chef.poolLength();\r\n            uint256 pendingJoe;\r\n            for (uint256 i = 0; i < poolLength; i++) {\r\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\r\n                pendingJoe += pendingJoeAmt;\r\n            }\r\n            info.pendingJoe = pendingJoe;\r\n        }\r\n        info.blockTimeStamp = block.timestamp;\r\n\r\n        return info;\r\n    }\r\n\r\n    struct Balance {\r\n        IERC20 token;\r\n        uint256 balance;\r\n    }\r\n\r\n    struct BalanceFull {\r\n        IERC20 token;\r\n        uint256 totalSupply;\r\n        uint256 balance;\r\n        uint256 nonce;\r\n        uint256 rate;\r\n    }\r\n\r\n    struct TokenInfo {\r\n        IERC20 token;\r\n        uint256 decimals;\r\n        string name;\r\n        string symbol;\r\n        bytes32 DOMAIN_SEPARATOR;\r\n    }\r\n\r\n    function getTokenInfo(address[] calldata addresses)\r\n        public\r\n        view\r\n        returns (TokenInfo[] memory)\r\n    {\r\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\r\n\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            IERC20 token = IERC20(addresses[i]);\r\n            infos[i].token = token;\r\n\r\n            infos[i].name = token.name();\r\n            infos[i].symbol = token.symbol();\r\n            infos[i].decimals = token.decimals();\r\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\r\n        }\r\n\r\n        return infos;\r\n    }\r\n\r\n    function findBalances(address who, address[] calldata addresses)\r\n        public\r\n        view\r\n        returns (Balance[] memory)\r\n    {\r\n        Balance[] memory balances = new Balance[](addresses.length);\r\n\r\n        uint256 len = addresses.length;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            IERC20 token = IERC20(addresses[i]);\r\n            balances[i].token = token;\r\n            balances[i].balance = token.balanceOf(who);\r\n        }\r\n\r\n        return balances;\r\n    }\r\n\r\n    function getBalances(address who, IERC20[] calldata addresses)\r\n        public\r\n        view\r\n        returns (BalanceFull[] memory)\r\n    {\r\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\r\n\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            IERC20 token = addresses[i];\r\n            balances[i].totalSupply = token.totalSupply();\r\n            balances[i].token = token;\r\n            balances[i].balance = token.balanceOf(who);\r\n            balances[i].nonce = token.nonces(who);\r\n            balances[i].rate = getAVAXRate(token);\r\n        }\r\n\r\n        return balances;\r\n    }\r\n\r\n    struct PairBase {\r\n        IPair token;\r\n        IERC20 token0;\r\n        IERC20 token1;\r\n        uint256 totalSupply;\r\n    }\r\n\r\n    function getPairs(\r\n        IFactory factory,\r\n        uint256 fromID,\r\n        uint256 toID\r\n    ) public view returns (PairBase[] memory) {\r\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\r\n\r\n        for (uint256 id = fromID; id < toID; id++) {\r\n            IPair token = factory.allPairs(id);\r\n            uint256 i = id - fromID;\r\n            pairs[i].token = token;\r\n            pairs[i].token0 = token.token0();\r\n            pairs[i].token1 = token.token1();\r\n            pairs[i].totalSupply = token.totalSupply();\r\n        }\r\n        return pairs;\r\n    }\r\n\r\n    struct PairPoll {\r\n        IPair token;\r\n        uint256 reserve0;\r\n        uint256 reserve1;\r\n        uint256 totalSupply;\r\n        uint256 balance;\r\n    }\r\n\r\n    function pollPairs(address who, IPair[] calldata addresses)\r\n        public\r\n        view\r\n        returns (PairPoll[] memory)\r\n    {\r\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            IPair token = addresses[i];\r\n            pairs[i].token = token;\r\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\r\n            pairs[i].reserve0 = reserve0;\r\n            pairs[i].reserve1 = reserve1;\r\n            pairs[i].balance = token.balanceOf(who);\r\n            pairs[i].totalSupply = token.totalSupply();\r\n        }\r\n        return pairs;\r\n    }\r\n\r\n    struct PoolsInfo {\r\n        uint256 totalAllocPoint;\r\n        uint256 poolLength;\r\n    }\r\n\r\n    struct PoolInfo {\r\n        uint256 pid;\r\n        IPair lpToken;\r\n        uint256 allocPoint;\r\n        bool isPair;\r\n        IFactory factory;\r\n        IERC20 token0;\r\n        IERC20 token1;\r\n        string name;\r\n        string symbol;\r\n        uint8 decimals;\r\n    }\r\n\r\n    function getPools(uint256[] calldata pids)\r\n        public\r\n        view\r\n        returns (PoolsInfo memory, PoolInfo[] memory)\r\n    {\r\n        PoolsInfo memory info;\r\n        info.totalAllocPoint = chef.totalAllocPoint();\r\n        uint256 poolLength = chef.poolLength();\r\n        info.poolLength = poolLength;\r\n\r\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\r\n\r\n        for (uint256 i = 0; i < pids.length; i++) {\r\n            pools[i].pid = pids[i];\r\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\r\n            IPair pair = IPair(lpToken);\r\n            pools[i].lpToken = pair;\r\n            pools[i].allocPoint = allocPoint;\r\n\r\n            pools[i].name = pair.name();\r\n            pools[i].symbol = pair.symbol();\r\n            pools[i].decimals = pair.decimals();\r\n\r\n            pools[i].factory = pair.factory();\r\n            if (pools[i].factory != IFactory(0)) {\r\n                pools[i].isPair = true;\r\n                pools[i].token0 = pair.token0();\r\n                pools[i].token1 = pair.token1();\r\n            }\r\n        }\r\n        return (info, pools);\r\n    }\r\n\r\n    struct PoolFound {\r\n        uint256 pid;\r\n        uint256 balance;\r\n    }\r\n\r\n    function findPools(address who, uint256[] calldata pids)\r\n        public\r\n        view\r\n        returns (PoolFound[] memory)\r\n    {\r\n        PoolFound[] memory pools = new PoolFound[](pids.length);\r\n\r\n        for (uint256 i = 0; i < pids.length; i++) {\r\n            pools[i].pid = pids[i];\r\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\r\n        }\r\n\r\n        return pools;\r\n    }\r\n\r\n    struct UserPoolInfo {\r\n        uint256 pid;\r\n        uint256 balance; // Balance of pool tokens\r\n        uint256 totalSupply; // Token staked lp tokens\r\n        uint256 lpBalance; // Balance of lp tokens not staked\r\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\r\n        uint256 lpAllowance; // LP tokens approved for masterchef\r\n        uint256 reserve0;\r\n        uint256 reserve1;\r\n        uint256 rewardDebt;\r\n        uint256 pending; // Pending SUSHI\r\n    }\r\n\r\n    function pollPools(address who, uint256[] calldata pids)\r\n        public\r\n        view\r\n        returns (UserPoolInfo[] memory)\r\n    {\r\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\r\n\r\n        for (uint256 i = 0; i < pids.length; i++) {\r\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\r\n            pools[i].balance = amount;\r\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\r\n            pools[i].pending = pendingJoe;\r\n\r\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\r\n            pools[i].pid = pids[i];\r\n            IPair pair = IPair(lpToken);\r\n            IFactory factory = pair.factory();\r\n            if (factory != IFactory(0)) {\r\n                pools[i].totalSupply = pair.balanceOf(address(chef));\r\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\r\n                pools[i].lpBalance = pair.balanceOf(who);\r\n                pools[i].lpTotalSupply = pair.totalSupply();\r\n\r\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\r\n                pools[i].reserve0 = reserve0;\r\n                pools[i].reserve1 = reserve1;\r\n            }\r\n        }\r\n        return pools;\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/boringcrypto/BoringHelperV1.sol": {
        "BoringERC20": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d09bcfa03072cff40f2516bc706b1d7d799bd35445ad495335adee993d2f46f64736f6c634300060c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MULMOD 0xBC STATICCALL SUB SMOD 0x2C SELFDESTRUCT BLOCKHASH CALLCODE MLOAD PUSH12 0xC706B1D7D799BD35445AD495 CALLER GAS 0xDE 0xE9 SWAP4 0xD2 DELEGATECALL PUSH16 0x64736F6C634300060C00330000000000 ",
              "sourceMap": "3772:2348:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d09bcfa03072cff40f2516bc706b1d7d799bd35445ad495335adee993d2f46f64736f6c634300060c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D MULMOD 0xBC STATICCALL SUB SMOD 0x2C SELFDESTRUCT BLOCKHASH CALLCODE MLOAD PUSH12 0xC706B1D7D799BD35445AD495 CALLER GAS 0xDE 0xE9 SWAP4 0xD2 DELEGATECALL PUSH16 0x64736F6C634300060C00330000000000 ",
              "sourceMap": "3772:2348:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "DOMAIN_SEPARATOR(contract IERC20)": "infinite",
                "decimals(contract IERC20)": "infinite",
                "name(contract IERC20)": "infinite",
                "nonces(contract IERC20,address)": "infinite",
                "returnDataToString(bytes memory)": "infinite",
                "symbol(contract IERC20)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"BoringERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BoringHelperV1": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IMasterChef",
                  "name": "chef_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "maker_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "joe_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "WAVAX_",
                  "type": "address"
                },
                {
                  "internalType": "contract IFactory",
                  "name": "joeFactory_",
                  "type": "address"
                },
                {
                  "internalType": "contract IFactory",
                  "name": "pangolinFactory_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "bar_",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "WAVAX",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bar",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "chef",
              "outputs": [
                {
                  "internalType": "contract IMasterChef",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "addresses",
                  "type": "address[]"
                }
              ],
              "name": "findBalances",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.Balance[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "pids",
                  "type": "uint256[]"
                }
              ],
              "name": "findPools",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.PoolFound[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getAVAXRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "addresses",
                  "type": "address[]"
                }
              ],
              "name": "getBalances",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.BalanceFull[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IFactory",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "fromID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "toID",
                  "type": "uint256"
                }
              ],
              "name": "getPairs",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IPair",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.PairBase[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "pids",
                  "type": "uint256[]"
                }
              ],
              "name": "getPools",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalAllocPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "poolLength",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.PoolsInfo",
                  "name": "",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IPair",
                      "name": "lpToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isPair",
                      "type": "bool"
                    },
                    {
                      "internalType": "contract IFactory",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "symbol",
                      "type": "string"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.PoolInfo[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "addresses",
                  "type": "address[]"
                }
              ],
              "name": "getTokenInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "decimals",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "symbol",
                      "type": "string"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "DOMAIN_SEPARATOR",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.TokenInfo[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "contract IFactory[]",
                  "name": "factoryAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "masterContracts",
                  "type": "address[]"
                }
              ],
              "name": "getUIInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "avaxBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "joeBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "joeBarBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "xjoeBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "xjoeSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "joeBarAllowance",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IFactory",
                          "name": "factory",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "allPairsLength",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct BoringHelperV1.Factory[]",
                      "name": "factories",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "avaxRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "joeRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "btcRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pendingJoe",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "blockTimeStamp",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.UIInfo",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "joe",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "joeFactory",
              "outputs": [
                {
                  "internalType": "contract IFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maker",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pangolinFactory",
              "outputs": [
                {
                  "internalType": "contract IFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "contract IPair[]",
                  "name": "addresses",
                  "type": "address[]"
                }
              ],
              "name": "pollPairs",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IPair",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserve0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserve1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.PairPoll[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "pids",
                  "type": "uint256[]"
                }
              ],
              "name": "pollPools",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lpBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lpTotalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lpAllowance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserve0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserve1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rewardDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pending",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BoringHelperV1.UserPoolInfo[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IMasterChef",
                  "name": "chef_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "maker_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "joe_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "WAVAX_",
                  "type": "address"
                },
                {
                  "internalType": "contract IFactory",
                  "name": "joeFactory_",
                  "type": "address"
                },
                {
                  "internalType": "contract IFactory",
                  "name": "pangolinFactory_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "bar_",
                  "type": "address"
                }
              ],
              "name": "setContracts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x38A9 CODESIZE SUB DUP1 PUSH3 0x38A9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xBC JUMP JUMPDEST CALLER PUSH1 0x60 SHL PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP8 DUP10 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP1 SLOAD DUP1 DUP9 AND SWAP1 DUP8 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP7 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x17F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0xD7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH3 0xE4 DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0xF7 DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD SWAP1 SWAP7 POP PUSH3 0x10A DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x11D DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0x80 DUP10 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x130 DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x143 DUP2 PUSH3 0x166 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x156 DUP2 PUSH3 0x166 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x3707 PUSH3 0x1A2 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1A82 MSTORE DUP1 PUSH2 0x1FFE MSTORE POP PUSH2 0x3707 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A38466E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB985A3A0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB985A3A0 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xCA0F937C EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD3FF95C7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xD9116DC3 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0x2BD JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8A38466E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA959DD80 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xAC6091F8 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB295D2A1 EQ PUSH2 0x258 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4A69AC50 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4A69AC50 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x50655D8C EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6A385AE9 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x73B295C2 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x7E3E2596 EQ PUSH2 0x1F5 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x15243475 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x1FC8BC5D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2952DDE8 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x3009F414 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E61 JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP3 SWAP2 SWAP1 PUSH2 0x3490 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E61 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x331A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x31B3 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x176F JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED4 JUMP JUMPDEST PUSH2 0x177E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x27B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2A JUMP JUMPDEST PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2A79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND BALANCE DUP2 MSTORE DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x332 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x31F PUSH2 0x2ADA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x317 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x351 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0xC0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x574F2BA3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 PUSH1 0xC0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x454 JUMPI PUSH2 0x44E DUP6 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x61E JUMPI PUSH1 0x2 SLOAD PUSH2 0x47A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20CB JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4B0 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x539 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD SWAP2 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x5C8 SWAP3 DUP14 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x737 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x65F SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x81E3EDA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFCD4263 DUP4 DUP15 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x875 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3023 JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP3 ADD SWAP2 POP PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MSTORE POP JUMPDEST TIMESTAMP PUSH2 0x160 DUP3 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C2 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17CAF6F1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40F1F6D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x81E3EDA SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 POP PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA21 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA0E PUSH2 0x2B0B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA06 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xDBD JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0xA3B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA4E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1526FE27 DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0xA7A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAED SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB05 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB36 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xB58 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24FD JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0xB85 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25C0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH2 0xBB3 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2607 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBBF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x120 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH2 0xBEA DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26C0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC31 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDB2 JUMPI PUSH1 0x1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC59 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCEC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xD8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0xA27 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE20 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE0D PUSH2 0x2B5E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE05 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x93F1A40B DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xE4C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE71 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x3082 JUMP JUMPDEST POP SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xED0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFCD4263 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0xEFC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF75 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3023 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF87 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1526FE27 DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0xFB5 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1004 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST POP POP POP SWAP1 POP DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1039 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x104C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE DUP1 PUSH1 0x0 PUSH2 0x106D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26C0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x10B0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x110C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP13 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115D SWAP3 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x11B9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11F4 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1250 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x12DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x133D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x137C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x13A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0xE26 SWAP2 POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1422 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x140F PUSH2 0x2BB1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1407 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x143E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1462 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH2 0x1485 SWAP1 DUP3 AND PUSH2 0x24FD JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1491 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x14B2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25C0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x14DF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2607 JUMP JUMPDEST PUSH1 0xFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1510 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2779 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x151C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1428 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x2BEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x15BA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x160A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x161E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1642 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x164E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x166B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x16A8 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F8 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1704 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD MSTORE PUSH2 0x1726 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP9 PUSH2 0x2836 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1732 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x174B DUP2 PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1757 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 DUP4 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x17C0 PUSH2 0x2C24 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17B8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E3DD18B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x1E3DD18B SWAP1 PUSH2 0x180F SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP4 SUB SWAP1 POP DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1875 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190A SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1916 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1987 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AB SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A58 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1AE4 PUSH2 0x2BEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1ADC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1B13 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B37 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BF3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C10 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4C SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1CA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D35 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DA2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D8F PUSH2 0x2AF1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D87 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x1DBC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1DCF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x93F1A40B DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1DF8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1D SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E6C SWAP2 SWAP1 PUSH2 0x3082 JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F00 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1EED PUSH2 0x2ADA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1EE5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI PUSH1 0x0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x1F1D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F32 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F41 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1F7E SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1F07 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x204D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2044 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP8 DUP10 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 AND SWAP4 DUP8 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x20F3 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2193 JUMPI PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xE6A43905 SWAP3 PUSH2 0x2140 SWAP3 DUP10 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x216C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2190 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x222C JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x21D9 SWAP4 DUP11 SWAP4 SWAP2 AND SWAP2 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2229 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO PUSH2 0x224A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x225A JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2366 JUMPI PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E1 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD SWAP4 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x233D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2361 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x247C JUMPI PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E9 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP6 DUP2 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2479 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2452 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2476 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x24C4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x24B7 JUMPI INVALID JUMPDEST DIV SWAP6 POP POP POP POP POP POP PUSH2 0x24E9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x24B7 JUMPI INVALID JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2544 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x257F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3F3F3F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x25B8 JUMP JUMPDEST PUSH2 0x25B8 DUP2 PUSH2 0x2914 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2544 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x264E SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2689 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x268E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x26A1 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x26AC JUMPI PUSH1 0x12 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x30A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2707 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2747 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x275A JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x2765 JUMPI PUSH1 0x0 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3644E515 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x27C3 SWAP2 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2817 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x2822 JUMPI PUSH1 0x0 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1388 PUSH4 0x7ECEBE00 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x285E SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2897 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x28EB JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x28F7 JUMPI PUSH1 0x0 NOT PUSH2 0x290B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x290B SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 DUP3 MLOAD LT PUSH2 0x293A JUMPI DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2933 SWAP2 SWAP1 PUSH2 0x2F9D JUMP JUMPDEST SWAP1 POP PUSH2 0x24E9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 EQ ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2976 JUMPI POP DUP3 DUP2 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2964 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2983 JUMPI PUSH1 0x1 ADD PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x299E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2A00 JUMPI POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x29EE JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2A50 JUMPI DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2A14 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP2 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2A2E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x3F3F3F PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C5C JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2CB2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2CD2 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE SWAP3 POP DUP3 DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x2CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CFE DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3674 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D18 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D23 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2D49 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D63 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D6F DUP7 DUP3 DUP8 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2DA8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2DB3 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2DCE JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2DDA DUP11 DUP4 DUP12 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2DEF DUP3 PUSH2 0x36A4 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2E04 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2E11 DUP10 DUP3 DUP11 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E38 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD PUSH2 0x2E43 DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E73 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E88 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2E94 DUP6 DUP3 DUP7 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2D23 DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF3 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2F22 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2F2D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2F3D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x2F4D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x2F5D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x2F6D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x2F7D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x2F8D DUP2 PUSH2 0x36A4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FC3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x25B8 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x2FEE DUP2 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x2FFF DUP2 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3018 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3038 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x304A DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3065 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3071 DUP8 DUP3 DUP9 ADD PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP4 SWAP7 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3094 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D23 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3109 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30D9 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x313F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x317B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3674 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31D0 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD AND DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI PUSH2 0x330A DUP5 DUP4 MLOAD PUSH2 0x3153 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP1 DUP5 MUL DUP7 ADD DUP4 ADD DUP8 DUP6 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33B7 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 PUSH2 0x335E DUP6 DUP4 MLOAD PUSH2 0x311A JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x337B DUP3 DUP8 ADD DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP7 DUP4 SUB DUP3 DUP9 ADD MSTORE PUSH2 0x3395 DUP4 DUP3 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x80 SWAP5 DUP6 ADD MLOAD SWAP8 SWAP1 SWAP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x333E JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x33E2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD PUSH2 0x34A1 DUP5 DUP8 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 DUP5 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 MLOAD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x80 SWAP2 DUP3 DUP7 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP9 ADD DUP6 ADD DUP2 DUP11 ADD DUP9 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x35A1 JUMPI PUSH1 0x7F NOT DUP12 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0x140 DUP2 MLOAD DUP6 MSTORE DUP6 DUP3 ADD MLOAD PUSH2 0x34EE DUP8 DUP8 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP11 DUP3 ADD MLOAD PUSH2 0x3507 DUP13 DUP8 ADD DUP3 PUSH2 0x3114 JUMP JUMPDEST POP DUP10 DUP3 ADD MLOAD PUSH2 0x3518 DUP12 DUP8 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP PUSH1 0xA0 DUP1 DUP4 ADD MLOAD PUSH2 0x352B DUP3 DUP9 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP POP PUSH1 0xC0 DUP1 DUP4 ADD MLOAD PUSH2 0x353F DUP3 DUP9 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP POP PUSH1 0xE0 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP9 ADD MSTORE PUSH2 0x3558 DUP4 DUP9 ADD DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x100 DUP1 DUP4 ADD MLOAD DUP7 DUP4 SUB DUP3 DUP9 ADD MSTORE PUSH2 0x3574 DUP4 DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x120 DUP1 DUP4 ADD MLOAD SWAP3 POP PUSH2 0x358D DUP2 DUP8 ADD DUP5 PUSH2 0x3162 JUMP JUMPDEST POP SWAP7 DUP6 ADD SWAP7 SWAP4 POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x34C4 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x180 DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x360D PUSH2 0x1A0 DUP6 ADD DUP4 PUSH2 0x30C6 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD PUSH2 0x100 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x120 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x140 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x160 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x368F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3677 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x369E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36B9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB0 LOG4 CALLVALUE TIMESTAMP LT 0x22 PUSH20 0x221C2096C58FC7C4CC486B6612517FF8FC873E7E PUSH2 0xCE32 DELEGATECALL PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "16648:12612:0:-:0;;;17417:416;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3623:10;3615:18;;;;17642:4;:12;;-1:-1:-1;;;;;;17642:12:0;;;-1:-1:-1;;;;;17642:12:0;;;;;;;-1:-1:-1;17665:14:0;;;;;;;;;;;;;;17690:3;:10;;;;;;;;;;;;;;17719:5;;;;;;17711:13;;;;;;17735:10;:24;;;;;;;;;;;;;;17770:15;:34;;;;;;;;;;;;;-1:-1:-1;17815:3:0;:10;;;;;;;;;;;;;16648:12612;;665:1263:-1;;;;;;;;972:3;960:9;951:7;947:23;943:33;940:2;;;-1:-1;;979:12;940:2;589:6;583:13;601:52;647:5;601:52;:::i;:::-;1161:2;1211:22;;83:13;1031:93;;-1:-1;101:33;83:13;101:33;:::i;:::-;1280:2;1343:22;;237:13;1169:74;;-1:-1;255:46;237:13;255:46;:::i;:::-;1412:2;1475:22;;237:13;1288:87;;-1:-1;255:46;237:13;255:46;:::i;:::-;1544:3;1611:22;;407:13;1420:87;;-1:-1;425:49;407:13;425:49;:::i;:::-;1680:3;1747:22;;407:13;1553:90;;-1:-1;425:49;407:13;425:49;:::i;:::-;1816:3;1880:22;;237:13;1689:90;;-1:-1;255:46;237:13;255:46;:::i;:::-;1825:87;;;;934:994;;;;;;;;;;:::o;2503:117::-;-1:-1;;;;;2437:54;;2562:35;;2552:2;;2611:1;;2601:12;2552:2;2546:74;:::o;:::-;16648:12612:0;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {
                "268": [
                  {
                    "length": 32,
                    "start": 6786
                  },
                  {
                    "length": 32,
                    "start": 8190
                  }
                ]
              },
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A38466E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB985A3A0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB985A3A0 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xCA0F937C EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD3FF95C7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xD9116DC3 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0x2BD JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x8A38466E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA959DD80 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xAC6091F8 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xB295D2A1 EQ PUSH2 0x258 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x4A69AC50 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4A69AC50 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x50655D8C EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6A385AE9 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x73B295C2 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x7E3E2596 EQ PUSH2 0x1F5 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x15243475 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x1FC8BC5D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2952DDE8 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x3009F414 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E61 JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP3 SWAP2 SWAP1 PUSH2 0x3490 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E61 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x331A JUMP JUMPDEST PUSH2 0x157 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x31B3 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x176F JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED4 JUMP JUMPDEST PUSH2 0x177E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x27B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2A JUMP JUMPDEST PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2A79 JUMP JUMPDEST PUSH2 0x2D5 PUSH2 0x2A79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND BALANCE DUP2 MSTORE DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x332 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x31F PUSH2 0x2ADA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x317 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x351 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0xC0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x574F2BA3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 PUSH1 0xC0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x454 JUMPI PUSH2 0x44E DUP6 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x61E JUMPI PUSH1 0x2 SLOAD PUSH2 0x47A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20CB JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4B0 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x539 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD SWAP2 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x5C8 SWAP3 DUP14 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x737 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x65F SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x81E3EDA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFCD4263 DUP4 DUP15 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x875 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3023 JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP3 ADD SWAP2 POP PUSH1 0x1 ADD PUSH2 0x7D5 JUMP JUMPDEST POP PUSH2 0x140 DUP4 ADD MSTORE POP JUMPDEST TIMESTAMP PUSH2 0x160 DUP3 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C2 PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17CAF6F1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x922 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40F1F6D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x81E3EDA SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 POP PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA21 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA0E PUSH2 0x2B0B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA06 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xDBD JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0xA3B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA4E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1526FE27 DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0xA7A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAED SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB05 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB36 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xB58 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24FD JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB64 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0xB85 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25C0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB91 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD DUP2 SWAP1 MSTORE POP PUSH2 0xBB3 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2607 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBBF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x120 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH2 0xBEA DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26C0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC31 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDB2 JUMPI PUSH1 0x1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC59 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCEC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xD8D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0xA27 JUMP JUMPDEST POP SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE20 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE0D PUSH2 0x2B5E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE05 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x93F1A40B DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xE4C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE71 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x3082 JUMP JUMPDEST POP SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xED0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFCD4263 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0xEFC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF75 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3023 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF87 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1526FE27 DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0xFB5 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1004 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST POP POP POP SWAP1 POP DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1039 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x104C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE DUP1 PUSH1 0x0 PUSH2 0x106D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26C0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x10B0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x110C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP13 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115D SWAP3 SWAP2 SWAP1 PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x11B9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11F4 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1250 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x12DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x133D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1361 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x137C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x13A2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0xE26 SWAP2 POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1422 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x140F PUSH2 0x2BB1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1407 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1534 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x143E JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1453 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1462 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH2 0x1485 SWAP1 DUP3 AND PUSH2 0x24FD JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1491 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x14B2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25C0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x14DF DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2607 JUMP JUMPDEST PUSH1 0xFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1510 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2779 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x151C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1428 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x159E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x158B PUSH2 0x2BEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1583 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x15BA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x160A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x161E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1642 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x164E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x166B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x16A8 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F8 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1704 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD MSTORE PUSH2 0x1726 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP9 PUSH2 0x2836 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1732 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x174B DUP2 PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1757 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 DUP4 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x17C0 PUSH2 0x2C24 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17B8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E3DD18B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x1E3DD18B SWAP1 PUSH2 0x180F SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP4 SUB SWAP1 POP DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1875 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190A SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1916 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1973 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1987 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AB SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A58 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AF7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1AE4 PUSH2 0x2BEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1ADC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1B13 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B37 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1BF3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C10 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4C SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1CA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1D35 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DA2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D8F PUSH2 0x2AF1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D87 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x1DBC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1DCF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x93F1A40B DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1DF8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1D SWAP3 SWAP2 SWAP1 PUSH2 0x365D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E6C SWAP2 SWAP1 PUSH2 0x3082 JUMP JUMPDEST POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F00 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1EED PUSH2 0x2ADA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1EE5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI PUSH1 0x0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x1F1D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F32 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F41 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1F7E SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FCE SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1F07 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x204D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2044 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP8 DUP10 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP1 SLOAD DUP7 AND SWAP4 DUP8 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x20F3 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2193 JUMPI PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xE6A43905 SWAP3 PUSH2 0x2140 SWAP3 DUP10 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x216C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2190 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x222C JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0xE6A43905 SWAP4 PUSH2 0x21D9 SWAP4 DUP11 SWAP4 SWAP2 AND SWAP2 ADD PUSH2 0x3199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2229 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO PUSH2 0x224A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x225A JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2366 JUMPI PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E1 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD SWAP4 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x233D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2361 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x247C JUMPI PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E9 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST POP SWAP6 DUP2 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2479 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2452 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2476 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x24C4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x24B7 JUMPI INVALID JUMPDEST DIV SWAP6 POP POP POP POP POP POP PUSH2 0x24E9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH8 0xDE0B6B3A7640000 MUL DUP2 PUSH2 0x24B7 JUMPI INVALID JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6FDDE03 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2544 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x257F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25AF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3F3F3F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x25B8 JUMP JUMPDEST PUSH2 0x25B8 DUP2 PUSH2 0x2914 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2544 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x264E SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2689 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x268E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x26A1 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x26AC JUMPI PUSH1 0x12 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x30A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2707 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2742 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2747 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x275A JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x2765 JUMPI PUSH1 0x0 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3644E515 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0x27C3 SWAP2 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2817 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x2822 JUMPI PUSH1 0x0 PUSH2 0x25B8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1388 PUSH4 0x7ECEBE00 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x285E SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2897 SWAP2 SWAP1 PUSH2 0x3169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x28EB JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x28F7 JUMPI PUSH1 0x0 NOT PUSH2 0x290B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x290B SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 DUP3 MLOAD LT PUSH2 0x293A JUMPI DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2933 SWAP2 SWAP1 PUSH2 0x2F9D JUMP JUMPDEST SWAP1 POP PUSH2 0x24E9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 EQ ISZERO PUSH2 0x2A59 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2976 JUMPI POP DUP3 DUP2 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2964 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2983 JUMPI PUSH1 0x1 ADD PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x299E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x2A00 JUMPI POP DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x29EE JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2A50 JUMPI DUP4 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2A14 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP2 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2A2E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x3F3F3F PUSH1 0xE8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C5C JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2CB2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2CD2 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE SWAP3 POP DUP3 DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x2CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CFE DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3674 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D18 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D23 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2D49 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D63 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D6F DUP7 DUP3 DUP8 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D3E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2DA8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2DB3 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2DCE JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2DDA DUP11 DUP4 DUP12 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2DEF DUP3 PUSH2 0x36A4 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2E04 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2E11 DUP10 DUP3 DUP11 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E38 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD PUSH2 0x2E43 DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 SWAP1 SWAP8 ADD MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E73 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E88 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2E94 DUP6 DUP3 DUP7 ADD PUSH2 0x2C4B JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2D23 DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EF3 DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2F22 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2F2D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2F3D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x2F4D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH2 0x2F5D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x2F6D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x2F7D DUP2 PUSH2 0x36A4 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH2 0x2F8D DUP2 PUSH2 0x36A4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FC3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x25B8 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x2FEE DUP2 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x2FFF DUP2 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3018 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3038 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x304A DUP2 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3065 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3071 DUP8 DUP3 DUP9 ADD PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x60 SWAP7 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP4 SWAP7 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3094 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2D23 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3109 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30D9 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x313F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x317B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3674 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31D0 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3247 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD AND DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI PUSH2 0x330A DUP5 DUP4 MLOAD PUSH2 0x3153 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP1 DUP5 MUL DUP7 ADD DUP4 ADD DUP8 DUP6 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33B7 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 PUSH2 0x335E DUP6 DUP4 MLOAD PUSH2 0x311A JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x337B DUP3 DUP8 ADD DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP7 DUP4 SUB DUP3 DUP9 ADD MSTORE PUSH2 0x3395 DUP4 DUP3 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x80 SWAP5 DUP6 ADD MLOAD SWAP8 SWAP1 SWAP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x333E JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x33E2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD PUSH2 0x34A1 DUP5 DUP8 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 DUP5 DUP2 ADD DUP4 SWAP1 MSTORE DUP6 MLOAD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x80 SWAP2 DUP3 DUP7 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP9 ADD DUP6 ADD DUP2 DUP11 ADD DUP9 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x35A1 JUMPI PUSH1 0x7F NOT DUP12 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0x140 DUP2 MLOAD DUP6 MSTORE DUP6 DUP3 ADD MLOAD PUSH2 0x34EE DUP8 DUP8 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP11 DUP3 ADD MLOAD PUSH2 0x3507 DUP13 DUP8 ADD DUP3 PUSH2 0x3114 JUMP JUMPDEST POP DUP10 DUP3 ADD MLOAD PUSH2 0x3518 DUP12 DUP8 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP PUSH1 0xA0 DUP1 DUP4 ADD MLOAD PUSH2 0x352B DUP3 DUP9 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP POP PUSH1 0xC0 DUP1 DUP4 ADD MLOAD PUSH2 0x353F DUP3 DUP9 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP POP PUSH1 0xE0 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP9 ADD MSTORE PUSH2 0x3558 DUP4 DUP9 ADD DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x100 DUP1 DUP4 ADD MLOAD DUP7 DUP4 SUB DUP3 DUP9 ADD MSTORE PUSH2 0x3574 DUP4 DUP3 PUSH2 0x3127 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x120 DUP1 DUP4 ADD MLOAD SWAP3 POP PUSH2 0x358D DUP2 DUP8 ADD DUP5 PUSH2 0x3162 JUMP JUMPDEST POP SWAP7 DUP6 ADD SWAP7 SWAP4 POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x34C4 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x180 DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x360D PUSH2 0x1A0 DUP6 ADD DUP4 PUSH2 0x30C6 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD PUSH2 0x100 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x120 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x140 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x160 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD MLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x368F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3677 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x369E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x36B9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB0 LOG4 CALLVALUE TIMESTAMP LT 0x22 PUSH20 0x221C2096C58FC7C4CC486B6612517FF8FC873E7E PUSH2 0xCE32 DELEGATECALL PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "16648:12612:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20305:1575;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16829:23;;;:::i;:::-;;;;;;;:::i;25941:1123::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;28040:1217::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22293:597::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16919:20::-;;;:::i;23394:626::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17086:19::-;;;:::i;24160:579::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17159:26::-;;;:::i;3542:30::-;;;:::i;24911:651::-;;;;;;:::i;:::-;;:::i;27153:397::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17249:31::-;;;:::i;17004:17::-;;;:::i;22898:488::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17841:437::-;;;;;;:::i;:::-;;:::i;:::-;;18286:1535;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17344:17::-;;;:::i;20305:1575::-;20492:13;;:::i;:::-;20518:18;;:::i;:::-;-1:-1:-1;;;;;20566:11:0;;;20547:30;;20621:16;-1:-1:-1;;;;;20607:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;20590:14:0;;;:55;20661:9;20656:243;20676:27;;;20656:243;;;20725:16;20744;;20761:1;20744:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;20725:38;;20806:7;20778:4;:14;;;20793:1;20778:17;;;;;;;;;;;;;;:25;;:35;-1:-1:-1;;;;;20778:35:0;;;-1:-1:-1;;;;;20778:35:0;;;;;20863:7;-1:-1:-1;;;;;20863:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20828:4;:14;;;20843:1;20828:17;;;;;;;;;;;;;;;;;;;:32;:59;-1:-1:-1;20705:3:0;;20656:243;;;-1:-1:-1;;;;;;20915:21:0;;;20911:91;;20969:21;20981:8;20969:11;:21::i;:::-;20953:13;;;:37;20911:91;21018:3;;-1:-1:-1;;;;;21018:3:0;:16;21014:264;;21078:3;;21066:16;;-1:-1:-1;;;;;21078:3:0;21066:11;:16::i;:::-;21051:12;;;:31;21115:3;;:18;;-1:-1:-1;;;21115:18:0;;-1:-1:-1;;;;;21115:3:0;;;;:13;;:18;;21129:3;;21115:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21097:15;;;:36;21169:3;;21191;;21169:27;;-1:-1:-1;;;21169:27:0;;-1:-1:-1;;;;;21169:3:0;;;;:13;;:27;;21191:3;;;21169:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21148:18;;;;:48;;;;21234:3;;21261;;21234:32;;-1:-1:-1;;;21234:32:0;;-1:-1:-1;;;;;21234:3:0;;;;:13;;:32;;21248:3;;21261;;;;21234:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21211:20;;;:55;21014:264;21294:3;;-1:-1:-1;;;;;21294:3:0;:16;21290:136;;21346:3;;:18;;-1:-1:-1;;;21346:18:0;;-1:-1:-1;;;;;21346:3:0;;;;:13;;:18;;21360:3;;21346:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21327:16;;;:37;21397:3;;:17;;;-1:-1:-1;;;21397:17:0;;;;-1:-1:-1;;;;;21397:3:0;;;;:15;;:17;;;;;;;;;;;;;;;:3;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21379:15;;;:35;21290:136;21462:1;21442:4;-1:-1:-1;;;;;21442:4:0;:22;21438:363;;21481:18;21502:4;;;;;;;;;-1:-1:-1;;;;;21502:4:0;-1:-1:-1;;;;;21502:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21481:38;-1:-1:-1;21534:18:0;;21567:180;21591:10;21587:1;:14;21567:180;;;21628:21;21659:4;;;;;;;;;-1:-1:-1;;;;;21659:4:0;-1:-1:-1;;;;;21659:18:0;;21678:1;21681:3;21659:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21659:26:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;21704:27:0;;;;;-1:-1:-1;21603:3:0;;21567:180;;;-1:-1:-1;21761:15:0;;;:28;-1:-1:-1;21438:363:0;21833:15;21811:19;;;:37;:19;20305:1575;-1:-1:-1;;;;;;;20305:1575:0:o;16829:23::-;;;-1:-1:-1;;;;;16829:23:0;;:::o;25941:1123::-;26032:16;;:::i;:::-;26050:17;26085:21;;:::i;:::-;26140:4;;;;;;;;-1:-1:-1;;;;;26140:4:0;-1:-1:-1;;;;;26140:20:0;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26117:45;;:20;26194:4;;:17;;;-1:-1:-1;;;26194:17:0;;;;-1:-1:-1;;;;;26194:4:0;;;;:15;;:17;;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26222:15;;;:28;;;26173:38;-1:-1:-1;26263:23:0;26304:4;-1:-1:-1;;;;;26289:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;26263:53;;26334:9;26329:697;26349:15;;;26329:697;;;26401:4;;26406:1;26401:7;;;;;;;;;;;;;26386:5;26392:1;26386:8;;;;;;;;;;;;;;;;;;:22;:12;26467:4;;26386:12;;-1:-1:-1;;;;;26467:4:0;:13;26481:4;;26486:1;26481:7;;;;;;;;;;;;;26467:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26423:66;;;;;;26504:10;26523:7;26504:27;;26565:4;26546:5;26552:1;26546:8;;;;;;;;;;;;;;:16;;:23;-1:-1:-1;;;;;26546:23:0;;;-1:-1:-1;;;;;26546:23:0;;;;;26606:10;26584:5;26590:1;26584:8;;;;;;;;;;;;;;:19;;:32;;;;;26649:11;:4;-1:-1:-1;;;;;26649:9:0;;:11::i;:::-;26633:5;26639:1;26633:8;;;;;;;;;;;;;;:13;;:27;;;;26693:13;:4;-1:-1:-1;;;;;26693:11:0;;:13::i;:::-;26675:5;26681:1;26675:8;;;;;;;;;;;;;;:15;;:31;;;;26741:15;:4;-1:-1:-1;;;;;26741:13:0;;:15::i;:::-;26721:5;26727:1;26721:8;;;;;;;;;;;;;;:17;;:35;;;;;;;;;;;26792:14;:4;-1:-1:-1;;;;;26792:12:0;;:14::i;:::-;26773:5;26779:1;26773:8;;;;;;;;;;;;;;:16;;:33;-1:-1:-1;;;;;26773:33:0;;;-1:-1:-1;;;;;26773:33:0;;;;;26854:1;-1:-1:-1;;;;;26825:31:0;:5;26831:1;26825:8;;;;;;;;;;;;;;:16;;;-1:-1:-1;;;;;26825:31:0;;26821:194;;26895:4;26877:5;26883:1;26877:8;;;;;;;;;;;;;;:15;;:22;;;;;;;;;;;26936:4;-1:-1:-1;;;;;26936:11:0;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26918:5;26924:1;26918:8;;;;;;;;;;;;;;:15;;:31;-1:-1:-1;;;;;26918:31:0;;;-1:-1:-1;;;;;26918:31:0;;;;;26986:4;-1:-1:-1;;;;;26986:11:0;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26968:5;26974:1;26968:8;;;;;;;;;;;;;;:15;;:31;-1:-1:-1;;;;;26968:31:0;;;-1:-1:-1;;;;;26968:31:0;;;;;26821:194;-1:-1:-1;;;26366:3:0;;26329:697;;;-1:-1:-1;27044:4:0;;-1:-1:-1;27050:5:0;;-1:-1:-1;;25941:1123:0;;;;;;:::o;28040:1217::-;28145:21;;28233:4;-1:-1:-1;;;;;28214:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;28184:61;;28263:9;28258:969;28278:15;;;28258:969;;;28316:14;28336:4;;-1:-1:-1;;;;;28336:4:0;:13;28350:4;;28355:1;28350:7;;;;;;;;;;;;;28359:3;28336:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28315:48;;;28397:6;28378:5;28384:1;28378:8;;;;;;;;;;;;;;;;;;;:16;:25;-1:-1:-1;28447:4:0;;-1:-1:-1;;;;;28447:4:0;:18;28466:4;;28471:1;28466:7;;;;;;;;;;;;;28475:3;28447:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28447:32:0;;;;;;;;;;;;:::i;:::-;28418:61;;;;;28513:10;28494:5;28500:1;28494:8;;;;;;;;;;;;;;;;;;:16;;:29;28541:15;28566:4;;-1:-1:-1;;;;;28566:4:0;:13;28580:4;;28585:1;28580:7;;;;;;;;;;;;;28566:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28540:48;;;;;28618:4;;28623:1;28618:7;;;;;;;;;;;;;28603:5;28609:1;28603:8;;;;;;;;;;;;;;;;;;:22;28659:7;28603:12;28701:14;-1:-1:-1;;;;;28701:12:0;;;:14::i;:::-;28682:33;-1:-1:-1;;;;;;28734:22:0;;;28730:486;;28823:4;;28800:29;;-1:-1:-1;;;28800:29:0;;-1:-1:-1;;;;;28800:14:0;;;;;;:29;;28823:4;;;;28800:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28777:5;28783:1;28777:8;;;;;;;;;;;;;;:20;;:52;;;;;28871:4;-1:-1:-1;;;;;28871:14:0;;28886:3;28899:4;;;;;;;;-1:-1:-1;;;;;28899:4:0;28871:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28848:5;28854:1;28848:8;;;;;;;;;;;;;;;;;;:20;;:57;28945:19;;-1:-1:-1;;;28945:19:0;;-1:-1:-1;;;;;28945:14:0;;;;;:19;;28960:3;;28945:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28924:5;28930:1;28924:8;;;;;;;;;;;;;;:18;;:40;;;;;29008:4;-1:-1:-1;;;;;29008:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28983:5;28989:1;28983:8;;;;;;;;;;;;;;:22;;:43;;;;;29048:16;29066;29088:4;-1:-1:-1;;;;;29088:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29047:59;;;;;29145:8;-1:-1:-1;;;;;29125:28:0;:5;29131:1;29125:8;;;;;;;;;;;;;;:17;;:28;;;;;29192:8;-1:-1:-1;;;;;29172:28:0;:5;29178:1;29172:8;;;;;;;;;;;;;;:17;;:28;;;;;28730:486;;;-1:-1:-1;;28295:3:0;;;;;-1:-1:-1;28258:969:0;;-1:-1:-1;;28258:969:0;;-1:-1:-1;29244:5:0;28040:1217;-1:-1:-1;;;;28040:1217:0:o;22293:597::-;22393:18;;22472:9;-1:-1:-1;;;;;22456:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22429:60;;22507:9;22502:356;22522:20;;;22502:356;;;22564:12;22586:9;;22596:1;22586:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;22564:35;;22631:5;22614;22620:1;22614:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22614:22:0;;;;;22669:12;;:10;;;:12::i;:::-;22653:5;22659:1;22653:8;;;;;;;;;;;;;;:13;;:28;;;;22714:14;:5;-1:-1:-1;;;;;22714:12:0;;:14::i;:::-;22696:5;22702:1;22696:8;;;;;;;;;;;;;;:15;;:32;;;;22763:16;:5;-1:-1:-1;;;;;22763:14:0;;:16::i;:::-;22743:36;;:5;22749:1;22743:8;;;;;;;;;;;;;;:17;;:36;;;;;22822:24;:5;-1:-1:-1;;;;;22822:22:0;;:24::i;:::-;22794:5;22800:1;22794:8;;;;;;;;;;;;;;;;;;:25;;:52;-1:-1:-1;22544:3:0;;22502:356;;;-1:-1:-1;22877:5:0;22293:597;-1:-1:-1;;;22293:597:0:o;16919:20::-;;;-1:-1:-1;;;;;16919:20:0;;:::o;23394:626::-;23505:20;;23593:9;-1:-1:-1;;;;;23575:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23543:67;;23628:9;23623:362;23643:20;;;23623:362;;;23685:12;23700:9;;23710:1;23700:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;23685:27;;23753:5;-1:-1:-1;;;;;23753:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23727:8;23736:1;23727:11;;;;;;;;;;;;;;:23;;:45;;;;;23807:5;23787:8;23796:1;23787:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23787:25:0;;;;;23849:20;;-1:-1:-1;;;23849:20:0;;:15;;;;;;:20;;23865:3;;23849:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23827:8;23836:1;23827:11;;;;;;;;;;;;;;;;;;:19;;:42;23904:17;-1:-1:-1;;;;;23904:12:0;;23917:3;23904:12;:17::i;:::-;23884:8;23893:1;23884:11;;;;;;;;;;;;;;:17;;:37;;;;;23955:18;23967:5;23955:11;:18::i;:::-;23936:8;23945:1;23936:11;;;;;;;;;;;;;;;;;;:16;;:37;-1:-1:-1;23665:3:0;;23623:362;;17086:19;;;-1:-1:-1;;;;;17086:19:0;;:::o;24160:579::-;24281:17;24311:23;24359:6;24352:4;:13;-1:-1:-1;;;;;24337:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;24311:55:0;-1:-1:-1;24397:6:0;24379:330;24410:4;24405:2;:9;24379:330;;;24451:20;;-1:-1:-1;;;24451:20:0;;24437:11;;-1:-1:-1;;;;;24451:16:0;;;;;:20;;24468:2;;24451:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24437:34;;24486:9;24503:6;24498:2;:11;24486:23;;24541:5;24524;24530:1;24524:8;;;;;;;;;;;;;;:14;;:22;-1:-1:-1;;;;;24524:22:0;;;-1:-1:-1;;;;;24524:22:0;;;;;24579:5;-1:-1:-1;;;;;24579:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24561:5;24567:1;24561:8;;;;;;;;;;;;;;:15;;:32;-1:-1:-1;;;;;24561:32:0;;;-1:-1:-1;;;;;24561:32:0;;;;;24626:5;-1:-1:-1;;;;;24626:12:0;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24608:5;24614:1;24608:8;;;;;;;;;;;;;;:15;;:32;-1:-1:-1;;;;;24608:32:0;;;-1:-1:-1;;;;;24608:32:0;;;;;24678:5;-1:-1:-1;;;;;24678:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24655:5;24661:1;24655:8;;;;;;;;;;;;;;;;;;:20;;:42;-1:-1:-1;;24416:4:0;;24379:330;;17159:26;;;-1:-1:-1;;;;;17159:26:0;;:::o;3542:30::-;;;:::o;24911:651::-;25019:17;;25095:9;-1:-1:-1;;;;;25080:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;25054:58;;25128:9;25123:409;25143:20;;;25123:409;;;25185:11;25199:9;;25209:1;25199:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;25185:26;;25243:5;25226;25232:1;25226:8;;;;;;;;;;;;;;:14;;:22;-1:-1:-1;;;;;25226:22:0;;;-1:-1:-1;;;;;25226:22:0;;;;;25264:16;25282;25304:5;-1:-1:-1;;;;;25304:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25263:60;-1:-1:-1;;;;;25263:60:0;;;-1:-1:-1;;;;;25263:60:0;;;25358:8;25338:5;25344:1;25338:8;;;;;;;;;;;;;;:17;;:28;;;;;25401:8;25381:5;25387:1;25381:8;;;;;;;;;;;;;;:17;;:28;;;;;25443:5;-1:-1:-1;;;;;25443:15:0;;25459:3;25443:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25424:5;25430:1;25424:8;;;;;;;;;;;;;;:16;;:39;;;;;25501:5;-1:-1:-1;;;;;25501:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25478:5;25484:1;25478:8;;;;;;;;;;;;;;;;;;:20;;:42;-1:-1:-1;;;25165:3:0;;25123:409;;27153:397;27258:18;;27337:4;-1:-1:-1;;;;;27321:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27294:55;;27367:9;27362:156;27382:15;;;27362:156;;;27434:4;;27439:1;27434:7;;;;;;;;;;;;;27419:5;27425:1;27419:8;;;;;;;;;;;;;;;;;;:22;:12;27479:4;-1:-1:-1;;;;;27479:4:0;:13;27493:4;;27498:1;27493:7;;;;;;;;;;;;;27502:3;27479:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27456:50;27457:5;27463:1;27457:8;;;;;;;;;;;;;;;;;;;:16;27456:50;27399:3;;27362:156;;17249:31;;;-1:-1:-1;;;;;17249:31:0;;:::o;17004:17::-;;;-1:-1:-1;;;;;17004:17:0;;:::o;22898:488::-;23011:16;;23087:9;-1:-1:-1;;;;;23073:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;23045:59:0;-1:-1:-1;23131:9:0;23117:11;23158:193;23182:3;23178:1;:7;23158:193;;;23207:12;23229:9;;23239:1;23229:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;23207:35;;23277:5;23257:8;23266:1;23257:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23257:25:0;;;;;23319:20;;-1:-1:-1;;;23319:20:0;;:15;;;;;;:20;;23335:3;;23319:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23297:8;23306:1;23297:11;;;;;;;;;;;;;;;;;;;:19;:42;-1:-1:-1;23187:3:0;;23158:193;;;-1:-1:-1;23370:8:0;;22898:488;-1:-1:-1;;;;;22898:488:0:o;17841:437::-;3689:5;-1:-1:-1;;;;;3689:19:0;3698:10;3689:19;3681:64;;;;-1:-1:-1;;;3681:64:0;;;;;;;:::i;:::-;;;;;;;;;18086:4:::1;:12:::0;;-1:-1:-1;;;;;;18086:12:0;;::::1;-1:-1:-1::0;;;;;18086:12:0;;::::1;;::::0;;;-1:-1:-1;18109:14:0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;18134:3:::1;:10:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;18155:5:::1;:14:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;18180:10:::1;:24:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;18215:15:::1;:34:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;18260:3:::1;:10:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;17841:437::o;18286:1535::-;18375:5;;18342:7;;-1:-1:-1;;;;;18366:14:0;;;18375:5;;18366:14;18362:58;;;-1:-1:-1;18404:4:0;18397:11;;18362:58;18487:15;;18430:18;;;;-1:-1:-1;;;;;18487:15:0;:30;18483:122;;18555:15;;18586:5;;18555:37;;-1:-1:-1;;;18555:37:0;;-1:-1:-1;;;;;18555:15:0;;;;:23;;:37;;18579:5;;18586;;;;18555:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18534:59;;18483:122;18619:10;;-1:-1:-1;;;;;18619:10:0;:25;18615:107;;18677:10;;;18703:5;;18677:32;;-1:-1:-1;;;18677:32:0;;-1:-1:-1;;;;;18677:10:0;;;;:18;;:32;;18696:5;;18703;;;18677:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18661:49;;18615:107;-1:-1:-1;;;;;18750:35:0;;;:82;;;;-1:-1:-1;;;;;;18802:30:0;;;18750:82;18732:147;;;18866:1;18859:8;;;;;;18732:147;18891:16;;;-1:-1:-1;;;;;18973:35:0;;;18969:332;;19044:24;19087;19132:12;-1:-1:-1;;;;;19132:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19025:133;;;;;19185:16;19173:28;;;;19228:16;19216:28;;;;19268:12;-1:-1:-1;;;;;19268:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19259:30;;18969:332;;;-1:-1:-1;;;;;19317:30:0;;;19313:320;;19365:19;19386;19411:7;-1:-1:-1;;;;;19411:33:0;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19461:23:0;;;;19499;;;;19364:82;;-1:-1:-1;19364:82:0;-1:-1:-1;;;;;;19541:19:0;;19537:85;;19590:7;-1:-1:-1;;;;;19590:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19581:25;;19537:85;19313:320;;;19659:5;;-1:-1:-1;;;;;19649:15:0;;;19659:5;;19649:15;19645:169;;;19717:8;-1:-1:-1;;;;;19688:37:0;19697:8;-1:-1:-1;;;;;19689:17:0;19709:4;19689:24;19688:37;;;;;;19681:44;;;;;;;;;19645:169;19794:8;-1:-1:-1;;;;;19765:37:0;19774:8;-1:-1:-1;;;;;19766:17:0;19786:4;19766:24;19765:37;;;;18286:1535;;;;:::o;17344:17::-;;;-1:-1:-1;;;;;17344:17:0;;:::o;4702:266::-;4855:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4855:34:0;-1:-1:-1;;;4855:34:0;;;4815:85;;4753:13;;4780:12;;4753:13;;-1:-1:-1;;;;;4815:25:0;;;:85;;4855:34;4815:85;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4779:121;;;;4918:7;:42;;;;;;;;;;;;;;;-1:-1:-1;;;4918:42:0;;;;;;4928:24;4947:4;4928:18;:24::i;:::-;4911:49;4702:266;-1:-1:-1;;;;4702:266:0:o;4426:268::-;4581:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4581:34:0;-1:-1:-1;;;4581:34:0;;;4541:85;;4479:13;;4506:12;;4479:13;;-1:-1:-1;;;;;4541:25:0;;;:85;;4581:34;4541:85;:::i;4976:281::-;5125:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5125:34:0;-1:-1:-1;;;5125:34:0;;;5085:85;;5031:5;;;;5064:17;;-1:-1:-1;;;;;5085:25:0;;;:85;;5125:34;5085:85;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5049:121;;;;5188:7;:28;;;;;5199:4;:11;5214:2;5199:17;5188:28;:61;;5247:2;5188:61;;;5230:4;5219:25;;;;;;;;;;;;:::i;6150:339::-;6298:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6298:34:0;-1:-1:-1;;;6298:34:0;;;6259:84;;6202:8;;;;6238:17;;-1:-1:-1;;;;;6259:24:0;;;:84;;6298:34;6259:84;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6223:120;;;;6374:7;:28;;;;;6385:4;:11;6400:2;6385:17;6374:28;:107;;6479:1;6374:107;;;6433:4;6422:28;;;;;;;;;;;;:::i;5265:360::-;5446:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5446:34:0;-1:-1:-1;;;5446:34:0;;;5384:97;;5328:7;;;;5363:17;;-1:-1:-1;;;;;5384:25:0;;;5429:5;;5384:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5348:133;;;;5512:7;:28;;;;;5523:4;:11;5538:2;5523:17;5512:28;:105;;5615:1;5512:105;;;5571:4;5560:27;;;;;;;;;;;;:::i;5633:484::-;5728:7;5754:12;5768:17;5797:5;-1:-1:-1;;;;;5789:25:0;5834:4;5873:10;5885:5;5850:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5850:41:0;;;;;;;;;;;5789:103;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5753:139;;;;5923:7;:28;;;;;5934:4;:11;5949:2;5934:17;5923:28;:106;;-1:-1:-1;;5923:106:0;;;5982:4;5971:27;;;;;;;;;;;;:::i;:::-;5903:126;5633:484;-1:-1:-1;;;;;5633:484:0:o;3799:619::-;3896:13;3946:2;3931:4;:11;:17;3927:484;;3983:4;3972:26;;;;;;;;;;;;:::i;:::-;3965:33;;;;3927:484;4020:4;:11;4035:2;4020:17;4016:395;;;4054:7;4080:69;4091:2;4087:1;:6;;;:22;;;;;4097:4;4102:1;4097:7;;;;;;;;;;;;;;-1:-1:-1;;;;;;4097:7:0;:12;;4087:22;4080:69;;;4130:3;;4080:69;;;4163:23;4199:1;4189:12;;-1:-1:-1;;;;;4189:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4189:12:0;;4163:38;;4225:1;4221:5;;4216:99;4232:2;4228:1;:6;;;:22;;;;;4238:4;4243:1;4238:7;;;;;;;;;;;;;;-1:-1:-1;;;;;;4238:7:0;:12;;4228:22;4216:99;;;4292:4;4297:1;4292:7;;;;;;;;;;;;;;;;;;4276:10;4287:1;4276:13;;;;;;;;;;;;;:23;-1:-1:-1;;;;;4276:23:0;;;;;;;;-1:-1:-1;4252:3:0;;;;;4216:99;;;4343:10;-1:-1:-1;4329:25:0;;-1:-1:-1;4329:25:0;4016:395;-1:-1:-1;4387:12:0;;;;;;;;;;;;-1:-1:-1;;;4387:12:0;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;301:352::-;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;-1:-1;469:20;;-1:-1;;;;;498:30;;495:2;;;-1:-1;;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;575:4;;610:6;606:17;567:6;592:32;;589:41;586:2;;;643:1;;633:12;3559:444;;3672:3;3665:4;3657:6;3653:17;3649:27;3639:2;;-1:-1;;3680:12;3639:2;3720:6;3714:13;-1:-1;;;;;50957:18;50949:6;50946:30;50943:2;;;-1:-1;;50979:12;50943:2;50612;50606:9;51052;51033:17;;-1:-1;;51029:33;50638:17;;51120:4;50638:17;50698:34;;;50734:22;;;50695:62;50692:2;;;-1:-1;;50760:12;50692:2;50612;50779:22;3813:21;;;3733:74;-1:-1;3733:74;3913:16;;;51120:4;3913:16;3910:25;-1:-1;3907:2;;;3948:1;;3938:12;3907:2;3958:39;3990:6;51120:4;3889:5;3885:16;51120:4;3855:6;3851:17;3958:39;:::i;:::-;;;;3632:371;;;;:::o;4706:241::-;;4810:2;4798:9;4789:7;4785:23;4781:32;4778:2;;;-1:-1;;4816:12;4778:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4868:63;4772:175;-1:-1;;;4772:175::o;4954:522::-;;;;5110:2;5098:9;5089:7;5085:23;5081:32;5078:2;;;-1:-1;;5116:12;5078:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5168:63;-1:-1;5296:2;5281:18;;5268:32;-1:-1;;;;;5309:30;;5306:2;;;-1:-1;;5342:12;5306:2;5380:80;5452:7;5443:6;5432:9;5428:22;5380:80;:::i;:::-;5072:404;;5362:98;;-1:-1;5362:98;;-1:-1;;;;5072:404::o;5483:548::-;;;;5652:2;5640:9;5631:7;5627:23;5623:32;5620:2;;;-1:-1;;5658:12;6038:987;;;;;;;6292:3;6280:9;6271:7;6267:23;6263:33;6260:2;;;-1:-1;;6299:12;6260:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;6351:63;-1:-1;6479:2;6464:18;;6451:32;-1:-1;;;;;6492:30;;;6489:2;;;-1:-1;;6525:12;6489:2;6563:96;6651:7;6642:6;6631:9;6627:22;6563:96;:::i;:::-;6545:114;;-1:-1;6545:114;-1:-1;6696:2;6748:22;;2461:20;;-1:-1;2486:46;2461:20;2486:46;:::i;:::-;6704:76;;-1:-1;6845:2;6830:18;;6817:32;;6858:30;;;6855:2;;;-1:-1;;6891:12;6855:2;;6929:80;7001:7;6992:6;6981:9;6977:22;6929:80;:::i;:::-;6254:771;;;;-1:-1;6254:771;;-1:-1;6254:771;;6911:98;;6254:771;-1:-1;;;6254:771::o;8116:672::-;;;;;8282:3;8270:9;8261:7;8257:23;8253:33;8250:2;;;-1:-1;;8289:12;8250:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;8452:2;8502:22;;4367:13;8571:2;8621:22;;4367:13;8690:2;8740:22;;;4367:13;8341:74;;4367:13;;-1:-1;4367:13;;-1:-1;8244:544;-1:-1;;;8244:544::o;8795:397::-;;;8934:2;8922:9;8913:7;8909:23;8905:32;8902:2;;;-1:-1;;8940:12;8902:2;8998:17;8985:31;-1:-1;;;;;9028:6;9025:30;9022:2;;;-1:-1;;9058:12;9022:2;9096:80;9168:7;9159:6;9148:9;9144:22;9096:80;:::i;:::-;9078:98;;;;-1:-1;8896:296;-1:-1;;;;8896:296::o;9603:263::-;;9718:2;9706:9;9697:7;9693:23;9689:32;9686:2;;;-1:-1;;9724:12;9686:2;-1:-1;2318:13;;9680:186;-1:-1;9680:186::o;10147:289::-;;10275:2;10263:9;10254:7;10250:23;10246:32;10243:2;;;-1:-1;;10281:12;10243:2;2641:6;2635:13;2653:46;2693:5;2653:46;:::i;11025:523::-;;;;11179:2;11167:9;11158:7;11154:23;11150:32;11147:2;;;-1:-1;;11185:12;11147:2;2807:6;2794:20;2819:49;2862:5;2819:49;:::i;:::-;11237:79;11353:2;11392:22;;4219:20;;-1:-1;11461:2;11500:22;;;4219:20;;11141:407;-1:-1;;;11141:407::o;11555:1175::-;;;;;;;;11851:3;11839:9;11830:7;11826:23;11822:33;11819:2;;;-1:-1;;11858:12;11819:2;3152:6;3139:20;3164:52;3210:5;3164:52;:::i;:::-;11910:82;-1:-1;12029:2;12068:22;;72:20;97:33;72:20;97:33;:::i;:::-;12037:63;-1:-1;12137:2;12189:22;;2461:20;2486:46;2461:20;2486:46;:::i;:::-;12145:76;-1:-1;12258:2;12310:22;;2461:20;2486:46;2461:20;2486:46;:::i;:::-;12266:76;-1:-1;12379:3;12435:22;;2794:20;2819:49;2794:20;2819:49;:::i;:::-;12388:79;-1:-1;12504:3;12560:22;;2794:20;2819:49;2794:20;2819:49;:::i;:::-;12513:79;-1:-1;12629:3;12682:22;;2461:20;2486:46;2461:20;2486:46;:::i;:::-;12638:76;;;;11813:917;;;;;;;;;;:::o;13307:362::-;;13432:2;13420:9;13411:7;13407:23;13403:32;13400:2;;;-1:-1;;13438:12;13400:2;13489:17;13483:24;-1:-1;;;;;13519:6;13516:30;13513:2;;;-1:-1;;13549:12;13513:2;13579:74;13645:7;13636:6;13625:9;13621:22;13579:74;:::i;13676:533::-;;;;13824:2;13812:9;13803:7;13799:23;13795:32;13792:2;;;-1:-1;;13830:12;13792:2;4095:6;4089:13;4107:33;4134:5;4107:33;:::i;:::-;13993:2;14043:22;;4089:13;13882:74;;-1:-1;4107:33;4089:13;4107:33;:::i;:::-;14112:2;14161:22;;4507:13;14001:74;;-1:-1;59393:10;59382:22;;62213:34;;62203:2;;-1:-1;;62251:12;62203:2;14120:73;;;;13786:423;;;;;:::o;14486:771::-;;;;;14662:3;14650:9;14641:7;14637:23;14633:33;14630:2;;;-1:-1;;14669:12;14630:2;4373:6;4367:13;14721:74;;14832:2;14886:9;14882:22;220:13;238:33;265:5;238:33;:::i;:::-;14972:2;14957:18;;14951:25;14840:74;;-1:-1;;;;;;14985:30;;14982:2;;;-1:-1;;15018:12;14982:2;15048:74;15114:7;15105:6;15094:9;15090:22;15048:74;:::i;:::-;15159:2;15209:22;;;;4367:13;14624:633;;;;-1:-1;;;;14624:633::o;15264:399::-;;;15396:2;15384:9;15375:7;15371:23;15367:32;15364:2;;;-1:-1;;15402:12;15364:2;-1:-1;;4367:13;;15565:2;15615:22;;;4367:13;;;;;-1:-1;15358:305::o;15670:259::-;;15783:2;15771:9;15762:7;15758:23;15754:32;15751:2;;;-1:-1;;15789:12;15751:2;4651:6;4645:13;59487:4;62360:5;59476:16;62337:5;62334:33;62324:2;;-1:-1;;62371:12;20681:870;;20939:5;52937:12;56035:6;56030:3;56023:19;56072:4;;56067:3;56063:14;20951:108;;56072:4;21155:5;51286:14;-1:-1;21194:335;21219:6;21216:1;21213:13;21194:335;;;21280:13;;31905:23;;-1:-1;;;;;59176:54;28481:63;;32091:16;;32085:23;32162:14;;;27995:37;16779:4;16770:14;;;;54717;;;;509:18;21234:9;21194:335;;;-1:-1;21535:10;;20845:706;-1:-1;;;;;20845:706::o;27833:94::-;58440:13;58433:21;27888:34;;27882:45::o;28407:142::-;-1:-1;;;;;59176:54;28481:63;;28475:74::o;29355:327::-;;29490:5;52937:12;56035:6;56030:3;56023:19;29574:52;29619:6;56072:4;56067:3;56063:14;56072:4;29600:5;29596:16;29574:52;:::i;:::-;51052:9;61004:14;-1:-1;;61000:28;29638:39;;;;56072:4;29638:39;;29437:245;-1:-1;;29437:245::o;34223:472::-;34425:23;;27995:37;;34599:4;34588:16;;;34582:23;34659:14;;27995:37;34333:362::o;42960:97::-;59487:4;59476:16;43017:35;;43011:46::o;43064:271::-;;28204:5;52937:12;28315:52;28360:6;28355:3;28348:4;28341:5;28337:16;28315:52;:::i;:::-;28379:16;;;;;43198:137;-1:-1;;43198:137::o;43342:222::-;-1:-1;;;;;59176:54;;;;18571:37;;43469:2;43454:18;;43440:124::o;43571:333::-;-1:-1;;;;;59176:54;;;18571:37;;59176:54;;43890:2;43875:18;;18571:37;43726:2;43711:18;;43697:207::o;43911:486::-;44146:2;44160:47;;;52937:12;;44131:18;;;56023:19;;;43911:486;;44146:2;56063:14;;;;;;51286;;;43911:486;19256:347;19281:6;19278:1;19275:13;19256:347;;;19342:13;;30315:23;;-1:-1;;;;;59176:54;28481:63;;30495:16;;;30489:23;30566:14;;;27995:37;30652:16;;;30646:23;30723:14;;;27995:37;30818:4;30807:16;;;30801:23;30878:14;;;27995:37;30972:4;30961:16;;;30955:23;31032:14;;;27995:37;59187:42;16206:14;;;;54717;;;;509:18;19296:9;19256:347;;;-1:-1;44213:174;;44117:280;-1:-1;;;;;;;44117:280::o;44404:470::-;44631:2;44645:47;;;52937:12;;44616:18;;;56023:19;;;44404:470;;44631:2;56063:14;;;;;;51286;;;44404:470;20241:335;20266:6;20263:1;20260:13;20241:335;;;20327:13;;31344:23;;-1:-1;;;;;59176:54;28481:63;;31520:16;;31514:23;31591:14;;;27995:37;16488:14;;;;54717;;;;509:18;20281:9;20241:335;;44881:474;45110:2;45124:47;;;52937:12;;45095:18;;;56023:19;;;44881:474;;45110:2;56063:14;;;;;;51286;;;44881:474;22174:338;22199:6;22196:1;22193:13;22174:338;;;22260:13;;32478:23;;-1:-1;;;;;59176:54;;;28481:63;;32653:16;;;32647:23;59176:54;;32737:14;;;28481:63;32822:16;;;32816:23;59176:54;32906:14;;;28481:63;33007:4;32996:16;;;32990:23;33067:14;;;27995:37;17065:4;17056:14;;;;54717;;;;509:18;22214:9;22174:338;;45843:478;46074:2;46088:47;;;52937:12;;46059:18;;;56023:19;;;45843:478;;46074:2;56063:14;;;;;;51286;;;45843:478;24147:341;24172:6;24169:1;24166:13;24147:341;;;17512:100;17608:3;24239:6;24233:13;17512:100;:::i;:::-;17632:14;;;;54717;;;;24194:1;24187:9;24147:341;;46328:478;46559:2;46573:47;;;52937:12;;46544:18;;;56023:19;;;46328:478;;46559:2;56063:14;;;;;;26197:17;;;26188:27;;;;51286:14;;;46328:478;26352:411;26377:6;26374:1;26371:13;26352:411;;;26429:20;;46548:9;26433:4;26429:20;;26424:3;26417:33;26484:6;26478:13;37524:4;37620:76;37681:14;37597:16;37591:23;37620:76;:::i;:::-;46559:2;37772:5;37768:16;37762:23;46559:2;37843:3;37839:14;27995:37;56063:14;37926:5;37922:16;37916:23;37524:4;56063:14;37963:3;37959:14;37952:38;38005:73;37524:4;37519:3;37515:14;38059:12;38005:73;:::i;:::-;37997:81;;;38165:4;;38158:5;38154:16;38148:23;38217:3;38211:4;38207:14;38165:4;38195:3;38191:14;38184:38;38237:73;38305:4;38291:12;38237:73;:::i;:::-;38407:4;38396:16;;;38390:23;38467:14;;;;27995:37;;;;-1:-1;;26742:14;;;;38229:81;-1:-1;54717:14;;;;26399:1;26392:9;26352:411;;;-1:-1;46626:170;;46530:276;-1:-1;;;;;;;;46530:276::o;46813:490::-;47050:2;47064:47;;;52937:12;;47035:18;;;56023:19;;;46813:490;;47050:2;56063:14;;;;;;51286;;;46813:490;27453:350;27478:6;27475:1;27472:13;27453:350;;;27539:13;;41168:23;;27995:37;;41331:16;;;41325:23;41402:14;;;27995:37;41492:16;;;41486:23;41563:14;;;27995:37;41662:4;41651:16;;;41645:23;41722:14;;;27995:37;41825:4;41814:16;;;41808:23;41885:14;;;27995:37;41986:4;41975:16;;;41969:23;42046:14;;;27995:37;42144:4;42133:16;;;42127:23;42204:14;;;27995:37;42302:4;42291:16;;;42285:23;42362:14;;;27995:37;42462:6;42451:18;;;42445:25;42524:16;;;27995:37;42623:6;42612:18;;;42606:25;42685:16;;;27995:37;18479:6;18470:16;;;;54717:14;;;;27500:1;27493:9;27453:350;;48485:416;48685:2;48699:47;;;48670:18;;;56023:19;29950:34;56063:14;;;29930:55;30004:12;;;48656:245::o;48908:693::-;;49219:2;;49208:9;49204:18;49233:125;49340:17;49331:6;49233:125;:::i;:::-;49391:2;49376:18;;;49369:48;;;52937:12;;56023:19;;;;56063:14;;;;;;56072:4;25050:17;;;25041:27;;;;51286:14;;;-1:-1;25204:408;25229:6;25226:1;25223:13;25204:408;;;25281:20;;49208:9;25285:4;25281:20;;25276:3;25269:33;25336:6;25330:13;34916:6;34989:16;34983:23;28002:3;27995:37;56072:4;35150:5;35146:16;35140:23;35169:76;56072:4;35234:3;35230:14;35216:12;35169:76;:::i;:::-;;49391:2;35323:5;35319:16;35313:23;49391:2;35394:3;35390:14;27995:37;49219:2;35479:5;35475:16;35469:23;35498:57;49219:2;35544:3;35540:14;35526:12;35498:57;:::i;:::-;;56063:14;35630:5;35626:16;35620:23;35649:79;56063:14;35717:3;35713:14;35699:12;35649:79;:::i;:::-;;35809:4;;35802:5;35798:16;35792:23;35821:76;35809:4;35886:3;35882:14;35868:12;35821:76;:::i;:::-;;;35978:4;;35971:5;35967:16;35961:23;35990:76;35978:4;36055:3;36051:14;36037:12;35990:76;:::i;:::-;;;36145:4;;36138:5;36134:16;36128:23;34916:6;36145:4;36175:3;36171:14;36164:38;36217:73;34916:6;34911:3;34907:16;36271:12;36217:73;:::i;:::-;36209:81;;;;36377:6;;36370:5;36366:18;36360:25;36433:3;36427:4;36423:14;36377:6;36409:3;36405:16;36398:40;36453:73;36521:4;36507:12;36453:73;:::i;:::-;36445:81;;;;36615:6;;36608:5;36604:18;36598:25;36578:45;;36629:61;36615:6;36677:3;36673:16;36659:12;36629:61;:::i;:::-;-1:-1;25591:14;;;;25350:124;-1:-1;;54717:14;;;;25251:1;25244:9;25204:408;;;-1:-1;49423:168;;49190:411;-1:-1;;;;;;;;;;;49190:411::o;49608:366::-;;49783:2;49804:17;49797:47;38818:16;38812:23;49783:2;49772:9;49768:18;27995:37;49783:2;38982:5;38978:16;38972:23;39049:14;49772:9;39049:14;27995:37;39049:14;39145:5;39141:16;39135:23;39212:14;49772:9;39212:14;27995:37;39212:14;39306:5;39302:16;39296:23;39373:14;49772:9;39373:14;27995:37;39373:14;39466:5;39462:16;39456:23;39533:14;49772:9;39533:14;27995:37;39533:14;39631:5;39627:16;39621:23;39698:14;49772:9;39698:14;27995:37;39698:14;39790:5;39786:16;39780:23;38737:6;;39823:14;49772:9;39823:14;39816:38;39869:153;38728:16;49772:9;38728:16;40003:12;39869:153;:::i;:::-;39823:14;40100:16;;40094:23;40171:14;;;;27995:37;;;;40257:18;;40251:25;40330:16;;;;27995:37;;;;40418:18;;40412:25;40491:16;;;;27995:37;;;;40582:18;;40576:25;40655:16;;;;27995:37;;;;40750:18;;;40744:25;40823:16;;27995:37;;;;-1:-1;39861:161;;49754:220;-1:-1;49754:220::o;49981:222::-;27995:37;;;50108:2;50093:18;;50079:124::o;50210:333::-;27995:37;;;-1:-1;;;;;59176:54;50529:2;50514:18;;18571:37;50365:2;50350:18;;50336:207::o;60660:268::-;60725:1;60732:101;60746:6;60743:1;60740:13;60732:101;;;60813:11;;;60807:18;60794:11;;;60787:39;60768:2;60761:10;60732:101;;;60848:6;60845:1;60842:13;60839:2;;;60725:1;60904:6;60899:3;60895:16;60888:27;60839:2;;60709:219;;;:::o;61041:117::-;-1:-1;;;;;59176:54;;61100:35;;61090:2;;61149:1;;61139:12;61090:2;61084:74;:::o;61907:117::-;-1:-1;;;;;61994:5;59060:42;61969:5;61966:35;61956:2;;62015:1;;62005:12"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2817400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "WAVAX()": "1159",
                "bar()": "1180",
                "chef()": "1116",
                "findBalances(address,address[])": "infinite",
                "findPools(address,uint256[])": "infinite",
                "getAVAXRate(address)": "infinite",
                "getBalances(address,address[])": "infinite",
                "getPairs(address,uint256,uint256)": "infinite",
                "getPools(uint256[])": "infinite",
                "getTokenInfo(address[])": "infinite",
                "getUIInfo(address,address[],address,address[])": "infinite",
                "joe()": "1092",
                "joeFactory()": "1093",
                "maker()": "1115",
                "owner()": "infinite",
                "pangolinFactory()": "1181",
                "pollPairs(address,address[])": "infinite",
                "pollPools(address,uint256[])": "infinite",
                "setContracts(address,address,address,address,address,address,address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "WAVAX()": "73b295c2",
              "bar()": "febb0f7e",
              "chef()": "1fc8bc5d",
              "findBalances(address,address[])": "ca0f937c",
              "findPools(address,uint256[])": "ac6091f8",
              "getAVAXRate(address)": "d9116dc3",
              "getBalances(address,address[])": "6a385ae9",
              "getPairs(address,uint256,uint256)": "7e3e2596",
              "getPools(uint256[])": "2952dde8",
              "getTokenInfo(address[])": "4a69ac50",
              "getUIInfo(address,address[],address,address[])": "15243475",
              "joe()": "b985a3a0",
              "joeFactory()": "8a38466e",
              "maker()": "50655d8c",
              "owner()": "8da5cb5b",
              "pangolinFactory()": "b295d2a1",
              "pollPairs(address,address[])": "a959dd80",
              "pollPools(address,uint256[])": "3009f414",
              "setContracts(address,address,address,address,address,address,address)": "d3ff95c7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"chef_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"joe_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"WAVAX_\",\"type\":\"address\"},{\"internalType\":\"contract IFactory\",\"name\":\"joeFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IFactory\",\"name\":\"pangolinFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"bar_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WAVAX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bar\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chef\",\"outputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"findBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.Balance[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"pids\",\"type\":\"uint256[]\"}],\"name\":\"findPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.PoolFound[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAVAXRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.BalanceFull[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toID\",\"type\":\"uint256\"}],\"name\":\"getPairs\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPair\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.PairBase[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pids\",\"type\":\"uint256[]\"}],\"name\":\"getPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalAllocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolLength\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.PoolsInfo\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"contract IPair\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPair\",\"type\":\"bool\"},{\"internalType\":\"contract IFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct BoringHelperV1.PoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"DOMAIN_SEPARATOR\",\"type\":\"bytes32\"}],\"internalType\":\"struct BoringHelperV1.TokenInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"contract IFactory[]\",\"name\":\"factoryAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"masterContracts\",\"type\":\"address[]\"}],\"name\":\"getUIInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"avaxBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"joeBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"joeBarBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xjoeBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xjoeSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"joeBarAllowance\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allPairsLength\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.Factory[]\",\"name\":\"factories\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"avaxRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"joeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"btcRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingJoe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimeStamp\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.UIInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joe\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joeFactory\",\"outputs\":[{\"internalType\":\"contract IFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pangolinFactory\",\"outputs\":[{\"internalType\":\"contract IFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"contract IPair[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"pollPairs\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPair\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.PairPoll[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"pids\",\"type\":\"uint256[]\"}],\"name\":\"pollPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"}],\"internalType\":\"struct BoringHelperV1.UserPoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"chef_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"joe_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"WAVAX_\",\"type\":\"address\"},{\"internalType\":\"contract IFactory\",\"name\":\"joeFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IFactory\",\"name\":\"pangolinFactory_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"bar_\",\"type\":\"address\"}],\"name\":\"setContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"BoringHelperV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1432,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "chef",
                "offset": 0,
                "slot": "0",
                "type": "t_contract(IMasterChef)139"
              },
              {
                "astId": 1434,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "maker",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 1436,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "joe",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(IERC20)54"
              },
              {
                "astId": 1438,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "WAVAX",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(IERC20)54"
              },
              {
                "astId": 1440,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "joeFactory",
                "offset": 0,
                "slot": "4",
                "type": "t_contract(IFactory)193"
              },
              {
                "astId": 1442,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "pangolinFactory",
                "offset": 0,
                "slot": "5",
                "type": "t_contract(IFactory)193"
              },
              {
                "astId": 1444,
                "contract": "contracts/boringcrypto/BoringHelperV1.sol:BoringHelperV1",
                "label": "bar",
                "offset": 0,
                "slot": "6",
                "type": "t_contract(IERC20)54"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_contract(IERC20)54": {
                "encoding": "inplace",
                "label": "contract IERC20",
                "numberOfBytes": "20"
              },
              "t_contract(IFactory)193": {
                "encoding": "inplace",
                "label": "contract IFactory",
                "numberOfBytes": "20"
              },
              "t_contract(IMasterChef)139": {
                "encoding": "inplace",
                "label": "contract IMasterChef",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BoringMath": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c964209cf802a32b65fdc035e3acb8667b27a9cf1e3a5ded5740c2672ee29e664736f6c634300060c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP7 TIMESTAMP MULMOD 0xCF DUP1 0x2A ORIGIN 0xB6 0x5F 0xDC SUB 0x5E GASPRICE 0xCB DUP7 PUSH8 0xB27A9CF1E3A5DED5 PUSH21 0xC2672EE29E664736F6C634300060C003300000000 ",
              "sourceMap": "3035:479:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c964209cf802a32b65fdc035e3acb8667b27a9cf1e3a5ded5740c2672ee29e664736f6c634300060c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C SWAP7 TIMESTAMP MULMOD 0xCF DUP1 0x2A ORIGIN 0xB6 0x5F 0xDC SUB 0x5E GASPRICE 0xCB DUP7 PUSH8 0xB27A9CF1E3A5DED5 PUSH21 0xC2672EE29E664736F6C634300060C003300000000 ",
              "sourceMap": "3035:479:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"BoringMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BoringPair": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dd2a03b994c932ab8180bc23b6eed41590262529528b03b5405a910df5003c264736f6c634300060c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xD2 LOG0 EXTCODESIZE SWAP10 0x4C SWAP4 0x2A 0xB8 XOR SIGNEXTEND 0xC2 EXTCODESIZE PUSH15 0xED41590262529528B03B5405A910DF POP SUB 0xC2 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "6124:368:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dd2a03b994c932ab8180bc23b6eed41590262529528b03b5405a910df5003c264736f6c634300060c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xD2 LOG0 EXTCODESIZE SWAP10 0x4C SWAP4 0x2A 0xB8 XOR SIGNEXTEND 0xC2 EXTCODESIZE PUSH15 0xED41590262529528B03B5405A910DF POP SUB 0xC2 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "6124:368:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "factory(contract IPair)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"BoringPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IBentoBox": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "cloneAddress",
                  "type": "address"
                }
              ],
              "name": "LogDeploy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "LogDeposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "LogFlashLoan",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "protocol",
                  "type": "address"
                }
              ],
              "name": "LogRegisterProtocol",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "LogSetMasterContractApproval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LogStrategyDivest",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LogStrategyInvest",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LogStrategyLoss",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LogStrategyProfit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "LogStrategyQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "strategy",
                  "type": "address"
                }
              ],
              "name": "LogStrategySet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "targetPercentage",
                  "type": "uint256"
                }
              ],
              "name": "LogStrategyTargetPercentage",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "LogTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "LogWhiteListMasterContract",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "LogWithdraw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "calls",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bool",
                  "name": "revertOnFail",
                  "type": "bool"
                }
              ],
              "name": "batch",
              "outputs": [
                {
                  "internalType": "bool[]",
                  "name": "successes",
                  "type": "bool[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "useCreate2",
                  "type": "bool"
                }
              ],
              "name": "deploy",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "balance",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "maxChangeAmount",
                  "type": "uint256"
                }
              ],
              "name": "harvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "masterContractApproved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "masterContractOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pendingOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingStrategy",
              "outputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permitToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registerProtocol",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "setMasterContractApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "contract IStrategy",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "setStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "targetPercentage_",
                  "type": "uint64"
                }
              ],
              "name": "setStrategyTargetPercentage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "strategy",
              "outputs": [
                {
                  "internalType": "contract IStrategy",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "strategyData",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "strategyStartDate",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "targetPercentage",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "balance",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "roundUp",
                  "type": "bool"
                }
              ],
              "name": "toAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "roundUp",
                  "type": "bool"
                }
              ],
              "name": "toShare",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "totals",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "elastic",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "base",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "tos",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                }
              ],
              "name": "transferMultiple",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "direct",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renounce",
                  "type": "bool"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "masterContract",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "whitelistMasterContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelistedMasterContracts",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "balanceOf(address,address)": "f7888aec",
              "batch(bytes[],bool)": "d2423b51",
              "claimOwnership()": "4e71e0c8",
              "deploy(address,bytes,bool)": "1f54245b",
              "deposit(address,address,address,uint256,uint256)": "02b9446c",
              "harvest(address,bool,uint256)": "66c6bb0b",
              "masterContractApproved(address,address)": "91e0eab5",
              "masterContractOf(address)": "bafe4f14",
              "nonces(address)": "7ecebe00",
              "owner()": "8da5cb5b",
              "pendingOwner()": "e30c3978",
              "pendingStrategy(address)": "5108a558",
              "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "7c516e94",
              "registerProtocol()": "aee4d1b2",
              "setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)": "c0a47c93",
              "setStrategy(address,address)": "72cb5d97",
              "setStrategyTargetPercentage(address,uint64)": "3e2a9d4e",
              "strategy(address)": "228bfd9f",
              "strategyData(address)": "df23b45b",
              "toAmount(address,uint256,bool)": "56623118",
              "toShare(address,uint256,bool)": "da5139ca",
              "totals(address)": "4ffe34db",
              "transfer(address,address,address,uint256)": "f18d03cc",
              "transferMultiple(address,address,address[],uint256[])": "0fca8843",
              "transferOwnership(address,bool,bool)": "078dfbe7",
              "whitelistMasterContract(address,bool)": "733a9d7c",
              "whitelistedMasterContracts(address)": "12a90c8a",
              "withdraw(address,address,address,uint256,uint256)": "97da6d30"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"LogDeploy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"LogFlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocol\",\"type\":\"address\"}],\"name\":\"LogRegisterProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"LogSetMasterContractApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogStrategyDivest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogStrategyInvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogStrategyLoss\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogStrategyProfit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"LogStrategyQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"LogStrategySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetPercentage\",\"type\":\"uint256\"}],\"name\":\"LogStrategyTargetPercentage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"LogWhiteListMasterContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"successes\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"useCreate2\",\"type\":\"bool\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"balance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxChangeAmount\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"masterContractApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"masterContractOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMasterContractApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"targetPercentage_\",\"type\":\"uint64\"}],\"name\":\"setStrategyTargetPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyData\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"strategyStartDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totals\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"elastic\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"base\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"whitelistMasterContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedMasterContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IBentoBox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "owner()": "8da5cb5b",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "i",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "contract IPair",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token1",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "contract IPair",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"contract IPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"contract IPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IKashiPair": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "accrue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "accrueInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "interestPerSecond",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "lastAccrued",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint128",
                      "name": "feesEarnedFraction",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct AccrueInfo",
                  "name": "info",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "skim",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "addAsset",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "fraction",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "skim",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "addCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "asset",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bentoBox",
              "outputs": [
                {
                  "internalType": "contract IBentoBox",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "borrow",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "part",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateral",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8[]",
                  "name": "actions",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "datas",
                  "type": "bytes[]"
                }
              ],
              "name": "cook",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "value1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value2",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "exchangeRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "collateral_",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "oracle_",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "oracleData_",
                  "type": "bytes"
                }
              ],
              "name": "getInitData",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "init",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "isSolvent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "users",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "borrowParts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "liquidate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "masterContract",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracle",
              "outputs": [
                {
                  "internalType": "contract IOracle",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oracleData",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pendingOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "fraction",
                  "type": "uint256"
                }
              ],
              "name": "removeAsset",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "share",
                  "type": "uint256"
                }
              ],
              "name": "removeCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "skim",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "part",
                  "type": "uint256"
                }
              ],
              "name": "repay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newFeeTo",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "enable",
                  "type": "bool"
                }
              ],
              "name": "setSwapper",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "swappers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalAsset",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "elastic",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "base",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct Rebase",
                  "name": "total",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalBorrow",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "elastic",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "base",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct Rebase",
                  "name": "total",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalCollateralShare",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "direct",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renounce",
                  "type": "bool"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "updateExchangeRate",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "updated",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userBorrowPart",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userCollateralShare",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "accrue()": "f8ba4cff",
              "accrueInfo()": "b27c0e74",
              "addAsset(address,bool,uint256)": "1b51e940",
              "addCollateral(address,bool,uint256)": "860ffea1",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "asset()": "38d52e0f",
              "balanceOf(address)": "70a08231",
              "bentoBox()": "6b2ace87",
              "borrow(address,uint256)": "4b8a3529",
              "claimOwnership()": "4e71e0c8",
              "collateral()": "d8dfeb45",
              "cook(uint8[],uint256[],bytes[])": "656f3d64",
              "decimals()": "313ce567",
              "exchangeRate()": "3ba0b9a9",
              "feeTo()": "017e7e58",
              "getInitData(address,address,address,bytes)": "247fd03c",
              "init(bytes)": "4ddf47d4",
              "isSolvent(address,bool)": "7739d59d",
              "liquidate(address[],uint256[],address,address,bool)": "76ee101b",
              "masterContract()": "cd446e22",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "oracle()": "7dc0d1d0",
              "oracleData()": "74645ff3",
              "owner()": "8da5cb5b",
              "pendingOwner()": "e30c3978",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "removeAsset(address,uint256)": "2317ef67",
              "removeCollateral(address,uint256)": "876467f8",
              "repay(address,bool,uint256)": "15294c40",
              "setFeeTo(address)": "f46901ed",
              "setSwapper(address,bool)": "3f2617cb",
              "swappers(address)": "8cad7fbe",
              "symbol()": "95d89b41",
              "totalAsset()": "f9557ccb",
              "totalBorrow()": "8285ef40",
              "totalCollateralShare()": "473e3ce7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address,bool,bool)": "078dfbe7",
              "updateExchangeRate()": "02ce728f",
              "userBorrowPart(address)": "48e4163e",
              "userCollateralShare(address)": "1c9e379b",
              "withdrawFees()": "476343ee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrueInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"interestPerSecond\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastAccrued\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"feesEarnedFraction\",\"type\":\"uint128\"}],\"internalType\":\"struct AccrueInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"skim\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"addAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"skim\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bentoBox\",\"outputs\":[{\"internalType\":\"contract IBentoBox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"part\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"actions\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"cook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value2\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateral_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"oracleData_\",\"type\":\"bytes\"}],\"name\":\"getInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"isSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"borrowParts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"removeAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"skim\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"part\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swappers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"elastic\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"base\",\"type\":\"uint128\"}],\"internalType\":\"struct Rebase\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"elastic\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"base\",\"type\":\"uint128\"}],\"internalType\":\"struct Rebase\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateralShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateExchangeRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"updated\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBorrowPart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateralShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IKashiPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IMasterChef": {
          "abi": [
            {
              "inputs": [],
              "name": "BONUS_MULTIPLIER",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "devaddr",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "joe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "joePerBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "migrator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "pendingTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "nr",
                  "type": "uint256"
                }
              ],
              "name": "poolInfo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "poolLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalAllocPoint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "nr",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "userInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "BONUS_MULTIPLIER()": "8aa28550",
              "devaddr()": "d49e77cd",
              "joe()": "b985a3a0",
              "joePerBlock()": "d1aad742",
              "migrator()": "7cd07e47",
              "owner()": "8da5cb5b",
              "pendingTokens(uint256,address)": "ffcd4263",
              "poolInfo(uint256)": "1526fe27",
              "poolLength()": "081e3eda",
              "startBlock()": "48cd4cb1",
              "totalAllocPoint()": "17caf6f1",
              "userInfo(uint256,address)": "93f1a40b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"pendingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nr\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nr\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IMasterChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "get",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "peek",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "peekSpot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "get(bytes)": "d6d7d525",
              "name(bytes)": "d568866c",
              "peek(bytes)": "eeb8a8d3",
              "peekSpot(bytes)": "d39bbef0",
              "symbol(bytes)": "c699c4d6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IPair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getReserves()": "0902f1ac",
              "owner()": "8da5cb5b",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IStrategy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "name": "exit",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amountAdded",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "harvest",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amountAdded",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "actualAmount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "exit(uint256)": "7f8661a1",
              "harvest(uint256,address)": "18fccc76",
              "skim(uint256)": "6939aaf5",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amountAdded\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amountAdded\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"IStrategy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Ownable": {
          "abi": [
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/boringcrypto/BoringHelperV1.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/boringcrypto/BoringHelperV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n * This is a helper contract used by Sushiswap frontend to get all pool data.\\r\\n * Contract is available only via etherscan: https://etherscan.io/address/0x11ca5375adafd6205e41131a4409f182677996e6#code\\r\\n * It needs flattened due to cyclic dependencies.\\r\\n * BoringHelperV1 has been modified by:\\r\\n *  - Renaming Sushi -> Joe\\r\\n *  - Renaming ETH -> AVAX\\r\\n *  - Removed bentobox/kashi logic.\\r\\n *\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n// Copyright (c) 2021 BoringCrypto\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// Version 22-Mar-2021\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IMasterChef {\\r\\n    function BONUS_MULTIPLIER() external view returns (uint256);\\r\\n\\r\\n    function devaddr() external view returns (address);\\r\\n\\r\\n    function migrator() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function startBlock() external view returns (uint256);\\r\\n\\r\\n    function joe() external view returns (address);\\r\\n\\r\\n    function joePerBlock() external view returns (uint256);\\r\\n\\r\\n    function totalAllocPoint() external view returns (uint256);\\r\\n\\r\\n    function poolLength() external view returns (uint256);\\r\\n\\r\\n    function poolInfo(uint256 nr)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        );\\r\\n\\r\\n    function userInfo(uint256 nr, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256, uint256);\\r\\n\\r\\n    function pendingTokens(uint256 pid, address who)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            address,\\r\\n            string memory,\\r\\n            uint256\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IPair is IERC20 {\\r\\n    function token0() external view returns (IERC20);\\r\\n\\r\\n    function token1() external view returns (IERC20);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112,\\r\\n            uint112,\\r\\n            uint32\\r\\n        );\\r\\n}\\r\\n\\r\\ninterface IFactory {\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function allPairs(uint256 i) external view returns (IPair);\\r\\n\\r\\n    function getPair(IERC20 token0, IERC20 token1)\\r\\n        external\\r\\n        view\\r\\n        returns (IPair);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n}\\r\\n\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable {\\r\\n    address public immutable owner;\\r\\n\\r\\n    constructor() internal {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function returnDataToString(bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (string memory)\\r\\n    {\\r\\n        if (data.length >= 64) {\\r\\n            return abi.decode(data, (string));\\r\\n        } else if (data.length == 32) {\\r\\n            uint8 i = 0;\\r\\n            while (i < 32 && data[i] != 0) {\\r\\n                i++;\\r\\n            }\\r\\n            bytes memory bytesArray = new bytes(i);\\r\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\r\\n                bytesArray[i] = data[i];\\r\\n            }\\r\\n            return string(bytesArray);\\r\\n        } else {\\r\\n            return \\\"???\\\";\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function symbol(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x95d89b41)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function name(IERC20 token) internal view returns (string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x06fdde03)\\r\\n        );\\r\\n        return success ? returnDataToString(data) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function decimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(\\r\\n            abi.encodeWithSelector(0x313ce567)\\r\\n        );\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function DOMAIN_SEPARATOR(IERC20 token) internal view returns (bytes32) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 10000\\r\\n        }(abi.encodeWithSelector(0x3644e515));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (bytes32))\\r\\n                : bytes32(0);\\r\\n    }\\r\\n\\r\\n    function nonces(IERC20 token, address owner)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (bool success, bytes memory data) = address(token).staticcall{\\r\\n            gas: 5000\\r\\n        }(abi.encodeWithSelector(0x7ecebe00, owner));\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (uint256))\\r\\n                : uint256(-1); // Use max uint256 to signal failure to retrieve nonce (probably not supported)\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringPair {\\r\\n    function factory(IPair pair) internal view returns (IFactory) {\\r\\n        (bool success, bytes memory data) = address(pair).staticcall(\\r\\n            abi.encodeWithSelector(0xc45a0155)\\r\\n        );\\r\\n        return\\r\\n            success && data.length == 32\\r\\n                ? abi.decode(data, (IFactory))\\r\\n                : IFactory(0);\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function skim(uint256 amount) external;\\r\\n\\r\\n    function harvest(uint256 balance, address sender)\\r\\n        external\\r\\n        returns (int256 amountAdded);\\r\\n\\r\\n    function withdraw(uint256 amount) external returns (uint256 actualAmount);\\r\\n\\r\\n    function exit(uint256 balance) external returns (int256 amountAdded);\\r\\n}\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(\\r\\n        address indexed masterContract,\\r\\n        bytes data,\\r\\n        address indexed cloneAddress\\r\\n    );\\r\\n    event LogDeposit(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogFlashLoan(\\r\\n        address indexed borrower,\\r\\n        address indexed token,\\r\\n        uint256 amount,\\r\\n        uint256 feeAmount,\\r\\n        address indexed receiver\\r\\n    );\\r\\n    event LogRegisterProtocol(address indexed protocol);\\r\\n    event LogSetMasterContractApproval(\\r\\n        address indexed masterContract,\\r\\n        address indexed user,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogStrategyDivest(address indexed token, uint256 amount);\\r\\n    event LogStrategyInvest(address indexed token, uint256 amount);\\r\\n    event LogStrategyLoss(address indexed token, uint256 amount);\\r\\n    event LogStrategyProfit(address indexed token, uint256 amount);\\r\\n    event LogStrategyQueued(address indexed token, address indexed strategy);\\r\\n    event LogStrategySet(address indexed token, address indexed strategy);\\r\\n    event LogStrategyTargetPercentage(\\r\\n        address indexed token,\\r\\n        uint256 targetPercentage\\r\\n    );\\r\\n    event LogTransfer(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 share\\r\\n    );\\r\\n    event LogWhiteListMasterContract(\\r\\n        address indexed masterContract,\\r\\n        bool approved\\r\\n    );\\r\\n    event LogWithdraw(\\r\\n        address indexed token,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    );\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail)\\r\\n        external\\r\\n        payable\\r\\n        returns (bool[] memory successes, bytes[] memory results);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable;\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    function harvest(\\r\\n        IERC20 token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n\\r\\n    function masterContractApproved(address, address)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function pendingStrategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function permitToken(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function setStrategy(IERC20 token, IStrategy newStrategy) external;\\r\\n\\r\\n    function setStrategyTargetPercentage(IERC20 token, uint64 targetPercentage_)\\r\\n        external;\\r\\n\\r\\n    function strategy(IERC20) external view returns (IStrategy);\\r\\n\\r\\n    function strategyData(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint64 strategyStartDate,\\r\\n            uint64 targetPercentage,\\r\\n            uint128 balance\\r\\n        );\\r\\n\\r\\n    function toAmount(\\r\\n        IERC20 token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    function toShare(\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    function totals(IERC20)\\r\\n        external\\r\\n        view\\r\\n        returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function transfer(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function transferMultiple(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address[] calldata tos,\\r\\n        uint256[] calldata shares\\r\\n    ) external;\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function whitelistMasterContract(address masterContract, bool approved)\\r\\n        external;\\r\\n\\r\\n    function whitelistedMasterContracts(address) external view returns (bool);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n}\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct AccrueInfo {\\r\\n    uint64 interestPerSecond;\\r\\n    uint64 lastAccrued;\\r\\n    uint128 feesEarnedFraction;\\r\\n}\\r\\n\\r\\ninterface IOracle {\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\\r\\ninterface IKashiPair {\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function accrue() external;\\r\\n\\r\\n    function accrueInfo() external view returns (AccrueInfo memory info);\\r\\n\\r\\n    function addAsset(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 fraction);\\r\\n\\r\\n    function addCollateral(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function asset() external view returns (IERC20);\\r\\n\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n\\r\\n    function borrow(address to, uint256 amount)\\r\\n        external\\r\\n        returns (uint256 part, uint256 share);\\r\\n\\r\\n    function claimOwnership() external;\\r\\n\\r\\n    function collateral() external view returns (IERC20);\\r\\n\\r\\n    function cook(\\r\\n        uint8[] calldata actions,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata datas\\r\\n    ) external payable returns (uint256 value1, uint256 value2);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function getInitData(\\r\\n        IERC20 collateral_,\\r\\n        IERC20 asset_,\\r\\n        address oracle_,\\r\\n        bytes calldata oracleData_\\r\\n    ) external pure returns (bytes memory data);\\r\\n\\r\\n    function init(bytes calldata data) external payable;\\r\\n\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n\\r\\n    function liquidate(\\r\\n        address[] calldata users,\\r\\n        uint256[] calldata borrowParts,\\r\\n        address to,\\r\\n        address swapper,\\r\\n        bool open\\r\\n    ) external;\\r\\n\\r\\n    function masterContract() external view returns (address);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function nonces(address) external view returns (uint256);\\r\\n\\r\\n    function oracle() external view returns (IOracle);\\r\\n\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function pendingOwner() external view returns (address);\\r\\n\\r\\n    function permit(\\r\\n        address owner_,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function removeAsset(address to, uint256 fraction)\\r\\n        external\\r\\n        returns (uint256 share);\\r\\n\\r\\n    function removeCollateral(address to, uint256 share) external;\\r\\n\\r\\n    function repay(\\r\\n        address to,\\r\\n        bool skim,\\r\\n        uint256 part\\r\\n    ) external returns (uint256 amount);\\r\\n\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n\\r\\n    function setSwapper(address swapper, bool enable) external;\\r\\n\\r\\n    function swappers(address) external view returns (bool);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function totalAsset() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalBorrow() external view returns (Rebase memory total);\\r\\n\\r\\n    function totalCollateralShare() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferOwnership(\\r\\n        address newOwner,\\r\\n        bool direct,\\r\\n        bool renounce\\r\\n    ) external;\\r\\n\\r\\n    function updateExchangeRate() external returns (bool updated, uint256 rate);\\r\\n\\r\\n    function userBorrowPart(address) external view returns (uint256);\\r\\n\\r\\n    function userCollateralShare(address) external view returns (uint256);\\r\\n\\r\\n    function withdrawFees() external;\\r\\n}\\r\\n\\r\\ncontract BoringHelperV1 is Ownable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using BoringERC20 for IPair;\\r\\n    using BoringPair for IPair;\\r\\n\\r\\n    IMasterChef public chef; // IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\\r\\n    address public maker; // IJoeMaker(0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50);\\r\\n    IERC20 public joe; // IJoeToken(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\\r\\n    IERC20 public WAVAX; // 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    IFactory public joeFactory; // IFactory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\\r\\n    IFactory public pangolinFactory; // IFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\r\\n    IERC20 public bar; // 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;\\r\\n\\r\\n    constructor(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function setContracts(\\r\\n        IMasterChef chef_,\\r\\n        address maker_,\\r\\n        IERC20 joe_,\\r\\n        IERC20 WAVAX_,\\r\\n        IFactory joeFactory_,\\r\\n        IFactory pangolinFactory_,\\r\\n        IERC20 bar_\\r\\n    ) public onlyOwner {\\r\\n        chef = chef_;\\r\\n        maker = maker_;\\r\\n        joe = joe_;\\r\\n        WAVAX = WAVAX_;\\r\\n        joeFactory = joeFactory_;\\r\\n        pangolinFactory = pangolinFactory_;\\r\\n        bar = bar_;\\r\\n    }\\r\\n\\r\\n    function getAVAXRate(IERC20 token) public view returns (uint256) {\\r\\n        if (token == WAVAX) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        IPair pairPangolin;\\r\\n        IPair pairJoe;\\r\\n        if (pangolinFactory != IFactory(0)) {\\r\\n            pairPangolin = IPair(pangolinFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (joeFactory != IFactory(0)) {\\r\\n            pairJoe = IPair(joeFactory.getPair(token, WAVAX));\\r\\n        }\\r\\n        if (\\r\\n            address(pairPangolin) == address(0) &&\\r\\n            address(pairJoe) == address(0)\\r\\n        ) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint112 reserve0;\\r\\n        uint112 reserve1;\\r\\n        IERC20 token0;\\r\\n        if (address(pairPangolin) != address(0)) {\\r\\n            (\\r\\n                uint112 reserve0Pangolin,\\r\\n                uint112 reserve1Pangolin,\\r\\n\\r\\n            ) = pairPangolin.getReserves();\\r\\n            reserve0 += reserve0Pangolin;\\r\\n            reserve1 += reserve1Pangolin;\\r\\n            token0 = pairPangolin.token0();\\r\\n        }\\r\\n\\r\\n        if (address(pairJoe) != address(0)) {\\r\\n            (uint112 reserve0Joe, uint112 reserve1Joe, ) = pairJoe\\r\\n            .getReserves();\\r\\n            reserve0 += reserve0Joe;\\r\\n            reserve1 += reserve1Joe;\\r\\n            if (token0 == IERC20(0)) {\\r\\n                token0 = pairJoe.token0();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (token0 == WAVAX) {\\r\\n            return (uint256(reserve1) * 1e18) / reserve0;\\r\\n        } else {\\r\\n            return (uint256(reserve0) * 1e18) / reserve1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    struct Factory {\\r\\n        IFactory factory;\\r\\n        uint256 allPairsLength;\\r\\n    }\\r\\n\\r\\n    struct UIInfo {\\r\\n        uint256 avaxBalance;\\r\\n        uint256 joeBalance;\\r\\n        uint256 joeBarBalance;\\r\\n        uint256 xjoeBalance;\\r\\n        uint256 xjoeSupply;\\r\\n        uint256 joeBarAllowance;\\r\\n        Factory[] factories;\\r\\n        uint256 avaxRate;\\r\\n        uint256 joeRate;\\r\\n        uint256 btcRate;\\r\\n        uint256 pendingJoe;\\r\\n        uint256 blockTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getUIInfo(\\r\\n        address who,\\r\\n        IFactory[] calldata factoryAddresses,\\r\\n        IERC20 currency,\\r\\n        address[] calldata masterContracts\\r\\n    ) public view returns (UIInfo memory) {\\r\\n        UIInfo memory info;\\r\\n        info.avaxBalance = who.balance;\\r\\n\\r\\n        info.factories = new Factory[](factoryAddresses.length);\\r\\n        for (uint256 i = 0; i < factoryAddresses.length; i++) {\\r\\n            IFactory factory = factoryAddresses[i];\\r\\n            info.factories[i].factory = factory;\\r\\n            info.factories[i].allPairsLength = factory.allPairsLength();\\r\\n        }\\r\\n\\r\\n        if (currency != IERC20(0)) {\\r\\n            info.avaxRate = getAVAXRate(currency);\\r\\n        }\\r\\n\\r\\n        if (joe != IERC20(0)) {\\r\\n            info.joeRate = getAVAXRate(joe);\\r\\n            info.joeBalance = joe.balanceOf(who);\\r\\n            info.joeBarBalance = joe.balanceOf(address(bar));\\r\\n            info.joeBarAllowance = joe.allowance(who, address(bar));\\r\\n        }\\r\\n\\r\\n        if (bar != IERC20(0)) {\\r\\n            info.xjoeBalance = bar.balanceOf(who);\\r\\n            info.xjoeSupply = bar.totalSupply();\\r\\n        }\\r\\n\\r\\n        if (chef != IMasterChef(0)) {\\r\\n            uint256 poolLength = chef.poolLength();\\r\\n            uint256 pendingJoe;\\r\\n            for (uint256 i = 0; i < poolLength; i++) {\\r\\n                (uint256 pendingJoeAmt, , , ) = chef.pendingTokens(i, who);\\r\\n                pendingJoe += pendingJoeAmt;\\r\\n            }\\r\\n            info.pendingJoe = pendingJoe;\\r\\n        }\\r\\n        info.blockTimeStamp = block.timestamp;\\r\\n\\r\\n        return info;\\r\\n    }\\r\\n\\r\\n    struct Balance {\\r\\n        IERC20 token;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    struct BalanceFull {\\r\\n        IERC20 token;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n        uint256 nonce;\\r\\n        uint256 rate;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        IERC20 token;\\r\\n        uint256 decimals;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        bytes32 DOMAIN_SEPARATOR;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (TokenInfo[] memory)\\r\\n    {\\r\\n        TokenInfo[] memory infos = new TokenInfo[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            infos[i].token = token;\\r\\n\\r\\n            infos[i].name = token.name();\\r\\n            infos[i].symbol = token.symbol();\\r\\n            infos[i].decimals = token.decimals();\\r\\n            infos[i].DOMAIN_SEPARATOR = token.DOMAIN_SEPARATOR();\\r\\n        }\\r\\n\\r\\n        return infos;\\r\\n    }\\r\\n\\r\\n    function findBalances(address who, address[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (Balance[] memory)\\r\\n    {\\r\\n        Balance[] memory balances = new Balance[](addresses.length);\\r\\n\\r\\n        uint256 len = addresses.length;\\r\\n        for (uint256 i = 0; i < len; i++) {\\r\\n            IERC20 token = IERC20(addresses[i]);\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    function getBalances(address who, IERC20[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (BalanceFull[] memory)\\r\\n    {\\r\\n        BalanceFull[] memory balances = new BalanceFull[](addresses.length);\\r\\n\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IERC20 token = addresses[i];\\r\\n            balances[i].totalSupply = token.totalSupply();\\r\\n            balances[i].token = token;\\r\\n            balances[i].balance = token.balanceOf(who);\\r\\n            balances[i].nonce = token.nonces(who);\\r\\n            balances[i].rate = getAVAXRate(token);\\r\\n        }\\r\\n\\r\\n        return balances;\\r\\n    }\\r\\n\\r\\n    struct PairBase {\\r\\n        IPair token;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        uint256 totalSupply;\\r\\n    }\\r\\n\\r\\n    function getPairs(\\r\\n        IFactory factory,\\r\\n        uint256 fromID,\\r\\n        uint256 toID\\r\\n    ) public view returns (PairBase[] memory) {\\r\\n        PairBase[] memory pairs = new PairBase[](toID - fromID);\\r\\n\\r\\n        for (uint256 id = fromID; id < toID; id++) {\\r\\n            IPair token = factory.allPairs(id);\\r\\n            uint256 i = id - fromID;\\r\\n            pairs[i].token = token;\\r\\n            pairs[i].token0 = token.token0();\\r\\n            pairs[i].token1 = token.token1();\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PairPoll {\\r\\n        IPair token;\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 totalSupply;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function pollPairs(address who, IPair[] calldata addresses)\\r\\n        public\\r\\n        view\\r\\n        returns (PairPoll[] memory)\\r\\n    {\\r\\n        PairPoll[] memory pairs = new PairPoll[](addresses.length);\\r\\n        for (uint256 i = 0; i < addresses.length; i++) {\\r\\n            IPair token = addresses[i];\\r\\n            pairs[i].token = token;\\r\\n            (uint256 reserve0, uint256 reserve1, ) = token.getReserves();\\r\\n            pairs[i].reserve0 = reserve0;\\r\\n            pairs[i].reserve1 = reserve1;\\r\\n            pairs[i].balance = token.balanceOf(who);\\r\\n            pairs[i].totalSupply = token.totalSupply();\\r\\n        }\\r\\n        return pairs;\\r\\n    }\\r\\n\\r\\n    struct PoolsInfo {\\r\\n        uint256 totalAllocPoint;\\r\\n        uint256 poolLength;\\r\\n    }\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 pid;\\r\\n        IPair lpToken;\\r\\n        uint256 allocPoint;\\r\\n        bool isPair;\\r\\n        IFactory factory;\\r\\n        IERC20 token0;\\r\\n        IERC20 token1;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    function getPools(uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolsInfo memory, PoolInfo[] memory)\\r\\n    {\\r\\n        PoolsInfo memory info;\\r\\n        info.totalAllocPoint = chef.totalAllocPoint();\\r\\n        uint256 poolLength = chef.poolLength();\\r\\n        info.poolLength = poolLength;\\r\\n\\r\\n        PoolInfo[] memory pools = new PoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (address lpToken, uint256 allocPoint, , ) = chef.poolInfo(pids[i]);\\r\\n            IPair pair = IPair(lpToken);\\r\\n            pools[i].lpToken = pair;\\r\\n            pools[i].allocPoint = allocPoint;\\r\\n\\r\\n            pools[i].name = pair.name();\\r\\n            pools[i].symbol = pair.symbol();\\r\\n            pools[i].decimals = pair.decimals();\\r\\n\\r\\n            pools[i].factory = pair.factory();\\r\\n            if (pools[i].factory != IFactory(0)) {\\r\\n                pools[i].isPair = true;\\r\\n                pools[i].token0 = pair.token0();\\r\\n                pools[i].token1 = pair.token1();\\r\\n            }\\r\\n        }\\r\\n        return (info, pools);\\r\\n    }\\r\\n\\r\\n    struct PoolFound {\\r\\n        uint256 pid;\\r\\n        uint256 balance;\\r\\n    }\\r\\n\\r\\n    function findPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (PoolFound[] memory)\\r\\n    {\\r\\n        PoolFound[] memory pools = new PoolFound[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            pools[i].pid = pids[i];\\r\\n            (pools[i].balance, ) = chef.userInfo(pids[i], who);\\r\\n        }\\r\\n\\r\\n        return pools;\\r\\n    }\\r\\n\\r\\n    struct UserPoolInfo {\\r\\n        uint256 pid;\\r\\n        uint256 balance; // Balance of pool tokens\\r\\n        uint256 totalSupply; // Token staked lp tokens\\r\\n        uint256 lpBalance; // Balance of lp tokens not staked\\r\\n        uint256 lpTotalSupply; // TotalSupply of lp tokens\\r\\n        uint256 lpAllowance; // LP tokens approved for masterchef\\r\\n        uint256 reserve0;\\r\\n        uint256 reserve1;\\r\\n        uint256 rewardDebt;\\r\\n        uint256 pending; // Pending SUSHI\\r\\n    }\\r\\n\\r\\n    function pollPools(address who, uint256[] calldata pids)\\r\\n        public\\r\\n        view\\r\\n        returns (UserPoolInfo[] memory)\\r\\n    {\\r\\n        UserPoolInfo[] memory pools = new UserPoolInfo[](pids.length);\\r\\n\\r\\n        for (uint256 i = 0; i < pids.length; i++) {\\r\\n            (uint256 amount, ) = chef.userInfo(pids[i], who);\\r\\n            pools[i].balance = amount;\\r\\n            (uint256 pendingJoe, , , ) = chef.pendingTokens(pids[i], who);\\r\\n            pools[i].pending = pendingJoe;\\r\\n\\r\\n            (address lpToken, , , ) = chef.poolInfo(pids[i]);\\r\\n            pools[i].pid = pids[i];\\r\\n            IPair pair = IPair(lpToken);\\r\\n            IFactory factory = pair.factory();\\r\\n            if (factory != IFactory(0)) {\\r\\n                pools[i].totalSupply = pair.balanceOf(address(chef));\\r\\n                pools[i].lpAllowance = pair.allowance(who, address(chef));\\r\\n                pools[i].lpBalance = pair.balanceOf(who);\\r\\n                pools[i].lpTotalSupply = pair.totalSupply();\\r\\n\\r\\n                (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\r\\n                pools[i].reserve0 = reserve0;\\r\\n                pools[i].reserve1 = reserve1;\\r\\n            }\\r\\n        }\\r\\n        return pools;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab66f2286e95132acc131952e426427efc46ae363d280868d94cdf4b3d5fe93c\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "contracts/boringcrypto/BoringHelperV1.sol:620:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        IERC20 WAVAX_,\n        ^-----------^\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 17527,
          "file": "contracts/boringcrypto/BoringHelperV1.sol",
          "start": 17514
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "contracts/boringcrypto/BoringHelperV1.sol:726:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        address[] calldata masterContracts\n        ^--------------------------------^\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 20463,
          "file": "contracts/boringcrypto/BoringHelperV1.sol",
          "start": 20429
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/boringcrypto/BoringHelperV1.sol": {
        "ast": {
          "absolutePath": "contracts/boringcrypto/BoringHelperV1.sol",
          "exportedSymbols": {
            "AccrueInfo": [
              1037
            ],
            "BoringERC20": [
              569
            ],
            "BoringHelperV1": [
              2907
            ],
            "BoringMath": [
              266
            ],
            "BoringPair": [
              610
            ],
            "IBentoBox": [
              1025
            ],
            "IERC20": [
              54
            ],
            "IFactory": [
              193
            ],
            "IKashiPair": [
              1416
            ],
            "IMasterChef": [
              139
            ],
            "IOracle": [
              1077
            ],
            "IPair": [
              161
            ],
            "IStrategy": [
              639
            ],
            "Ownable": [
              290
            ],
            "Rebase": [
              1030
            ]
          },
          "id": 2908,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.6",
                ".12"
              ],
              "nodeType": "PragmaDirective",
              "src": "472:23:0"
            },
            {
              "id": 2,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "497:33:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 54,
              "linearizedBaseContracts": [
                54
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "18160ddd",
                  "id": 7,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "670:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 7,
                        "src": "696:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "695:9:0"
                  },
                  "scope": 54,
                  "src": "650:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "70a08231",
                  "id": 14,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 14,
                        "src": "732:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "732:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "731:17:0"
                  },
                  "returnParameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 14,
                        "src": "772:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "772:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "771:9:0"
                  },
                  "scope": 54,
                  "src": "713:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "dd62ed3e",
                  "id": 23,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 23,
                        "src": "808:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 23,
                        "src": "823:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:32:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 23,
                        "src": "890:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:9:0"
                  },
                  "scope": 54,
                  "src": "789:110:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "095ea7b3",
                  "id": 32,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 32,
                        "src": "924:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 32,
                        "src": "941:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "941:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:33:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 32,
                        "src": "975:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "974:6:0"
                  },
                  "scope": 54,
                  "src": "907:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8da5cb5b",
                  "id": 37,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1003:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 37,
                        "src": "1029:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1028:9:0"
                  },
                  "scope": 54,
                  "src": "989:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 45,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "1061:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1061:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "1083:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1083:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 43,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "1103:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1103:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1060:57:0"
                  },
                  "src": "1046:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 53,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 53,
                        "src": "1149:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1149:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 53,
                        "src": "1181:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1181:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 53,
                        "src": "1215:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1215:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1138:97:0"
                  },
                  "src": "1124:112:0"
                }
              ],
              "scope": 2908,
              "src": "626:613:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 139,
              "linearizedBaseContracts": [
                139
              ],
              "name": "IMasterChef",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8aa28550",
                  "id": 59,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "BONUS_MULTIPLIER",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1297:2:0"
                  },
                  "returnParameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 59,
                        "src": "1323:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1322:9:0"
                  },
                  "scope": 139,
                  "src": "1272:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d49e77cd",
                  "id": 64,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "devaddr",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1356:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 64,
                        "src": "1382:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1381:9:0"
                  },
                  "scope": 139,
                  "src": "1340:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7cd07e47",
                  "id": 69,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "migrator",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1416:2:0"
                  },
                  "returnParameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 69,
                        "src": "1442:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1441:9:0"
                  },
                  "scope": 139,
                  "src": "1399:52:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8da5cb5b",
                  "id": 74,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:0"
                  },
                  "returnParameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 74,
                        "src": "1499:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1498:9:0"
                  },
                  "scope": 139,
                  "src": "1459:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "48cd4cb1",
                  "id": 79,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "startBlock",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1535:2:0"
                  },
                  "returnParameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 79,
                        "src": "1561:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1561:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1560:9:0"
                  },
                  "scope": 139,
                  "src": "1516:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "b985a3a0",
                  "id": 84,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joe",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1590:2:0"
                  },
                  "returnParameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 84,
                        "src": "1616:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1615:9:0"
                  },
                  "scope": 139,
                  "src": "1578:47:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d1aad742",
                  "id": 89,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joePerBlock",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1653:2:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 89,
                        "src": "1679:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1679:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1678:9:0"
                  },
                  "scope": 139,
                  "src": "1633:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "17caf6f1",
                  "id": 94,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalAllocPoint",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 90,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1720:2:0"
                  },
                  "returnParameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 94,
                        "src": "1746:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1746:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1745:9:0"
                  },
                  "scope": 139,
                  "src": "1696:59:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "081e3eda",
                  "id": 99,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "poolLength",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1782:2:0"
                  },
                  "returnParameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 99,
                        "src": "1808:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1808:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1807:9:0"
                  },
                  "scope": 139,
                  "src": "1763:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1526fe27",
                  "id": 112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "poolInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "nr",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1843:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1843:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1842:12:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1919:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1919:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1941:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1941:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1963:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1963:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "1985:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1985:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1904:99:0"
                  },
                  "scope": 139,
                  "src": "1825:179:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "93f1a40b",
                  "id": 123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "userInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "nr",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 123,
                        "src": "2030:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2030:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 123,
                        "src": "2042:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2029:25:0"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 123,
                        "src": "2105:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2105:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 123,
                        "src": "2114:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2114:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2104:18:0"
                  },
                  "scope": 139,
                  "src": "2012:111:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "ffcd4263",
                  "id": 138,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2154:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2167:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2167:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:26:0"
                  },
                  "returnParameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2244:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2266:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2266:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2288:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2288:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 138,
                        "src": "2316:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2229:105:0"
                  },
                  "scope": 139,
                  "src": "2131:204:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "1243:1095:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 140,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54,
                    "src": "2361:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$54",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 141,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2361:6:0"
                }
              ],
              "contractDependencies": [
                54
              ],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 161,
              "linearizedBaseContracts": [
                161,
                54
              ],
              "name": "IPair",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0dfe1681",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2390:2:0"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 146,
                        "src": "2416:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 143,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "2416:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2415:8:0"
                  },
                  "scope": 161,
                  "src": "2375:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d21220a7",
                  "id": 151,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2447:2:0"
                  },
                  "returnParameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 151,
                        "src": "2473:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 148,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "2473:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2472:8:0"
                  },
                  "scope": 161,
                  "src": "2432:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0902f1ac",
                  "id": 160,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2509:2:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 160,
                        "src": "2576:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 160,
                        "src": "2598:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2598:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 160,
                        "src": "2620:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2620:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2561:76:0"
                  },
                  "scope": 161,
                  "src": "2489:149:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "2342:299:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 193,
              "linearizedBaseContracts": [
                193
              ],
              "name": "IFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "574f2ba3",
                  "id": 166,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2694:2:0"
                  },
                  "returnParameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 166,
                        "src": "2720:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2719:9:0"
                  },
                  "scope": 193,
                  "src": "2671:58:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1e3dd18b",
                  "id": 173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 173,
                        "src": "2755:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2755:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2754:11:0"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 173,
                        "src": "2789:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 170,
                          "name": "IPair",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 161,
                          "src": "2789:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPair_$161",
                            "typeString": "contract IPair"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2788:7:0"
                  },
                  "scope": 193,
                  "src": "2737:59:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e6a43905",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 182,
                        "src": "2821:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 174,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "2821:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 182,
                        "src": "2836:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 176,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "2836:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2820:30:0"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 182,
                        "src": "2901:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 179,
                          "name": "IPair",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 161,
                          "src": "2901:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPair_$161",
                            "typeString": "contract IPair"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:7:0"
                  },
                  "scope": 193,
                  "src": "2804:104:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "017e7e58",
                  "id": 187,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2930:2:0"
                  },
                  "returnParameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 187,
                        "src": "2956:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2956:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2955:9:0"
                  },
                  "scope": 193,
                  "src": "2916:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "094b7415",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2993:2:0"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 192,
                        "src": "3019:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3019:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3018:9:0"
                  },
                  "scope": 193,
                  "src": "2973:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "2645:386:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 266,
              "linearizedBaseContracts": [
                266
              ],
              "name": "BoringMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "3130:72:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 203,
                                      "name": "c",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 200,
                                      "src": "3150:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 204,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 195,
                                        "src": "3154:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 205,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 197,
                                        "src": "3158:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3154:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3150:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 208,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3149:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 209,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "3164:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3149:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "426f72696e674d6174683a20416464204f766572666c6f77",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3167:26:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
                                "typeString": "literal_string \"BoringMath: Add Overflow\""
                              },
                              "value": "BoringMath: Add Overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf",
                                "typeString": "literal_string \"BoringMath: Add Overflow\""
                              }
                            ],
                            "id": 202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3141:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "3141:53:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 215,
                        "src": "3074:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3074:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 215,
                        "src": "3085:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3085:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3073:22:0"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 215,
                        "src": "3119:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3118:11:0"
                  },
                  "scope": 266,
                  "src": "3061:141:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3279:69:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 225,
                                      "name": "c",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 222,
                                      "src": "3299:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 226,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 217,
                                        "src": "3303:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 227,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "3307:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3303:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3299:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 230,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3298:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 231,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "3313:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3298:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "426f72696e674d6174683a20556e646572666c6f77",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3316:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
                                "typeString": "literal_string \"BoringMath: Underflow\""
                              },
                              "value": "BoringMath: Underflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa",
                                "typeString": "literal_string \"BoringMath: Underflow\""
                              }
                            ],
                            "id": 224,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3290:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3290:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "3290:50:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 237,
                        "src": "3223:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 237,
                        "src": "3234:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3234:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3222:22:0"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 237,
                        "src": "3268:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3268:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3267:11:0"
                  },
                  "scope": 266,
                  "src": "3210:138:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "3425:86:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 247,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 241,
                                  "src": "3444:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3449:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3444:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "id": 254,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "id": 250,
                                          "name": "c",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3455:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 253,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 251,
                                            "name": "a",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 239,
                                            "src": "3459:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "id": 252,
                                            "name": "b",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 241,
                                            "src": "3463:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "3459:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3455:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 255,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3454:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 256,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 241,
                                    "src": "3468:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3454:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 258,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "3473:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3454:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3444:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "426f72696e674d6174683a204d756c204f766572666c6f77",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3476:26:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e",
                                "typeString": "literal_string \"BoringMath: Mul Overflow\""
                              },
                              "value": "BoringMath: Mul Overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e",
                                "typeString": "literal_string \"BoringMath: Mul Overflow\""
                              }
                            ],
                            "id": 246,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3436:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "3436:67:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 265,
                        "src": "3369:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3369:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 265,
                        "src": "3380:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3380:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3368:22:0"
                  },
                  "returnParameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "c",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 265,
                        "src": "3414:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3414:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3413:11:0"
                  },
                  "scope": 266,
                  "src": "3356:155:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2908,
              "src": "3035:479:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 290,
              "linearizedBaseContracts": [
                290
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 268,
                  "mutability": "immutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 290,
                  "src": "3542:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 276,
                    "nodeType": "Block",
                    "src": "3604:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 271,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "3615:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3623:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3623:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3615:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "3615:18:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 277,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3592:2:0"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3604:0:0"
                  },
                  "scope": 290,
                  "src": "3581:60:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "3670:95:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "3689:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 281,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3698:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3698:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3689:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3710:34:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 279,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3681:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3681:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "3681:64:0"
                      },
                      {
                        "id": 287,
                        "nodeType": "PlaceholderStatement",
                        "src": "3756:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 289,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3667:2:0"
                  },
                  "src": "3649:116:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2908,
              "src": "3518:250:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 569,
              "linearizedBaseContracts": [
                569
              ],
              "name": "BoringERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "3916:502:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 297,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "3931:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3931:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3634",
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3946:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "3931:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 310,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "4020:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4020:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4035:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "4020:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 373,
                            "nodeType": "Block",
                            "src": "4372:39:0",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "3f3f3f",
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4394:5:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                                    "typeString": "literal_string \"???\""
                                  },
                                  "value": "???"
                                },
                                "functionReturnParameters": 296,
                                "id": 372,
                                "nodeType": "Return",
                                "src": "4387:12:0"
                              }
                            ]
                          },
                          "id": 374,
                          "nodeType": "IfStatement",
                          "src": "4016:395:0",
                          "trueBody": {
                            "id": 370,
                            "nodeType": "Block",
                            "src": "4039:327:0",
                            "statements": [
                              {
                                "assignments": [
                                  315
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 315,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 370,
                                    "src": "4054:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "typeName": {
                                      "id": 314,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4054:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 317,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4064:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4054:11:0"
                              },
                              {
                                "body": {
                                  "id": 330,
                                  "nodeType": "Block",
                                  "src": "4111:38:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "4130:3:0",
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "id": 327,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 315,
                                          "src": "4130:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "id": 329,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4130:3:0"
                                    }
                                  ]
                                },
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 320,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 318,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "4087:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3332",
                                      "id": 319,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4091:2:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "4087:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 321,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 292,
                                        "src": "4097:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 323,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 322,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 315,
                                        "src": "4102:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4097:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4108:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "4097:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4087:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 331,
                                "nodeType": "WhileStatement",
                                "src": "4080:69:0"
                              },
                              {
                                "assignments": [
                                  333
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 333,
                                    "mutability": "mutable",
                                    "name": "bytesArray",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 370,
                                    "src": "4163:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes"
                                    },
                                    "typeName": {
                                      "id": 332,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4163:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 338,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 336,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "4199:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "4189:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 334,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4193:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4189:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4163:38:0"
                              },
                              {
                                "body": {
                                  "id": 363,
                                  "nodeType": "Block",
                                  "src": "4257:58:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 361,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 355,
                                            "name": "bytesArray",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 333,
                                            "src": "4276:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 357,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 356,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 315,
                                            "src": "4287:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "4276:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 358,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 292,
                                            "src": "4292:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 360,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 359,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 315,
                                            "src": "4297:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4292:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          }
                                        },
                                        "src": "4276:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "id": 362,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4276:23:0"
                                    }
                                  ]
                                },
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 343,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "4228:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3332",
                                      "id": 344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4232:2:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "4228:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    },
                                    "id": 350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 346,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 292,
                                        "src": "4238:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 348,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 347,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 315,
                                        "src": "4243:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4238:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 349,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4249:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "4238:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4228:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 364,
                                "initializationExpression": {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "argumentTypes": null,
                                      "id": 339,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "4221:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 340,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4225:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "4221:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 342,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4221:5:0"
                                },
                                "loopExpression": {
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "4252:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 352,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "4252:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 354,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4252:3:0"
                                },
                                "nodeType": "ForStatement",
                                "src": "4216:99:0"
                              },
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 367,
                                      "name": "bytesArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 333,
                                      "src": "4343:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4336:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 365,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4336:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4336:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "functionReturnParameters": 296,
                                "id": 369,
                                "nodeType": "Return",
                                "src": "4329:25:0"
                              }
                            ]
                          }
                        },
                        "id": 375,
                        "nodeType": "IfStatement",
                        "src": "3927:484:0",
                        "trueBody": {
                          "id": 309,
                          "nodeType": "Block",
                          "src": "3950:60:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 303,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 292,
                                    "src": "3983:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "id": 305,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3990:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 304,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3990:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      }
                                    ],
                                    "id": 306,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3989:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 301,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3972:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3972:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3972:26:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "functionReturnParameters": 296,
                              "id": 308,
                              "nodeType": "Return",
                              "src": "3965:33:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 377,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "returnDataToString",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 377,
                        "src": "3827:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3827:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3826:19:0"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 377,
                        "src": "3896:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3896:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3895:15:0"
                  },
                  "scope": 569,
                  "src": "3799:619:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 406,
                    "nodeType": "Block",
                    "src": "4494:200:0",
                    "statements": [
                      {
                        "assignments": [
                          385,
                          387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 385,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 406,
                            "src": "4506:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 384,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4506:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 387,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 406,
                            "src": "4520:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 386,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4520:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 398,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30783935643839623431",
                                  "id": 395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4604:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2514000705_by_1",
                                    "typeString": "int_const 2514000705"
                                  },
                                  "value": "0x95d89b41"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2514000705_by_1",
                                    "typeString": "int_const 2514000705"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4581:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4581:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4581:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 390,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 379,
                                  "src": "4549:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4541:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 388,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4541:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4541:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4541:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4541:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4505:121:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "id": 399,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "4644:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "hexValue": "3f3f3f",
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4681:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                              "typeString": "literal_string \"???\""
                            },
                            "value": "???"
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4644:42:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 401,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "4673:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 400,
                              "name": "returnDataToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "4654:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4654:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 383,
                        "id": 405,
                        "nodeType": "Return",
                        "src": "4637:49:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 407,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 407,
                        "src": "4442:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 378,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "4442:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4441:14:0"
                  },
                  "returnParameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 407,
                        "src": "4479:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4479:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4478:15:0"
                  },
                  "scope": 569,
                  "src": "4426:268:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "4768:200:0",
                    "statements": [
                      {
                        "assignments": [
                          415,
                          417
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 415,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 436,
                            "src": "4780:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4780:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 417,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 436,
                            "src": "4794:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 416,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4794:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 428,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30783036666464653033",
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4878:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_117300739_by_1",
                                    "typeString": "int_const 117300739"
                                  },
                                  "value": "0x06fdde03"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_117300739_by_1",
                                    "typeString": "int_const 117300739"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 423,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4855:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4855:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4855:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 420,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 409,
                                  "src": "4823:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4815:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4815:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4815:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4815:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4815:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4779:121:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "id": 429,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "4918:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "hexValue": "3f3f3f",
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4955:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                              "typeString": "literal_string \"???\""
                            },
                            "value": "???"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4918:42:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 431,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 417,
                                "src": "4947:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 430,
                              "name": "returnDataToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "4928:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4928:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 413,
                        "id": 435,
                        "nodeType": "Return",
                        "src": "4911:49:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 437,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 437,
                        "src": "4716:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 408,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "4716:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4715:14:0"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 437,
                        "src": "4753:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4753:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4752:15:0"
                  },
                  "scope": 569,
                  "src": "4702:266:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "5038:219:0",
                    "statements": [
                      {
                        "assignments": [
                          445,
                          447
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 445,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 475,
                            "src": "5050:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 444,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 447,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 475,
                            "src": "5064:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5064:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30783331336365353637",
                                  "id": 455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5148:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_826074471_by_1",
                                    "typeString": "int_const 826074471"
                                  },
                                  "value": "0x313ce567"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_826074471_by_1",
                                    "typeString": "int_const 826074471"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 453,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5125:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5125:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5125:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 450,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 439,
                                  "src": "5093:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5085:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 448,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5085:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5085:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5085:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5085:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5049:121:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 459,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "5188:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 460,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "5199:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5199:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5214:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "5199:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5188:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "hexValue": "3138",
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5247:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5188:61:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 467,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "5230:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5237:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 468,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5237:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  }
                                ],
                                "id": 470,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5236:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 465,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5219:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5219:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5219:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 443,
                        "id": 474,
                        "nodeType": "Return",
                        "src": "5181:68:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 476,
                        "src": "4994:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 438,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "4994:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4993:14:0"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 476,
                        "src": "5031:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5031:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5030:7:0"
                  },
                  "scope": 569,
                  "src": "4976:281:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "5337:288:0",
                    "statements": [
                      {
                        "assignments": [
                          484,
                          486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 484,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 519,
                            "src": "5349:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 483,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5349:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 486,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 519,
                            "src": "5363:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5363:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 499,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30783336343465353135",
                                  "id": 496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5469:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_910484757_by_1",
                                    "typeString": "int_const 910484757"
                                  },
                                  "value": "0x3644e515"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_910484757_by_1",
                                    "typeString": "int_const 910484757"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 494,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5446:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5446:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5446:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 489,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 478,
                                    "src": "5392:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5384:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 487,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5384:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5384:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "staticcall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5384:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                              }
                            },
                            "id": 493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3130303030",
                                "id": 492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5429:5:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              }
                            ],
                            "src": "5384:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5384:97:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5348:133:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 484,
                              "src": "5512:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 501,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 486,
                                  "src": "5523:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5523:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5538:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "5523:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5512:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5615:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5607:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 513,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "5607:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5607:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5512:105:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 508,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 486,
                                "src": "5571:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5578:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 509,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5578:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  }
                                ],
                                "id": 511,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5577:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 506,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5560:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5560:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5560:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 482,
                        "id": 518,
                        "nodeType": "Return",
                        "src": "5492:125:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 520,
                        "src": "5291:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 477,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "5291:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5290:14:0"
                  },
                  "returnParameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 520,
                        "src": "5328:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5328:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5327:9:0"
                  },
                  "scope": 569,
                  "src": "5265:360:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 567,
                    "nodeType": "Block",
                    "src": "5742:375:0",
                    "statements": [
                      {
                        "assignments": [
                          530,
                          532
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 530,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 567,
                            "src": "5754:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 529,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5754:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 532,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 567,
                            "src": "5768:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 531,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5768:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 546,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30783765636562653030",
                                  "id": 542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5873:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2127478272_by_1",
                                    "typeString": "int_const 2127478272"
                                  },
                                  "value": "0x7ecebe00"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 543,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 524,
                                  "src": "5885:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2127478272_by_1",
                                    "typeString": "int_const 2127478272"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 540,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5850:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5850:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5850:41:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 535,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "5797:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5789:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 533,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5789:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5789:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "staticcall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5789:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "hexValue": "35303030",
                                "id": 538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5834:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                "value": "5000"
                              }
                            ],
                            "src": "5789:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5789:103:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5753:139:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 547,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "5923:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 548,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "5934:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5934:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5949:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "5934:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5923:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "6026:2:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 562,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6027:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              ],
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6018:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 560,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6018:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6018:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5923:106:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 555,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "5982:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5989:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 556,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5989:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  }
                                ],
                                "id": 558,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5988:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 553,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5971:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5971:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5971:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 528,
                        "id": 566,
                        "nodeType": "Return",
                        "src": "5903:126:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 568,
                        "src": "5649:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 521,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "5649:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 568,
                        "src": "5663:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5648:29:0"
                  },
                  "returnParameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 568,
                        "src": "5728:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5728:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5727:9:0"
                  },
                  "scope": 569,
                  "src": "5633:484:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2908,
              "src": "3772:2348:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 610,
              "linearizedBaseContracts": [
                610
              ],
              "name": "BoringPair",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 608,
                    "nodeType": "Block",
                    "src": "6212:277:0",
                    "statements": [
                      {
                        "assignments": [
                          577,
                          579
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 577,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 608,
                            "src": "6224:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 576,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6224:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 579,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 608,
                            "src": "6238:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 578,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6238:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 590,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30786334356130313535",
                                  "id": 587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6321:10:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3294232917_by_1",
                                    "typeString": "int_const 3294232917"
                                  },
                                  "value": "0xc45a0155"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_3294232917_by_1",
                                    "typeString": "int_const 3294232917"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 585,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6298:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6298:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6298:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 582,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 571,
                                  "src": "6267:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                ],
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6259:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 580,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6259:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6259:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6259:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6259:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6223:120:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 591,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "6374:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 592,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "6385:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6385:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6400:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "6385:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6374:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6479:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 603,
                              "name": "IFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "6470:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                "typeString": "type(contract IFactory)"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6470:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "6374:107:0",
                          "trueExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 599,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "6433:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "id": 600,
                                    "name": "IFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 193,
                                    "src": "6440:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                      "typeString": "type(contract IFactory)"
                                    }
                                  }
                                ],
                                "id": 601,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6439:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 597,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6422:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6422:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6422:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "functionReturnParameters": 575,
                        "id": 607,
                        "nodeType": "Return",
                        "src": "6354:127:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 609,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "pair",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 609,
                        "src": "6167:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 570,
                          "name": "IPair",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 161,
                          "src": "6167:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPair_$161",
                            "typeString": "contract IPair"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6166:12:0"
                  },
                  "returnParameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 609,
                        "src": "6202:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 573,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "6202:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6201:10:0"
                  },
                  "scope": 610,
                  "src": "6150:339:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2908,
              "src": "6124:368:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 639,
              "linearizedBaseContracts": [
                639
              ],
              "name": "IStrategy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "6939aaf5",
                  "id": 615,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 615,
                        "src": "6537:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6537:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6536:16:0"
                  },
                  "returnParameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6561:0:0"
                  },
                  "scope": 639,
                  "src": "6523:39:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "18fccc76",
                  "id": 624,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "harvest",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 617,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 624,
                        "src": "6587:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 624,
                        "src": "6604:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6604:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6586:33:0"
                  },
                  "returnParameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "amountAdded",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 624,
                        "src": "6656:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6656:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6655:20:0"
                  },
                  "scope": 639,
                  "src": "6570:106:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "2e1a7d4d",
                  "id": 631,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 631,
                        "src": "6702:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6702:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6701:16:0"
                  },
                  "returnParameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "actualAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 631,
                        "src": "6736:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6736:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6735:22:0"
                  },
                  "scope": 639,
                  "src": "6684:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7f8661a1",
                  "id": 638,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 638,
                        "src": "6780:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6780:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6779:17:0"
                  },
                  "returnParameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "amountAdded",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 638,
                        "src": "6815:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6815:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6814:20:0"
                  },
                  "scope": 639,
                  "src": "6766:69:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "6496:342:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1025,
              "linearizedBaseContracts": [
                1025
              ],
              "name": "IBentoBox",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 647,
                  "name": "LogDeploy",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 647,
                        "src": "6895:30:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6895:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 647,
                        "src": "6936:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6936:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "cloneAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 647,
                        "src": "6957:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6957:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6884:108:0"
                  },
                  "src": "6869:124:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 659,
                  "name": "LogDeposit",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7026:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7026:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7058:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7058:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7089:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7089:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 655,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7118:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7118:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7143:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7143:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7015:148:0"
                  },
                  "src": "6999:165:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 671,
                  "name": "LogFlashLoan",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "borrower",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 671,
                        "src": "7199:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7199:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 671,
                        "src": "7234:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7234:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 671,
                        "src": "7266:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7266:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 667,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 671,
                        "src": "7291:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7291:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 671,
                        "src": "7319:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7319:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7188:162:0"
                  },
                  "src": "7170:181:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 675,
                  "name": "LogRegisterProtocol",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 673,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "protocol",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 675,
                        "src": "7383:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7383:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7382:26:0"
                  },
                  "src": "7357:52:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 683,
                  "name": "LogSetMasterContractApproval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 683,
                        "src": "7460:30:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7460:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 683,
                        "src": "7501:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7501:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 683,
                        "src": "7532:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7532:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7449:103:0"
                  },
                  "src": "7415:138:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 689,
                  "name": "LogStrategyDivest",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 685,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 689,
                        "src": "7583:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7583:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 687,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 689,
                        "src": "7606:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7606:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7582:39:0"
                  },
                  "src": "7559:63:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 695,
                  "name": "LogStrategyInvest",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 695,
                        "src": "7652:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7652:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 693,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 695,
                        "src": "7675:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7675:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7651:39:0"
                  },
                  "src": "7628:63:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 701,
                  "name": "LogStrategyLoss",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 697,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 701,
                        "src": "7719:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7719:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 701,
                        "src": "7742:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7742:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7718:39:0"
                  },
                  "src": "7697:61:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 707,
                  "name": "LogStrategyProfit",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 707,
                        "src": "7788:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7788:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 705,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 707,
                        "src": "7811:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 704,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7811:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7787:39:0"
                  },
                  "src": "7764:63:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 713,
                  "name": "LogStrategyQueued",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 713,
                        "src": "7857:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7857:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 713,
                        "src": "7880:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7880:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7856:49:0"
                  },
                  "src": "7833:73:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 719,
                  "name": "LogStrategySet",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 715,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 719,
                        "src": "7933:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7933:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 717,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "strategy",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 719,
                        "src": "7956:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7956:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7932:49:0"
                  },
                  "src": "7912:70:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 725,
                  "name": "LogStrategyTargetPercentage",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 721,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 725,
                        "src": "8032:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8032:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "targetPercentage",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 725,
                        "src": "8064:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8064:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8021:74:0"
                  },
                  "src": "7988:108:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 735,
                  "name": "LogTransfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 727,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 735,
                        "src": "8130:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8130:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 729,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 735,
                        "src": "8162:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8162:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 731,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 735,
                        "src": "8193:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8193:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 735,
                        "src": "8222:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8119:123:0"
                  },
                  "src": "8102:141:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 741,
                  "name": "LogWhiteListMasterContract",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 737,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 741,
                        "src": "8292:30:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8292:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 741,
                        "src": "8333:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8333:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8281:72:0"
                  },
                  "src": "8249:105:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 753,
                  "name": "LogWithdraw",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 743,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 753,
                        "src": "8388:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8388:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 753,
                        "src": "8420:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8420:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 747,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 753,
                        "src": "8451:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 753,
                        "src": "8480:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8480:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 753,
                        "src": "8505:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8505:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8377:148:0"
                  },
                  "src": "8360:166:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 759,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 759,
                        "src": "8569:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8569:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 759,
                        "src": "8609:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8609:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8558:82:0"
                  },
                  "src": "8532:109:0"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f7888aec",
                  "id": 768,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 764,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 768,
                        "src": "8668:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 760,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "8668:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 768,
                        "src": "8676:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8667:17:0"
                  },
                  "returnParameters": {
                    "id": 767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 766,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 768,
                        "src": "8708:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8708:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8707:9:0"
                  },
                  "scope": 1025,
                  "src": "8649:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d2423b51",
                  "id": 782,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batch",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "calls",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 782,
                        "src": "8740:22:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 769,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8740:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 770,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8740:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "revertOnFail",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 782,
                        "src": "8764:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8764:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8739:43:0"
                  },
                  "returnParameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 777,
                        "mutability": "mutable",
                        "name": "successes",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 782,
                        "src": "8836:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 775,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "8836:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 776,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8836:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "results",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 782,
                        "src": "8861:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 778,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8861:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 779,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8861:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8835:49:0"
                  },
                  "scope": 1025,
                  "src": "8725:160:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4e71e0c8",
                  "id": 785,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8916:2:0"
                  },
                  "returnParameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8927:0:0"
                  },
                  "scope": 1025,
                  "src": "8893:35:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1f54245b",
                  "id": 794,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 787,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 794,
                        "src": "8962:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 786,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8962:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 794,
                        "src": "8995:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8995:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "useCreate2",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 794,
                        "src": "9025:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9025:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8951:96:0"
                  },
                  "returnParameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9064:0:0"
                  },
                  "scope": 1025,
                  "src": "8936:129:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "02b9446c",
                  "id": 811,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "token_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9100:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 795,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "9100:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9124:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9124:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9147:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9147:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 802,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9168:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9168:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9193:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9193:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9089:124:0"
                  },
                  "returnParameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9240:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9240:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "shareOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 811,
                        "src": "9259:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9259:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9239:37:0"
                  },
                  "scope": 1025,
                  "src": "9073:204:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "66c6bb0b",
                  "id": 820,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "harvest",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 820,
                        "src": "9312:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 812,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "9312:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 820,
                        "src": "9335:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9335:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "maxChangeAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 820,
                        "src": "9358:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9301:87:0"
                  },
                  "returnParameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9397:0:0"
                  },
                  "scope": 1025,
                  "src": "9285:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "91e0eab5",
                  "id": 829,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "masterContractApproved",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 829,
                        "src": "9438:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9438:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 829,
                        "src": "9447:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9447:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9437:18:0"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 829,
                        "src": "9506:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9506:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9505:6:0"
                  },
                  "scope": 1025,
                  "src": "9406:106:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "bafe4f14",
                  "id": 836,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "masterContractOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 831,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 836,
                        "src": "9546:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9546:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9545:9:0"
                  },
                  "returnParameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 836,
                        "src": "9578:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9578:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9577:9:0"
                  },
                  "scope": 1025,
                  "src": "9520:67:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7ecebe00",
                  "id": 843,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 838,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 843,
                        "src": "9611:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9611:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9610:9:0"
                  },
                  "returnParameters": {
                    "id": 842,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 843,
                        "src": "9643:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9642:9:0"
                  },
                  "scope": 1025,
                  "src": "9595:57:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8da5cb5b",
                  "id": 848,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9674:2:0"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 848,
                        "src": "9700:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:9:0"
                  },
                  "scope": 1025,
                  "src": "9660:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e30c3978",
                  "id": 853,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingOwner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9738:2:0"
                  },
                  "returnParameters": {
                    "id": 852,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 853,
                        "src": "9764:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9764:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9763:9:0"
                  },
                  "scope": 1025,
                  "src": "9717:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5108a558",
                  "id": 860,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingStrategy",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 860,
                        "src": "9806:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 854,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "9806:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9805:8:0"
                  },
                  "returnParameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 860,
                        "src": "9837:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$639",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 857,
                          "name": "IStrategy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 639,
                          "src": "9837:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$639",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9836:11:0"
                  },
                  "scope": 1025,
                  "src": "9781:67:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7c516e94",
                  "id": 879,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permitToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "9887:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 861,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "9887:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "9910:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9910:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "9933:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9933:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "9954:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9954:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "9979:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9979:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "10006:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10006:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "10024:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10024:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 879,
                        "src": "10044:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10044:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9876:184:0"
                  },
                  "returnParameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10069:0:0"
                  },
                  "scope": 1025,
                  "src": "9856:214:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "aee4d1b2",
                  "id": 882,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerProtocol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10103:2:0"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10114:0:0"
                  },
                  "scope": 1025,
                  "src": "10078:37:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c0a47c93",
                  "id": 897,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setMasterContractApproval",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 884,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10168:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 883,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10168:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10191:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 885,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10191:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10224:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10224:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10248:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 889,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10248:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10266:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10266:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 897,
                        "src": "10286:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10286:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10157:145:0"
                  },
                  "returnParameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10311:0:0"
                  },
                  "scope": 1025,
                  "src": "10123:189:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "72cb5d97",
                  "id": 904,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStrategy",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 904,
                        "src": "10341:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 898,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10341:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "newStrategy",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 904,
                        "src": "10355:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$639",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 900,
                          "name": "IStrategy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 639,
                          "src": "10355:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$639",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10340:37:0"
                  },
                  "returnParameters": {
                    "id": 903,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10386:0:0"
                  },
                  "scope": 1025,
                  "src": "10320:67:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3e2a9d4e",
                  "id": 911,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStrategyTargetPercentage",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 911,
                        "src": "10432:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 905,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10432:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "targetPercentage_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 911,
                        "src": "10446:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "10446:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10431:40:0"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10489:0:0"
                  },
                  "scope": 1025,
                  "src": "10395:95:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "228bfd9f",
                  "id": 918,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "strategy",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 914,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 918,
                        "src": "10516:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 912,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10516:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10515:8:0"
                  },
                  "returnParameters": {
                    "id": 917,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 918,
                        "src": "10547:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$639",
                          "typeString": "contract IStrategy"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 915,
                          "name": "IStrategy",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 639,
                          "src": "10547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$639",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10546:11:0"
                  },
                  "scope": 1025,
                  "src": "10498:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "df23b45b",
                  "id": 929,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "strategyData",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 929,
                        "src": "10588:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 919,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10588:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10587:8:0"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "strategyStartDate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 929,
                        "src": "10660:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "10660:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "targetPercentage",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 929,
                        "src": "10699:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "10699:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 929,
                        "src": "10737:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "10737:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10645:118:0"
                  },
                  "scope": 1025,
                  "src": "10566:198:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "56623118",
                  "id": 940,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toAmount",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 940,
                        "src": "10800:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 930,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10800:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 940,
                        "src": "10823:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10823:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "roundUp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 940,
                        "src": "10847:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10847:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10789:77:0"
                  },
                  "returnParameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 940,
                        "src": "10890:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10889:16:0"
                  },
                  "scope": 1025,
                  "src": "10772:134:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "da5139ca",
                  "id": 951,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toShare",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 951,
                        "src": "10941:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 941,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "10941:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 944,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 951,
                        "src": "10964:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10964:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "roundUp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 951,
                        "src": "10989:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10989:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10930:78:0"
                  },
                  "returnParameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 951,
                        "src": "11032:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11031:15:0"
                  },
                  "scope": 1025,
                  "src": "10914:133:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4ffe34db",
                  "id": 960,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totals",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 960,
                        "src": "11071:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 952,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "11071:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11070:8:0"
                  },
                  "returnParameters": {
                    "id": 959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "elastic",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 960,
                        "src": "11129:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "11129:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "base",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 960,
                        "src": "11146:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "11146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11128:31:0"
                  },
                  "scope": 1025,
                  "src": "11055:105:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f18d03cc",
                  "id": 971,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 962,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 971,
                        "src": "11196:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 961,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "11196:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 971,
                        "src": "11219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11219:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 971,
                        "src": "11242:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11242:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 971,
                        "src": "11263:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11263:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11185:98:0"
                  },
                  "returnParameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11292:0:0"
                  },
                  "scope": 1025,
                  "src": "11168:125:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0fca8843",
                  "id": 984,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferMultiple",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 984,
                        "src": "11337:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 972,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "11337:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 975,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 984,
                        "src": "11360:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11360:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "tos",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 984,
                        "src": "11383:22:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 976,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11383:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 977,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11383:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "shares",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 984,
                        "src": "11416:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 979,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11416:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 980,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11416:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11326:122:0"
                  },
                  "returnParameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11457:0:0"
                  },
                  "scope": 1025,
                  "src": "11301:157:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "078dfbe7",
                  "id": 993,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 993,
                        "src": "11503:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11503:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "direct",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 993,
                        "src": "11530:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11530:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "renounce",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 993,
                        "src": "11552:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11552:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11492:80:0"
                  },
                  "returnParameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11581:0:0"
                  },
                  "scope": 1025,
                  "src": "11466:116:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "733a9d7c",
                  "id": 1000,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "whitelistMasterContract",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1000,
                        "src": "11623:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11623:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1000,
                        "src": "11647:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11647:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11622:39:0"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11679:0:0"
                  },
                  "scope": 1025,
                  "src": "11590:90:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "12a90c8a",
                  "id": 1007,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "whitelistedMasterContracts",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1007,
                        "src": "11724:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11724:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11723:9:0"
                  },
                  "returnParameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1007,
                        "src": "11756:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11756:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11755:6:0"
                  },
                  "scope": 1025,
                  "src": "11688:74:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "97da6d30",
                  "id": 1024,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1009,
                        "mutability": "mutable",
                        "name": "token_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11798:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1008,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "11798:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11822:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11822:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11845:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11845:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11866:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11866:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11891:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11787:124:0"
                  },
                  "returnParameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11930:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11930:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "shareOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1024,
                        "src": "11949:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11929:37:0"
                  },
                  "scope": 1025,
                  "src": "11770:197:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "6842:5128:0"
            },
            {
              "canonicalName": "Rebase",
              "id": 1030,
              "members": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "elastic",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1030,
                  "src": "11995:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11995:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "base",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1030,
                  "src": "12017:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12017:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "name": "Rebase",
              "nodeType": "StructDefinition",
              "scope": 2908,
              "src": "11974:59:0",
              "visibility": "public"
            },
            {
              "canonicalName": "AccrueInfo",
              "id": 1037,
              "members": [
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "interestPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "12062:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12062:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "lastAccrued",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "12093:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12093:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "feesEarnedFraction",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1037,
                  "src": "12118:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12118:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "name": "AccrueInfo",
              "nodeType": "StructDefinition",
              "scope": 2908,
              "src": "12037:111:0",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1077,
              "linearizedBaseContracts": [
                1077
              ],
              "name": "IOracle",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d6d7d525",
                  "id": 1046,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1046,
                        "src": "12190:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12190:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12189:21:0"
                  },
                  "returnParameters": {
                    "id": 1045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1046,
                        "src": "12247:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12247:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1044,
                        "mutability": "mutable",
                        "name": "rate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1046,
                        "src": "12261:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1043,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12261:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12246:28:0"
                  },
                  "scope": 1077,
                  "src": "12177:98:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "eeb8a8d3",
                  "id": 1055,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "peek",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1055,
                        "src": "12297:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12297:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12296:21:0"
                  },
                  "returnParameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1055,
                        "src": "12368:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12368:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "rate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1055,
                        "src": "12382:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12382:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12367:28:0"
                  },
                  "scope": 1077,
                  "src": "12283:113:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d39bbef0",
                  "id": 1062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "peekSpot",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1062,
                        "src": "12422:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12422:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12421:21:0"
                  },
                  "returnParameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "rate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1062,
                        "src": "12466:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12465:14:0"
                  },
                  "scope": 1077,
                  "src": "12404:76:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c699c4d6",
                  "id": 1069,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "12504:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12504:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12503:21:0"
                  },
                  "returnParameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1067,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "12548:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12548:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12547:15:0"
                  },
                  "scope": 1077,
                  "src": "12488:75:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d568866c",
                  "id": 1076,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1072,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1071,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1076,
                        "src": "12585:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1070,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12585:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12584:21:0"
                  },
                  "returnParameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1076,
                        "src": "12629:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12629:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12628:15:0"
                  },
                  "scope": 1077,
                  "src": "12571:73:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "12152:495:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1416,
              "linearizedBaseContracts": [
                1416
              ],
              "name": "IKashiPair",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3644e515",
                  "id": 1082,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12704:2:0"
                  },
                  "returnParameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1082,
                        "src": "12730:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12730:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12729:9:0"
                  },
                  "scope": 1416,
                  "src": "12679:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f8ba4cff",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "accrue",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12762:2:0"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12773:0:0"
                  },
                  "scope": 1416,
                  "src": "12747:27:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "b27c0e74",
                  "id": 1090,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "accrueInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12801:2:0"
                  },
                  "returnParameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "info",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1090,
                        "src": "12827:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AccrueInfo_$1037_memory_ptr",
                          "typeString": "struct AccrueInfo"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1087,
                          "name": "AccrueInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1037,
                          "src": "12827:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AccrueInfo_$1037_storage_ptr",
                            "typeString": "struct AccrueInfo"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12826:24:0"
                  },
                  "scope": 1416,
                  "src": "12782:69:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1b51e940",
                  "id": 1101,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addAsset",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12887:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12887:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "skim",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12908:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12908:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12928:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12928:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12876:72:0"
                  },
                  "returnParameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "fraction",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12967:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12966:18:0"
                  },
                  "scope": 1416,
                  "src": "12859:126:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "860ffea1",
                  "id": 1110,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addCollateral",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1110,
                        "src": "13026:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13026:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "skim",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1110,
                        "src": "13047:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13047:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1110,
                        "src": "13067:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13067:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13015:72:0"
                  },
                  "returnParameters": {
                    "id": 1109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13096:0:0"
                  },
                  "scope": 1416,
                  "src": "12993:104:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "dd62ed3e",
                  "id": 1119,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1119,
                        "src": "13124:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13124:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1119,
                        "src": "13133:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13133:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13123:18:0"
                  },
                  "returnParameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1119,
                        "src": "13165:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13165:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13164:9:0"
                  },
                  "scope": 1416,
                  "src": "13105:69:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "095ea7b3",
                  "id": 1128,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1128,
                        "src": "13199:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13199:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1128,
                        "src": "13216:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13216:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13198:33:0"
                  },
                  "returnParameters": {
                    "id": 1127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1128,
                        "src": "13250:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13250:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13249:6:0"
                  },
                  "scope": 1416,
                  "src": "13182:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "38d52e0f",
                  "id": 1133,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "asset",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13278:2:0"
                  },
                  "returnParameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1131,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1133,
                        "src": "13304:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1130,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "13304:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13303:8:0"
                  },
                  "scope": 1416,
                  "src": "13264:48:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "70a08231",
                  "id": 1140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1140,
                        "src": "13339:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13339:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13338:9:0"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1140,
                        "src": "13371:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13371:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13370:9:0"
                  },
                  "scope": 1416,
                  "src": "13320:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "6b2ace87",
                  "id": 1145,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bentoBox",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13405:2:0"
                  },
                  "returnParameters": {
                    "id": 1144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1145,
                        "src": "13431:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBentoBox_$1025",
                          "typeString": "contract IBentoBox"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1142,
                          "name": "IBentoBox",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1025,
                          "src": "13431:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBentoBox_$1025",
                            "typeString": "contract IBentoBox"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13430:11:0"
                  },
                  "scope": 1416,
                  "src": "13388:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4b8a3529",
                  "id": 1156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "borrow",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1156,
                        "src": "13466:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1156,
                        "src": "13478:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13478:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13465:28:0"
                  },
                  "returnParameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "part",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1156,
                        "src": "13530:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13530:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1156,
                        "src": "13544:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13529:29:0"
                  },
                  "scope": 1416,
                  "src": "13450:109:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4e71e0c8",
                  "id": 1159,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13590:2:0"
                  },
                  "returnParameters": {
                    "id": 1158,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13601:0:0"
                  },
                  "scope": 1416,
                  "src": "13567:35:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d8dfeb45",
                  "id": 1164,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collateral",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13629:2:0"
                  },
                  "returnParameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1164,
                        "src": "13655:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1161,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "13655:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13654:8:0"
                  },
                  "scope": 1416,
                  "src": "13610:53:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "656f3d64",
                  "id": 1180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cook",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1167,
                        "mutability": "mutable",
                        "name": "actions",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1180,
                        "src": "13695:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                          "typeString": "uint8[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1165,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "13695:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 1166,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13695:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                            "typeString": "uint8[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "values",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1180,
                        "src": "13730:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1168,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13730:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1169,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13730:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1173,
                        "mutability": "mutable",
                        "name": "datas",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1180,
                        "src": "13766:22:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1171,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "13766:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1172,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13766:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13684:111:0"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "value1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1180,
                        "src": "13822:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13822:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "value2",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1180,
                        "src": "13838:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13838:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13821:32:0"
                  },
                  "scope": 1416,
                  "src": "13671:183:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "313ce567",
                  "id": 1185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13879:2:0"
                  },
                  "returnParameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1183,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1185,
                        "src": "13905:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1182,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "13905:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13904:7:0"
                  },
                  "scope": 1416,
                  "src": "13862:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3ba0b9a9",
                  "id": 1190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exchangeRate",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13941:2:0"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13967:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13966:9:0"
                  },
                  "scope": 1416,
                  "src": "13920:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "017e7e58",
                  "id": 1195,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13998:2:0"
                  },
                  "returnParameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1195,
                        "src": "14024:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14024:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14023:9:0"
                  },
                  "scope": 1416,
                  "src": "13984:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "247fd03c",
                  "id": 1208,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInitData",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "collateral_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1208,
                        "src": "14072:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1196,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "14072:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "asset_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1208,
                        "src": "14101:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1198,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "14101:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "oracle_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1208,
                        "src": "14125:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14125:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "oracleData_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1208,
                        "src": "14151:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14151:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14061:123:0"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1208,
                        "src": "14208:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14208:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14207:19:0"
                  },
                  "scope": 1416,
                  "src": "14041:186:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4ddf47d4",
                  "id": 1213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "init",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1210,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1213,
                        "src": "14249:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14249:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14248:21:0"
                  },
                  "returnParameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14286:0:0"
                  },
                  "scope": 1416,
                  "src": "14235:52:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7739d59d",
                  "id": 1222,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isSolvent",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1222,
                        "src": "14314:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14314:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1217,
                        "mutability": "mutable",
                        "name": "open",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1222,
                        "src": "14328:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1216,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14328:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14313:25:0"
                  },
                  "returnParameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1222,
                        "src": "14362:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14362:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14361:6:0"
                  },
                  "scope": 1416,
                  "src": "14295:73:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "76ee101b",
                  "id": 1237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidate",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "users",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "14405:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1223,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14405:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1224,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "14405:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "borrowParts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "14440:30:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1226,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "14440:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1227,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "14440:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "14481:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14481:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "swapper",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "14502:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14502:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "open",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "14528:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14528:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14394:150:0"
                  },
                  "returnParameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14553:0:0"
                  },
                  "scope": 1416,
                  "src": "14376:178:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "cd446e22",
                  "id": 1242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "masterContract",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14585:2:0"
                  },
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1242,
                        "src": "14611:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14611:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14610:9:0"
                  },
                  "scope": 1416,
                  "src": "14562:58:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "06fdde03",
                  "id": 1247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14641:2:0"
                  },
                  "returnParameters": {
                    "id": 1246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1245,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1247,
                        "src": "14667:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14667:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14666:15:0"
                  },
                  "scope": 1416,
                  "src": "14628:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7ecebe00",
                  "id": 1254,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1254,
                        "src": "14706:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14706:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14705:9:0"
                  },
                  "returnParameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1254,
                        "src": "14738:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14738:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14737:9:0"
                  },
                  "scope": 1416,
                  "src": "14690:57:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7dc0d1d0",
                  "id": 1259,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "oracle",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14770:2:0"
                  },
                  "returnParameters": {
                    "id": 1258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1257,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1259,
                        "src": "14796:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOracle_$1077",
                          "typeString": "contract IOracle"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1256,
                          "name": "IOracle",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1077,
                          "src": "14796:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$1077",
                            "typeString": "contract IOracle"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14795:9:0"
                  },
                  "scope": 1416,
                  "src": "14755:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "74645ff3",
                  "id": 1264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "oracleData",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14832:2:0"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1262,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1264,
                        "src": "14858:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1261,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14858:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14857:14:0"
                  },
                  "scope": 1416,
                  "src": "14813:59:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8da5cb5b",
                  "id": 1269,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14894:2:0"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1269,
                        "src": "14920:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14920:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14919:9:0"
                  },
                  "scope": 1416,
                  "src": "14880:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e30c3978",
                  "id": 1274,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingOwner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14958:2:0"
                  },
                  "returnParameters": {
                    "id": 1273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1272,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1274,
                        "src": "14984:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14984:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14983:9:0"
                  },
                  "scope": 1416,
                  "src": "14937:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d505accf",
                  "id": 1291,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1276,
                        "mutability": "mutable",
                        "name": "owner_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15027:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15027:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1278,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15052:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15052:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1280,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15078:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15102:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15102:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15129:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "15129:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1286,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15147:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1285,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15147:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1288,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1291,
                        "src": "15167:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1287,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15167:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15016:167:0"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15192:0:0"
                  },
                  "scope": 1416,
                  "src": "15001:192:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "2317ef67",
                  "id": 1300,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeAsset",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1300,
                        "src": "15222:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15222:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1295,
                        "mutability": "mutable",
                        "name": "fraction",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1300,
                        "src": "15234:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15234:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15221:30:0"
                  },
                  "returnParameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1300,
                        "src": "15288:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15288:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15287:15:0"
                  },
                  "scope": 1416,
                  "src": "15201:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "876467f8",
                  "id": 1307,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeCollateral",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1302,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1307,
                        "src": "15337:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15337:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "share",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1307,
                        "src": "15349:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15349:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15336:27:0"
                  },
                  "returnParameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15372:0:0"
                  },
                  "scope": 1416,
                  "src": "15311:62:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "15294c40",
                  "id": 1318,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repay",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1318,
                        "src": "15406:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15406:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "skim",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1318,
                        "src": "15427:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15427:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "part",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1318,
                        "src": "15447:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15447:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15395:71:0"
                  },
                  "returnParameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1318,
                        "src": "15485:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15485:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15484:16:0"
                  },
                  "scope": 1416,
                  "src": "15381:120:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f46901ed",
                  "id": 1323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "newFeeTo",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1323,
                        "src": "15527:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15527:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15526:18:0"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15553:0:0"
                  },
                  "scope": 1416,
                  "src": "15509:45:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3f2617cb",
                  "id": 1330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapper",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "swapper",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1330,
                        "src": "15582:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15582:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "enable",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1330,
                        "src": "15599:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15599:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15581:30:0"
                  },
                  "returnParameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15620:0:0"
                  },
                  "scope": 1416,
                  "src": "15562:59:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8cad7fbe",
                  "id": 1337,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swappers",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1337,
                        "src": "15647:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15646:9:0"
                  },
                  "returnParameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1337,
                        "src": "15679:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15679:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15678:6:0"
                  },
                  "scope": 1416,
                  "src": "15629:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "95d89b41",
                  "id": 1342,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15708:2:0"
                  },
                  "returnParameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1342,
                        "src": "15734:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "15734:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15733:15:0"
                  },
                  "scope": 1416,
                  "src": "15693:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f9557ccb",
                  "id": 1347,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalAsset",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15776:2:0"
                  },
                  "returnParameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1345,
                        "mutability": "mutable",
                        "name": "total",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1347,
                        "src": "15802:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rebase_$1030_memory_ptr",
                          "typeString": "struct Rebase"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1344,
                          "name": "Rebase",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1030,
                          "src": "15802:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rebase_$1030_storage_ptr",
                            "typeString": "struct Rebase"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15801:21:0"
                  },
                  "scope": 1416,
                  "src": "15757:66:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8285ef40",
                  "id": 1352,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalBorrow",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15851:2:0"
                  },
                  "returnParameters": {
                    "id": 1351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "total",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1352,
                        "src": "15877:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rebase_$1030_memory_ptr",
                          "typeString": "struct Rebase"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1349,
                          "name": "Rebase",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1030,
                          "src": "15877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rebase_$1030_storage_ptr",
                            "typeString": "struct Rebase"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15876:21:0"
                  },
                  "scope": 1416,
                  "src": "15831:67:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "473e3ce7",
                  "id": 1357,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalCollateralShare",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15935:2:0"
                  },
                  "returnParameters": {
                    "id": 1356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1357,
                        "src": "15961:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15961:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "15960:9:0"
                  },
                  "scope": 1416,
                  "src": "15906:64:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "18160ddd",
                  "id": 1362,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15998:2:0"
                  },
                  "returnParameters": {
                    "id": 1361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1360,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1362,
                        "src": "16024:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16024:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16023:9:0"
                  },
                  "scope": 1416,
                  "src": "15978:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "a9059cbb",
                  "id": 1371,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1371,
                        "src": "16059:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16059:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1366,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1371,
                        "src": "16071:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16071:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16058:28:0"
                  },
                  "returnParameters": {
                    "id": 1370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1369,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1371,
                        "src": "16105:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16105:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16104:6:0"
                  },
                  "scope": 1416,
                  "src": "16041:70:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "23b872dd",
                  "id": 1382,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1382,
                        "src": "16151:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16151:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1382,
                        "src": "16174:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16174:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1382,
                        "src": "16195:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16195:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16140:76:0"
                  },
                  "returnParameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1382,
                        "src": "16235:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16235:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16234:6:0"
                  },
                  "scope": 1416,
                  "src": "16119:122:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "078dfbe7",
                  "id": 1391,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1391,
                        "src": "16286:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16286:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "direct",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1391,
                        "src": "16313:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16313:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "renounce",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1391,
                        "src": "16335:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16335:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16275:80:0"
                  },
                  "returnParameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16364:0:0"
                  },
                  "scope": 1416,
                  "src": "16249:116:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "02ce728f",
                  "id": 1398,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateExchangeRate",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16400:2:0"
                  },
                  "returnParameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "updated",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1398,
                        "src": "16421:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16421:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "rate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1398,
                        "src": "16435:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16435:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16420:28:0"
                  },
                  "scope": 1416,
                  "src": "16373:76:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "48e4163e",
                  "id": 1405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "userBorrowPart",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1405,
                        "src": "16481:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16481:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16480:9:0"
                  },
                  "returnParameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1405,
                        "src": "16513:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16512:9:0"
                  },
                  "scope": 1416,
                  "src": "16457:65:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1c9e379b",
                  "id": 1412,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "userCollateralShare",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1407,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1412,
                        "src": "16559:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16559:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16558:9:0"
                  },
                  "returnParameters": {
                    "id": 1411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1410,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1412,
                        "src": "16591:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16591:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16590:9:0"
                  },
                  "scope": 1416,
                  "src": "16530:70:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "476343ee",
                  "id": 1415,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFees",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16629:2:0"
                  },
                  "returnParameters": {
                    "id": 1414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16640:0:0"
                  },
                  "scope": 1416,
                  "src": "16608:33:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2908,
              "src": "12651:3993:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1417,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 290,
                    "src": "16675:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$290",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 1418,
                  "nodeType": "InheritanceSpecifier",
                  "src": "16675:7:0"
                }
              ],
              "contractDependencies": [
                290
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 2907,
              "linearizedBaseContracts": [
                2907,
                290
              ],
              "name": "BoringHelperV1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1421,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1419,
                    "name": "BoringMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 266,
                    "src": "16696:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoringMath_$266",
                      "typeString": "library BoringMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "16690:29:0",
                  "typeName": {
                    "id": 1420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16711:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 1424,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1422,
                    "name": "BoringERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 569,
                    "src": "16731:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoringERC20_$569",
                      "typeString": "library BoringERC20"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "16725:29:0",
                  "typeName": {
                    "contractScope": null,
                    "id": 1423,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54,
                    "src": "16747:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$54",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "id": 1427,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1425,
                    "name": "BoringERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 569,
                    "src": "16766:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoringERC20_$569",
                      "typeString": "library BoringERC20"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "16760:28:0",
                  "typeName": {
                    "contractScope": null,
                    "id": 1426,
                    "name": "IPair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "16782:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPair_$161",
                      "typeString": "contract IPair"
                    }
                  }
                },
                {
                  "id": 1430,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1428,
                    "name": "BoringPair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 610,
                    "src": "16800:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoringPair_$610",
                      "typeString": "library BoringPair"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "16794:27:0",
                  "typeName": {
                    "contractScope": null,
                    "id": 1429,
                    "name": "IPair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 161,
                    "src": "16815:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPair_$161",
                      "typeString": "contract IPair"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "1fc8bc5d",
                  "id": 1432,
                  "mutability": "mutable",
                  "name": "chef",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "16829:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMasterChef_$139",
                    "typeString": "contract IMasterChef"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1431,
                    "name": "IMasterChef",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 139,
                    "src": "16829:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                      "typeString": "contract IMasterChef"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "50655d8c",
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "maker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "16919:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16919:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b985a3a0",
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "joe",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "17004:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$54",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1435,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54,
                    "src": "17004:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$54",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "73b295c2",
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "WAVAX",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "17086:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$54",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1437,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54,
                    "src": "17086:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$54",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8a38466e",
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "joeFactory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "17159:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFactory_$193",
                    "typeString": "contract IFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1439,
                    "name": "IFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 193,
                    "src": "17159:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactory_$193",
                      "typeString": "contract IFactory"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b295d2a1",
                  "id": 1442,
                  "mutability": "mutable",
                  "name": "pangolinFactory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "17249:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFactory_$193",
                    "typeString": "contract IFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1441,
                    "name": "IFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 193,
                    "src": "17249:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactory_$193",
                      "typeString": "contract IFactory"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "febb0f7e",
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "bar",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2907,
                  "src": "17344:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$54",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1443,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 54,
                    "src": "17344:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$54",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1489,
                    "nodeType": "Block",
                    "src": "17631:202:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1461,
                            "name": "chef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "17642:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1462,
                            "name": "chef_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1446,
                            "src": "17649:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "src": "17642:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                            "typeString": "contract IMasterChef"
                          }
                        },
                        "id": 1464,
                        "nodeType": "ExpressionStatement",
                        "src": "17642:12:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1465,
                            "name": "maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "17665:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1466,
                            "name": "maker_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "17673:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17665:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "17665:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1469,
                            "name": "joe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "17690:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1470,
                            "name": "joe_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1450,
                            "src": "17696:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17690:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1472,
                        "nodeType": "ExpressionStatement",
                        "src": "17690:10:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1473,
                            "name": "WAVAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "17711:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1474,
                            "name": "WAVAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "17719:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17711:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "17711:13:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1477,
                            "name": "joeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "17735:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1478,
                            "name": "joeFactory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "17748:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "17735:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "id": 1480,
                        "nodeType": "ExpressionStatement",
                        "src": "17735:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1481,
                            "name": "pangolinFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "17770:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1482,
                            "name": "pangolinFactory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "17788:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "17770:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "id": 1484,
                        "nodeType": "ExpressionStatement",
                        "src": "17770:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1485,
                            "name": "bar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "17815:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1486,
                            "name": "bar_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "17821:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17815:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1488,
                        "nodeType": "ExpressionStatement",
                        "src": "17815:10:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1490,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "chef_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17439:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChef_$139",
                          "typeString": "contract IMasterChef"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1445,
                          "name": "IMasterChef",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 139,
                          "src": "17439:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                            "typeString": "contract IMasterChef"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "maker_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17467:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17467:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1450,
                        "mutability": "mutable",
                        "name": "joe_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17492:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1449,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "17492:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1452,
                        "mutability": "mutable",
                        "name": "WAVAX_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17514:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1451,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "17514:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "joeFactory_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17538:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1453,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "17538:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "pangolinFactory_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17569:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1455,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "17569:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1458,
                        "mutability": "mutable",
                        "name": "bar_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1490,
                        "src": "17605:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1457,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "17605:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17428:195:0"
                  },
                  "returnParameters": {
                    "id": 1460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17631:0:0"
                  },
                  "scope": 2907,
                  "src": "17417:416:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1537,
                    "nodeType": "Block",
                    "src": "18075:203:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1509,
                            "name": "chef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "18086:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1510,
                            "name": "chef_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "18093:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "src": "18086:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                            "typeString": "contract IMasterChef"
                          }
                        },
                        "id": 1512,
                        "nodeType": "ExpressionStatement",
                        "src": "18086:12:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1513,
                            "name": "maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "18109:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1514,
                            "name": "maker_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1494,
                            "src": "18117:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18109:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "18109:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1517,
                            "name": "joe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "18134:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1518,
                            "name": "joe_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "18140:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18134:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1520,
                        "nodeType": "ExpressionStatement",
                        "src": "18134:10:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1521,
                            "name": "WAVAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "18155:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1522,
                            "name": "WAVAX_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "18163:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18155:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1524,
                        "nodeType": "ExpressionStatement",
                        "src": "18155:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1525,
                            "name": "joeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "18180:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "joeFactory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "18193:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "18180:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "18180:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1529,
                            "name": "pangolinFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "18215:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1530,
                            "name": "pangolinFactory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1502,
                            "src": "18233:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "18215:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "id": 1532,
                        "nodeType": "ExpressionStatement",
                        "src": "18215:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1533,
                            "name": "bar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "18260:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1534,
                            "name": "bar_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1504,
                            "src": "18266:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18260:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "18260:10:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "d3ff95c7",
                  "id": 1538,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1507,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1506,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "18065:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18065:9:0"
                    }
                  ],
                  "name": "setContracts",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "chef_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "17873:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChef_$139",
                          "typeString": "contract IMasterChef"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1491,
                          "name": "IMasterChef",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 139,
                          "src": "17873:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                            "typeString": "contract IMasterChef"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1494,
                        "mutability": "mutable",
                        "name": "maker_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "17901:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17901:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "joe_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "17926:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1495,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "17926:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "WAVAX_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "17948:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1497,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "17948:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1500,
                        "mutability": "mutable",
                        "name": "joeFactory_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "17972:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1499,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "17972:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1502,
                        "mutability": "mutable",
                        "name": "pangolinFactory_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "18003:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1501,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "18003:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "bar_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1538,
                        "src": "18039:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1503,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "18039:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17862:195:0"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18075:0:0"
                  },
                  "scope": 2907,
                  "src": "17841:437:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1723,
                    "nodeType": "Block",
                    "src": "18351:1470:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1545,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "18366:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1546,
                            "name": "WAVAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "18375:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18366:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1551,
                        "nodeType": "IfStatement",
                        "src": "18362:58:0",
                        "trueBody": {
                          "id": 1550,
                          "nodeType": "Block",
                          "src": "18382:38:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "31653138",
                                "id": 1548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18404:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "functionReturnParameters": 1544,
                              "id": 1549,
                              "nodeType": "Return",
                              "src": "18397:11:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1553,
                            "mutability": "mutable",
                            "name": "pairPangolin",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1723,
                            "src": "18430:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPair_$161",
                              "typeString": "contract IPair"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1552,
                              "name": "IPair",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 161,
                              "src": "18430:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPair_$161",
                                "typeString": "contract IPair"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1554,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18430:18:0"
                      },
                      {
                        "assignments": [
                          1556
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1556,
                            "mutability": "mutable",
                            "name": "pairJoe",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1723,
                            "src": "18459:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPair_$161",
                              "typeString": "contract IPair"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1555,
                              "name": "IPair",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 161,
                              "src": "18459:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPair_$161",
                                "typeString": "contract IPair"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1557,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18459:13:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1558,
                            "name": "pangolinFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "18487:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18515:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1559,
                              "name": "IFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "18506:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                "typeString": "type(contract IFactory)"
                              }
                            },
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18506:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "18487:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1574,
                        "nodeType": "IfStatement",
                        "src": "18483:122:0",
                        "trueBody": {
                          "id": 1573,
                          "nodeType": "Block",
                          "src": "18519:86:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1563,
                                  "name": "pairPangolin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1553,
                                  "src": "18534:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1567,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1540,
                                          "src": "18579:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1568,
                                          "name": "WAVAX",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1438,
                                          "src": "18586:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1565,
                                          "name": "pangolinFactory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1442,
                                          "src": "18555:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IFactory_$193",
                                            "typeString": "contract IFactory"
                                          }
                                        },
                                        "id": 1566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getPair",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 182,
                                        "src": "18555:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$54_$_t_contract$_IERC20_$54_$returns$_t_contract$_IPair_$161_$",
                                          "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPair)"
                                        }
                                      },
                                      "id": 1569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18555:37:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    ],
                                    "id": 1564,
                                    "name": "IPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "18549:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IPair_$161_$",
                                      "typeString": "type(contract IPair)"
                                    }
                                  },
                                  "id": 1570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18549:44:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "src": "18534:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 1572,
                              "nodeType": "ExpressionStatement",
                              "src": "18534:59:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1575,
                            "name": "joeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "18619:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18642:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1576,
                              "name": "IFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "18633:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                "typeString": "type(contract IFactory)"
                              }
                            },
                            "id": 1578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18633:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "src": "18619:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1591,
                        "nodeType": "IfStatement",
                        "src": "18615:107:0",
                        "trueBody": {
                          "id": 1590,
                          "nodeType": "Block",
                          "src": "18646:76:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1580,
                                  "name": "pairJoe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1556,
                                  "src": "18661:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1584,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1540,
                                          "src": "18696:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1585,
                                          "name": "WAVAX",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1438,
                                          "src": "18703:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1582,
                                          "name": "joeFactory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1440,
                                          "src": "18677:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IFactory_$193",
                                            "typeString": "contract IFactory"
                                          }
                                        },
                                        "id": 1583,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getPair",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 182,
                                        "src": "18677:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$54_$_t_contract$_IERC20_$54_$returns$_t_contract$_IPair_$161_$",
                                          "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPair)"
                                        }
                                      },
                                      "id": 1586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18677:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    ],
                                    "id": 1581,
                                    "name": "IPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "18671:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IPair_$161_$",
                                      "typeString": "type(contract IPair)"
                                    }
                                  },
                                  "id": 1587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18671:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "src": "18661:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 1589,
                              "nodeType": "ExpressionStatement",
                              "src": "18661:49:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1594,
                                  "name": "pairPangolin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1553,
                                  "src": "18758:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                ],
                                "id": 1593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18750:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1592,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18750:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18750:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18783:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18775:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1596,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18775:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18775:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "18750:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1603,
                                  "name": "pairJoe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1556,
                                  "src": "18810:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                ],
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18802:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18802:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18802:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1607,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18830:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18822:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1605,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18822:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18822:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "18802:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "18750:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1614,
                        "nodeType": "IfStatement",
                        "src": "18732:147:0",
                        "trueBody": {
                          "id": 1613,
                          "nodeType": "Block",
                          "src": "18844:35:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18866:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1544,
                              "id": 1612,
                              "nodeType": "Return",
                              "src": "18859:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1616
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1616,
                            "mutability": "mutable",
                            "name": "reserve0",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1723,
                            "src": "18891:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1615,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "18891:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1617,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18891:16:0"
                      },
                      {
                        "assignments": [
                          1619
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1619,
                            "mutability": "mutable",
                            "name": "reserve1",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1723,
                            "src": "18918:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1618,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "18918:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1620,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18918:16:0"
                      },
                      {
                        "assignments": [
                          1622
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1622,
                            "mutability": "mutable",
                            "name": "token0",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1723,
                            "src": "18945:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1621,
                              "name": "IERC20",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 54,
                              "src": "18945:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$54",
                                "typeString": "contract IERC20"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1623,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18945:13:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1626,
                                "name": "pairPangolin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1553,
                                "src": "18981:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              ],
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18973:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1624,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18973:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18973:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19006:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18998:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1628,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18998:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18998:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "18973:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1656,
                        "nodeType": "IfStatement",
                        "src": "18969:332:0",
                        "trueBody": {
                          "id": 1655,
                          "nodeType": "Block",
                          "src": "19010:291:0",
                          "statements": [
                            {
                              "assignments": [
                                1634,
                                1636,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1634,
                                  "mutability": "mutable",
                                  "name": "reserve0Pangolin",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1655,
                                  "src": "19044:24:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  },
                                  "typeName": {
                                    "id": 1633,
                                    "name": "uint112",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19044:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1636,
                                  "mutability": "mutable",
                                  "name": "reserve1Pangolin",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1655,
                                  "src": "19087:24:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  },
                                  "typeName": {
                                    "id": 1635,
                                    "name": "uint112",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19087:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 1640,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1637,
                                    "name": "pairPangolin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1553,
                                    "src": "19132:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "id": 1638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getReserves",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 160,
                                  "src": "19132:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "function () view external returns (uint112,uint112,uint32)"
                                  }
                                },
                                "id": 1639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19132:26:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "tuple(uint112,uint112,uint32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19025:133:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1641,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "19173:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1642,
                                  "name": "reserve0Pangolin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1634,
                                  "src": "19185:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19173:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "id": 1644,
                              "nodeType": "ExpressionStatement",
                              "src": "19173:28:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1645,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "19216:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1646,
                                  "name": "reserve1Pangolin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1636,
                                  "src": "19228:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19216:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "id": 1648,
                              "nodeType": "ExpressionStatement",
                              "src": "19216:28:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1649,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1622,
                                  "src": "19259:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1650,
                                      "name": "pairPangolin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1553,
                                      "src": "19268:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 1651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token0",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 146,
                                    "src": "19268:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                      "typeString": "function () view external returns (contract IERC20)"
                                    }
                                  },
                                  "id": 1652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19268:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "19259:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1654,
                              "nodeType": "ExpressionStatement",
                              "src": "19259:30:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1659,
                                "name": "pairJoe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1556,
                                "src": "19325:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              ],
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19317:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1657,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19317:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19317:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19345:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19337:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1661,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19337:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19337:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "19317:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1696,
                        "nodeType": "IfStatement",
                        "src": "19313:320:0",
                        "trueBody": {
                          "id": 1695,
                          "nodeType": "Block",
                          "src": "19349:284:0",
                          "statements": [
                            {
                              "assignments": [
                                1667,
                                1669,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1667,
                                  "mutability": "mutable",
                                  "name": "reserve0Joe",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1695,
                                  "src": "19365:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  },
                                  "typeName": {
                                    "id": 1666,
                                    "name": "uint112",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19365:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1669,
                                  "mutability": "mutable",
                                  "name": "reserve1Joe",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1695,
                                  "src": "19386:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  },
                                  "typeName": {
                                    "id": 1668,
                                    "name": "uint112",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19386:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 1673,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1670,
                                    "name": "pairJoe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1556,
                                    "src": "19411:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "id": 1671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getReserves",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 160,
                                  "src": "19411:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "function () view external returns (uint112,uint112,uint32)"
                                  }
                                },
                                "id": 1672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19411:35:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "tuple(uint112,uint112,uint32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19364:82:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1674,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "19461:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1675,
                                  "name": "reserve0Joe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1667,
                                  "src": "19473:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19461:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "id": 1677,
                              "nodeType": "ExpressionStatement",
                              "src": "19461:23:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1678,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "19499:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1679,
                                  "name": "reserve1Joe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1669,
                                  "src": "19511:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19499:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "id": 1681,
                              "nodeType": "ExpressionStatement",
                              "src": "19499:23:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                },
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1682,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1622,
                                  "src": "19541:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19558:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1683,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "19551:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19551:9:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "19541:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1694,
                              "nodeType": "IfStatement",
                              "src": "19537:85:0",
                              "trueBody": {
                                "id": 1693,
                                "nodeType": "Block",
                                "src": "19562:60:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1691,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1687,
                                        "name": "token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1622,
                                        "src": "19581:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1688,
                                            "name": "pairJoe",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1556,
                                            "src": "19590:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 1689,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token0",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 146,
                                          "src": "19590:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                            "typeString": "function () view external returns (contract IERC20)"
                                          }
                                        },
                                        "id": 1690,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19590:16:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "src": "19581:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1692,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19581:25:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1697,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "19649:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1698,
                            "name": "WAVAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "19659:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "19649:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1721,
                          "nodeType": "Block",
                          "src": "19743:71:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1713,
                                            "name": "reserve0",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1616,
                                            "src": "19774:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          ],
                                          "id": 1712,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "19766:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 1711,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "19766:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 1714,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19766:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31653138",
                                        "id": 1715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19786:4:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "value": "1e18"
                                      },
                                      "src": "19766:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1717,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19765:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1718,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "19794:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19765:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1544,
                              "id": 1720,
                              "nodeType": "Return",
                              "src": "19758:44:0"
                            }
                          ]
                        },
                        "id": 1722,
                        "nodeType": "IfStatement",
                        "src": "19645:169:0",
                        "trueBody": {
                          "id": 1710,
                          "nodeType": "Block",
                          "src": "19666:71:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1705,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1702,
                                            "name": "reserve1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1619,
                                            "src": "19697:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          ],
                                          "id": 1701,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "19689:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 1700,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "19689:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 1703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19689:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31653138",
                                        "id": 1704,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19709:4:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "value": "1e18"
                                      },
                                      "src": "19689:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1706,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19688:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1707,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "19717:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "19688:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1544,
                              "id": 1709,
                              "nodeType": "Return",
                              "src": "19681:44:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "d9116dc3",
                  "id": 1724,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAVAXRate",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1724,
                        "src": "18307:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1539,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "18307:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18306:14:0"
                  },
                  "returnParameters": {
                    "id": 1544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1543,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1724,
                        "src": "18342:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18342:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18341:9:0"
                  },
                  "scope": 2907,
                  "src": "18286:1535:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.Factory",
                  "id": 1729,
                  "members": [
                    {
                      "constant": false,
                      "id": 1726,
                      "mutability": "mutable",
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1729,
                      "src": "19855:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactory_$193",
                        "typeString": "contract IFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1725,
                        "name": "IFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 193,
                        "src": "19855:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1728,
                      "mutability": "mutable",
                      "name": "allPairsLength",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1729,
                      "src": "19882:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Factory",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "19829:83:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.UIInfo",
                  "id": 1755,
                  "members": [
                    {
                      "constant": false,
                      "id": 1731,
                      "mutability": "mutable",
                      "name": "avaxBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "19945:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19945:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1733,
                      "mutability": "mutable",
                      "name": "joeBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "19975:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19975:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1735,
                      "mutability": "mutable",
                      "name": "joeBarBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20004:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1734,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20004:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1737,
                      "mutability": "mutable",
                      "name": "xjoeBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20036:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20036:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1739,
                      "mutability": "mutable",
                      "name": "xjoeSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20066:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1741,
                      "mutability": "mutable",
                      "name": "joeBarAllowance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20095:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20095:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1744,
                      "mutability": "mutable",
                      "name": "factories",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20129:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Factory_$1729_storage_$dyn_storage_ptr",
                        "typeString": "struct BoringHelperV1.Factory[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 1742,
                          "name": "Factory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1729,
                          "src": "20129:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Factory_$1729_storage_ptr",
                            "typeString": "struct BoringHelperV1.Factory"
                          }
                        },
                        "id": 1743,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "20129:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Factory_$1729_storage_$dyn_storage_ptr",
                          "typeString": "struct BoringHelperV1.Factory[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1746,
                      "mutability": "mutable",
                      "name": "avaxRate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20159:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20159:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1748,
                      "mutability": "mutable",
                      "name": "joeRate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20186:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1747,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20186:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1750,
                      "mutability": "mutable",
                      "name": "btcRate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20212:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1749,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20212:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1752,
                      "mutability": "mutable",
                      "name": "pendingJoe",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20238:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20238:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1754,
                      "mutability": "mutable",
                      "name": "blockTimeStamp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1755,
                      "src": "20267:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20267:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "UIInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "19920:377:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1973,
                    "nodeType": "Block",
                    "src": "20507:1373:0",
                    "statements": [
                      {
                        "assignments": [
                          1771
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1771,
                            "mutability": "mutable",
                            "name": "info",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1973,
                            "src": "20518:18:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                              "typeString": "struct BoringHelperV1.UIInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1770,
                              "name": "UIInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1755,
                              "src": "20518:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UIInfo_$1755_storage_ptr",
                                "typeString": "struct BoringHelperV1.UIInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1772,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20518:18:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1771,
                              "src": "20547:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                "typeString": "struct BoringHelperV1.UIInfo memory"
                              }
                            },
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "avaxBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1731,
                            "src": "20547:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1776,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "20566:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20566:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20547:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "20547:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1780,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1771,
                              "src": "20590:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                "typeString": "struct BoringHelperV1.UIInfo memory"
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "factories",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1744,
                            "src": "20590:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.Factory memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1786,
                                  "name": "factoryAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1760,
                                  "src": "20621:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IFactory_$193_$dyn_calldata_ptr",
                                    "typeString": "contract IFactory[] calldata"
                                  }
                                },
                                "id": 1787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "20621:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "20607:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct BoringHelperV1.Factory memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "contractScope": null,
                                  "id": 1783,
                                  "name": "Factory",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 1729,
                                  "src": "20611:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Factory_$1729_storage_ptr",
                                    "typeString": "struct BoringHelperV1.Factory"
                                  }
                                },
                                "id": 1784,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "20611:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Factory_$1729_storage_$dyn_storage_ptr",
                                  "typeString": "struct BoringHelperV1.Factory[]"
                                }
                              }
                            },
                            "id": 1788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20607:38:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.Factory memory[] memory"
                            }
                          },
                          "src": "20590:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.Factory memory[] memory"
                          }
                        },
                        "id": 1790,
                        "nodeType": "ExpressionStatement",
                        "src": "20590:55:0"
                      },
                      {
                        "body": {
                          "id": 1828,
                          "nodeType": "Block",
                          "src": "20710:189:0",
                          "statements": [
                            {
                              "assignments": [
                                1803
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1803,
                                  "mutability": "mutable",
                                  "name": "factory",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1828,
                                  "src": "20725:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1802,
                                    "name": "IFactory",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 193,
                                    "src": "20725:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFactory_$193",
                                      "typeString": "contract IFactory"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1807,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1804,
                                  "name": "factoryAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1760,
                                  "src": "20744:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IFactory_$193_$dyn_calldata_ptr",
                                    "typeString": "contract IFactory[] calldata"
                                  }
                                },
                                "id": 1806,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1805,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1792,
                                  "src": "20761:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20744:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20725:38:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1808,
                                        "name": "info",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1771,
                                        "src": "20778:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                          "typeString": "struct BoringHelperV1.UIInfo memory"
                                        }
                                      },
                                      "id": 1811,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "factories",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1744,
                                      "src": "20778:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.Factory memory[] memory"
                                      }
                                    },
                                    "id": 1812,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1810,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "20793:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20778:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Factory_$1729_memory_ptr",
                                      "typeString": "struct BoringHelperV1.Factory memory"
                                    }
                                  },
                                  "id": 1813,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "factory",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1726,
                                  "src": "20778:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1814,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1803,
                                  "src": "20806:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "src": "20778:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                }
                              },
                              "id": 1816,
                              "nodeType": "ExpressionStatement",
                              "src": "20778:35:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1817,
                                        "name": "info",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1771,
                                        "src": "20828:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                          "typeString": "struct BoringHelperV1.UIInfo memory"
                                        }
                                      },
                                      "id": 1820,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "factories",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1744,
                                      "src": "20828:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Factory_$1729_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.Factory memory[] memory"
                                      }
                                    },
                                    "id": 1821,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1819,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "20843:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20828:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Factory_$1729_memory_ptr",
                                      "typeString": "struct BoringHelperV1.Factory memory"
                                    }
                                  },
                                  "id": 1822,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "allPairsLength",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1728,
                                  "src": "20828:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1823,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1803,
                                      "src": "20863:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IFactory_$193",
                                        "typeString": "contract IFactory"
                                      }
                                    },
                                    "id": 1824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allPairsLength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 166,
                                    "src": "20863:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 1825,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20863:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20828:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1827,
                              "nodeType": "ExpressionStatement",
                              "src": "20828:59:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1795,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "20676:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1796,
                              "name": "factoryAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "20680:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IFactory_$193_$dyn_calldata_ptr",
                                "typeString": "contract IFactory[] calldata"
                              }
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20680:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20676:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1829,
                        "initializationExpression": {
                          "assignments": [
                            1792
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1792,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 1829,
                              "src": "20661:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1791,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20661:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1794,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20673:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "20661:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "20705:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 1799,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "20705:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1801,
                          "nodeType": "ExpressionStatement",
                          "src": "20705:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "20656:243:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1830,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "20915:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20934:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1831,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "20927:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20927:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "20915:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1844,
                        "nodeType": "IfStatement",
                        "src": "20911:91:0",
                        "trueBody": {
                          "id": 1843,
                          "nodeType": "Block",
                          "src": "20938:64:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1835,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "20953:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1837,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "avaxRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1746,
                                  "src": "20953:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1839,
                                      "name": "currency",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1762,
                                      "src": "20981:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1838,
                                    "name": "getAVAXRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1724,
                                    "src": "20969:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_uint256_$",
                                      "typeString": "function (contract IERC20) view returns (uint256)"
                                    }
                                  },
                                  "id": 1840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20969:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20953:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1842,
                              "nodeType": "ExpressionStatement",
                              "src": "20953:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          },
                          "id": 1849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1845,
                            "name": "joe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "21018:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21032:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1846,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "21025:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21025:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "21018:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1893,
                        "nodeType": "IfStatement",
                        "src": "21014:264:0",
                        "trueBody": {
                          "id": 1892,
                          "nodeType": "Block",
                          "src": "21036:242:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1850,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21051:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1852,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "joeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1748,
                                  "src": "21051:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1854,
                                      "name": "joe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1436,
                                      "src": "21078:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1853,
                                    "name": "getAVAXRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1724,
                                    "src": "21066:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_uint256_$",
                                      "typeString": "function (contract IERC20) view returns (uint256)"
                                    }
                                  },
                                  "id": 1855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21066:16:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21051:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1857,
                              "nodeType": "ExpressionStatement",
                              "src": "21051:31:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1858,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21097:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1860,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "joeBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1733,
                                  "src": "21097:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1863,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "21129:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1861,
                                      "name": "joe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1436,
                                      "src": "21115:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "21115:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21115:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21097:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1866,
                              "nodeType": "ExpressionStatement",
                              "src": "21097:36:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1867,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21148:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1869,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "joeBarBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1735,
                                  "src": "21148:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1874,
                                          "name": "bar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1444,
                                          "src": "21191:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 1873,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "21183:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1872,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21183:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1875,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21183:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1870,
                                      "name": "joe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1436,
                                      "src": "21169:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "21169:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21169:27:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21148:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1878,
                              "nodeType": "ExpressionStatement",
                              "src": "21148:48:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1879,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21211:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1881,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "joeBarAllowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1741,
                                  "src": "21211:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1884,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "21248:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1887,
                                          "name": "bar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1444,
                                          "src": "21261:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$54",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 1886,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "21253:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1885,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21253:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21253:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1882,
                                      "name": "joe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1436,
                                      "src": "21234:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1883,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allowance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "21234:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address,address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21234:32:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21211:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1891,
                              "nodeType": "ExpressionStatement",
                              "src": "21211:55:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          },
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1894,
                            "name": "bar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1444,
                            "src": "21294:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21308:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1895,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "21301:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21301:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "21294:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1917,
                        "nodeType": "IfStatement",
                        "src": "21290:136:0",
                        "trueBody": {
                          "id": 1916,
                          "nodeType": "Block",
                          "src": "21312:114:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1899,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21327:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1901,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "xjoeBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1737,
                                  "src": "21327:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1904,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "21360:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1902,
                                      "name": "bar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
                                      "src": "21346:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "21346:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21346:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21327:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1907,
                              "nodeType": "ExpressionStatement",
                              "src": "21327:37:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1908,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21379:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1910,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "xjoeSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1739,
                                  "src": "21379:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1911,
                                      "name": "bar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
                                      "src": "21397:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1912,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7,
                                    "src": "21397:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 1913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21397:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21379:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1915,
                              "nodeType": "ExpressionStatement",
                              "src": "21379:35:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                            "typeString": "contract IMasterChef"
                          },
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1918,
                            "name": "chef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "21442:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21462:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1919,
                              "name": "IMasterChef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "21450:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IMasterChef_$139_$",
                                "typeString": "type(contract IMasterChef)"
                              }
                            },
                            "id": 1921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21450:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChef_$139",
                              "typeString": "contract IMasterChef"
                            }
                          },
                          "src": "21442:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1963,
                        "nodeType": "IfStatement",
                        "src": "21438:363:0",
                        "trueBody": {
                          "id": 1962,
                          "nodeType": "Block",
                          "src": "21466:335:0",
                          "statements": [
                            {
                              "assignments": [
                                1924
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1924,
                                  "mutability": "mutable",
                                  "name": "poolLength",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1962,
                                  "src": "21481:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1923,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21481:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1928,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1925,
                                    "name": "chef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "21502:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                                      "typeString": "contract IMasterChef"
                                    }
                                  },
                                  "id": 1926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "poolLength",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 99,
                                  "src": "21502:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 1927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21502:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21481:38:0"
                            },
                            {
                              "assignments": [
                                1930
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1930,
                                  "mutability": "mutable",
                                  "name": "pendingJoe",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1962,
                                  "src": "21534:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1929,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21534:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1931,
                              "initialValue": null,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21534:18:0"
                            },
                            {
                              "body": {
                                "id": 1954,
                                "nodeType": "Block",
                                "src": "21608:139:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      1943,
                                      null,
                                      null,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1943,
                                        "mutability": "mutable",
                                        "name": "pendingJoeAmt",
                                        "nodeType": "VariableDeclaration",
                                        "overrides": null,
                                        "scope": 1954,
                                        "src": "21628:21:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 1942,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21628:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      null,
                                      null,
                                      null
                                    ],
                                    "id": 1949,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1946,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1933,
                                          "src": "21678:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1947,
                                          "name": "who",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1757,
                                          "src": "21681:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1944,
                                          "name": "chef",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1432,
                                          "src": "21659:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IMasterChef_$139",
                                            "typeString": "contract IMasterChef"
                                          }
                                        },
                                        "id": 1945,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pendingTokens",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 138,
                                        "src": "21659:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$",
                                          "typeString": "function (uint256,address) view external returns (uint256,address,string memory,uint256)"
                                        }
                                      },
                                      "id": 1948,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21659:26:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$",
                                        "typeString": "tuple(uint256,address,string memory,uint256)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "21627:58:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1952,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1950,
                                        "name": "pendingJoe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1930,
                                        "src": "21704:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 1951,
                                        "name": "pendingJoeAmt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1943,
                                        "src": "21718:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "21704:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1953,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21704:27:0"
                                  }
                                ]
                              },
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1936,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1933,
                                  "src": "21587:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1937,
                                  "name": "poolLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1924,
                                  "src": "21591:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21587:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1955,
                              "initializationExpression": {
                                "assignments": [
                                  1933
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1933,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 1955,
                                    "src": "21572:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1932,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "21572:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1935,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21584:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "21572:13:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "21603:3:0",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1939,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1933,
                                    "src": "21603:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1941,
                                "nodeType": "ExpressionStatement",
                                "src": "21603:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "21567:180:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1956,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1771,
                                    "src": "21761:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UIInfo memory"
                                    }
                                  },
                                  "id": 1958,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "pendingJoe",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1752,
                                  "src": "21761:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1959,
                                  "name": "pendingJoe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1930,
                                  "src": "21779:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21761:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1961,
                              "nodeType": "ExpressionStatement",
                              "src": "21761:28:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1964,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1771,
                              "src": "21811:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                                "typeString": "struct BoringHelperV1.UIInfo memory"
                              }
                            },
                            "id": 1966,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "blockTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1754,
                            "src": "21811:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1967,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "21833:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21833:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21811:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1970,
                        "nodeType": "ExpressionStatement",
                        "src": "21811:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1971,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "21868:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                            "typeString": "struct BoringHelperV1.UIInfo memory"
                          }
                        },
                        "functionReturnParameters": 1769,
                        "id": 1972,
                        "nodeType": "Return",
                        "src": "21861:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "15243475",
                  "id": 1974,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUIInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1766,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1974,
                        "src": "20334:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20334:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1760,
                        "mutability": "mutable",
                        "name": "factoryAddresses",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1974,
                        "src": "20356:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IFactory_$193_$dyn_calldata_ptr",
                          "typeString": "contract IFactory[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 1758,
                            "name": "IFactory",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 193,
                            "src": "20356:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactory_$193",
                              "typeString": "contract IFactory"
                            }
                          },
                          "id": 1759,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "20356:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IFactory_$193_$dyn_storage_ptr",
                            "typeString": "contract IFactory[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1762,
                        "mutability": "mutable",
                        "name": "currency",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1974,
                        "src": "20403:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1761,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 54,
                          "src": "20403:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$54",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1765,
                        "mutability": "mutable",
                        "name": "masterContracts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1974,
                        "src": "20429:34:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20429:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1764,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "20429:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "20323:147:0"
                  },
                  "returnParameters": {
                    "id": 1769,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1974,
                        "src": "20492:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UIInfo_$1755_memory_ptr",
                          "typeString": "struct BoringHelperV1.UIInfo"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1767,
                          "name": "UIInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1755,
                          "src": "20492:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UIInfo_$1755_storage_ptr",
                            "typeString": "struct BoringHelperV1.UIInfo"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "20491:15:0"
                  },
                  "scope": 2907,
                  "src": "20305:1575:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.Balance",
                  "id": 1979,
                  "members": [
                    {
                      "constant": false,
                      "id": 1976,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1979,
                      "src": "21914:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1975,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "21914:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1978,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1979,
                      "src": "21937:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1977,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21937:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Balance",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "21888:72:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.BalanceFull",
                  "id": 1990,
                  "members": [
                    {
                      "constant": false,
                      "id": 1981,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1990,
                      "src": "21998:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1980,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "21998:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1983,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1990,
                      "src": "22021:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1985,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1990,
                      "src": "22051:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1987,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1990,
                      "src": "22077:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1986,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1989,
                      "mutability": "mutable",
                      "name": "rate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1990,
                      "src": "22101:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "BalanceFull",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "21968:153:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.TokenInfo",
                  "id": 2001,
                  "members": [
                    {
                      "constant": false,
                      "id": 1992,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2001,
                      "src": "22157:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1991,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "22157:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1994,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2001,
                      "src": "22180:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1993,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22180:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1996,
                      "mutability": "mutable",
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2001,
                      "src": "22207:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1995,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "22207:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1998,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2001,
                      "src": "22229:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1997,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "22229:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2000,
                      "mutability": "mutable",
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2001,
                      "src": "22253:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1999,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "22253:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "TokenInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "22129:156:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2087,
                    "nodeType": "Block",
                    "src": "22418:472:0",
                    "statements": [
                      {
                        "assignments": [
                          2013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2013,
                            "mutability": "mutable",
                            "name": "infos",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2087,
                            "src": "22429:24:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.TokenInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2011,
                                "name": "TokenInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2001,
                                "src": "22429:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenInfo_$2001_storage_ptr",
                                  "typeString": "struct BoringHelperV1.TokenInfo"
                                }
                              },
                              "id": 2012,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "22429:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.TokenInfo[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2020,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2017,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2004,
                                "src": "22472:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22472:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22456:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.TokenInfo memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2014,
                                "name": "TokenInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2001,
                                "src": "22460:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenInfo_$2001_storage_ptr",
                                  "typeString": "struct BoringHelperV1.TokenInfo"
                                }
                              },
                              "id": 2015,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "22460:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.TokenInfo[]"
                              }
                            }
                          },
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22456:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22429:60:0"
                      },
                      {
                        "body": {
                          "id": 2083,
                          "nodeType": "Block",
                          "src": "22549:309:0",
                          "statements": [
                            {
                              "assignments": [
                                2033
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2033,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2083,
                                  "src": "22564:12:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2032,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 54,
                                    "src": "22564:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2039,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2035,
                                      "name": "addresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2004,
                                      "src": "22586:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 2037,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2036,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22596:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22586:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2034,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "22579:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22579:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22564:35:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2040,
                                      "name": "infos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22614:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                                      }
                                    },
                                    "id": 2042,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2041,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22620:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22614:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenInfo_$2001_memory_ptr",
                                      "typeString": "struct BoringHelperV1.TokenInfo memory"
                                    }
                                  },
                                  "id": 2043,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1992,
                                  "src": "22614:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2044,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2033,
                                  "src": "22631:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "22614:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2046,
                              "nodeType": "ExpressionStatement",
                              "src": "22614:22:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2047,
                                      "name": "infos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22653:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                                      }
                                    },
                                    "id": 2049,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2048,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22659:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22653:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenInfo_$2001_memory_ptr",
                                      "typeString": "struct BoringHelperV1.TokenInfo memory"
                                    }
                                  },
                                  "id": 2050,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1996,
                                  "src": "22653:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2051,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2033,
                                      "src": "22669:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 437,
                                    "src": "22669:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (string memory)"
                                    }
                                  },
                                  "id": 2053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22669:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "22653:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2055,
                              "nodeType": "ExpressionStatement",
                              "src": "22653:28:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2056,
                                      "name": "infos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22696:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                                      }
                                    },
                                    "id": 2058,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2057,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22702:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22696:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenInfo_$2001_memory_ptr",
                                      "typeString": "struct BoringHelperV1.TokenInfo memory"
                                    }
                                  },
                                  "id": 2059,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1998,
                                  "src": "22696:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2060,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2033,
                                      "src": "22714:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 407,
                                    "src": "22714:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (string memory)"
                                    }
                                  },
                                  "id": 2062,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22714:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "22696:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2064,
                              "nodeType": "ExpressionStatement",
                              "src": "22696:32:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2065,
                                      "name": "infos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22743:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                                      }
                                    },
                                    "id": 2067,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2066,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22749:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22743:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenInfo_$2001_memory_ptr",
                                      "typeString": "struct BoringHelperV1.TokenInfo memory"
                                    }
                                  },
                                  "id": 2068,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "decimals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1994,
                                  "src": "22743:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2069,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2033,
                                      "src": "22763:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2070,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 476,
                                    "src": "22763:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_uint8_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (uint8)"
                                    }
                                  },
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22763:16:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "22743:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2073,
                              "nodeType": "ExpressionStatement",
                              "src": "22743:36:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2074,
                                      "name": "infos",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22794:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                                      }
                                    },
                                    "id": 2076,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2075,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2022,
                                      "src": "22800:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22794:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenInfo_$2001_memory_ptr",
                                      "typeString": "struct BoringHelperV1.TokenInfo memory"
                                    }
                                  },
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "DOMAIN_SEPARATOR",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2000,
                                  "src": "22794:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2078,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2033,
                                      "src": "22822:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "DOMAIN_SEPARATOR",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 520,
                                    "src": "22822:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_bytes32_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (bytes32)"
                                    }
                                  },
                                  "id": 2080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22822:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "22794:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 2082,
                              "nodeType": "ExpressionStatement",
                              "src": "22794:52:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2025,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "22522:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2026,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "22526:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "22526:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22522:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2084,
                        "initializationExpression": {
                          "assignments": [
                            2022
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2022,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2084,
                              "src": "22507:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2021,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22507:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2024,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22519:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22507:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "22544:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2029,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "22544:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2031,
                          "nodeType": "ExpressionStatement",
                          "src": "22544:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "22502:356:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2085,
                          "name": "infos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "22877:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.TokenInfo memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2009,
                        "id": 2086,
                        "nodeType": "Return",
                        "src": "22870:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "4a69ac50",
                  "id": 2088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2004,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2088,
                        "src": "22315:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2002,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22315:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2003,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "22315:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "22314:30:0"
                  },
                  "returnParameters": {
                    "id": 2009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2008,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2088,
                        "src": "22393:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.TokenInfo[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2006,
                            "name": "TokenInfo",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2001,
                            "src": "22393:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$2001_storage_ptr",
                              "typeString": "struct BoringHelperV1.TokenInfo"
                            }
                          },
                          "id": 2007,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "22393:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenInfo_$2001_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.TokenInfo[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "22392:20:0"
                  },
                  "scope": 2907,
                  "src": "22293:597:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2154,
                    "nodeType": "Block",
                    "src": "23034:352:0",
                    "statements": [
                      {
                        "assignments": [
                          2102
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2102,
                            "mutability": "mutable",
                            "name": "balances",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2154,
                            "src": "23045:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.Balance[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2100,
                                "name": "Balance",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1979,
                                "src": "23045:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Balance_$1979_storage_ptr",
                                  "typeString": "struct BoringHelperV1.Balance"
                                }
                              },
                              "id": 2101,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "23045:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Balance_$1979_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.Balance[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2109,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2106,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2093,
                                "src": "23087:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23087:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "23073:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.Balance memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2103,
                                "name": "Balance",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1979,
                                "src": "23077:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Balance_$1979_storage_ptr",
                                  "typeString": "struct BoringHelperV1.Balance"
                                }
                              },
                              "id": 2104,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "23077:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Balance_$1979_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.Balance[]"
                              }
                            }
                          },
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23073:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.Balance memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23045:59:0"
                      },
                      {
                        "assignments": [
                          2111
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2111,
                            "mutability": "mutable",
                            "name": "len",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2154,
                            "src": "23117:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2110,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23117:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2114,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2112,
                            "name": "addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "23131:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "23131:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23117:30:0"
                      },
                      {
                        "body": {
                          "id": 2150,
                          "nodeType": "Block",
                          "src": "23192:159:0",
                          "statements": [
                            {
                              "assignments": [
                                2126
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2126,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2150,
                                  "src": "23207:12:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2125,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 54,
                                    "src": "23207:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2132,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2128,
                                      "name": "addresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2093,
                                      "src": "23229:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 2130,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2129,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2116,
                                      "src": "23239:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23229:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2127,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "23222:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$54_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23222:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23207:35:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2133,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2102,
                                      "src": "23257:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.Balance memory[] memory"
                                      }
                                    },
                                    "id": 2135,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2134,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2116,
                                      "src": "23266:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23257:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balance_$1979_memory_ptr",
                                      "typeString": "struct BoringHelperV1.Balance memory"
                                    }
                                  },
                                  "id": 2136,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1976,
                                  "src": "23257:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2137,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2126,
                                  "src": "23277:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "23257:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2139,
                              "nodeType": "ExpressionStatement",
                              "src": "23257:25:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2140,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2102,
                                      "src": "23297:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.Balance memory[] memory"
                                      }
                                    },
                                    "id": 2142,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2141,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2116,
                                      "src": "23306:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23297:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balance_$1979_memory_ptr",
                                      "typeString": "struct BoringHelperV1.Balance memory"
                                    }
                                  },
                                  "id": 2143,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1978,
                                  "src": "23297:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2146,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2090,
                                      "src": "23335:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2144,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2126,
                                      "src": "23319:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "23319:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23319:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23297:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2149,
                              "nodeType": "ExpressionStatement",
                              "src": "23297:42:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2119,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "23178:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2120,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2111,
                            "src": "23182:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2151,
                        "initializationExpression": {
                          "assignments": [
                            2116
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2116,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2151,
                              "src": "23163:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2115,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23163:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2118,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23175:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23163:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "23187:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2122,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2116,
                              "src": "23187:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2124,
                          "nodeType": "ExpressionStatement",
                          "src": "23187:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "23158:193:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2152,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2102,
                          "src": "23370:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.Balance memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2098,
                        "id": 2153,
                        "nodeType": "Return",
                        "src": "23363:15:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "ca0f937c",
                  "id": 2155,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "findBalances",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2090,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2155,
                        "src": "22920:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22920:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2155,
                        "src": "22933:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2091,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22933:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2092,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "22933:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "22919:43:0"
                  },
                  "returnParameters": {
                    "id": 2098,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2097,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2155,
                        "src": "23011:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Balance_$1979_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.Balance[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2095,
                            "name": "Balance",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1979,
                            "src": "23011:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balance_$1979_storage_ptr",
                              "typeString": "struct BoringHelperV1.Balance"
                            }
                          },
                          "id": 2096,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "23011:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Balance_$1979_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.Balance[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23010:18:0"
                  },
                  "scope": 2907,
                  "src": "22898:488:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "23532:488:0",
                    "statements": [
                      {
                        "assignments": [
                          2169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2169,
                            "mutability": "mutable",
                            "name": "balances",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2243,
                            "src": "23543:29:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.BalanceFull[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2167,
                                "name": "BalanceFull",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1990,
                                "src": "23543:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BalanceFull_$1990_storage_ptr",
                                  "typeString": "struct BoringHelperV1.BalanceFull"
                                }
                              },
                              "id": 2168,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "23543:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.BalanceFull[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2176,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2173,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2160,
                                "src": "23593:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$54_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 2174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23593:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "23575:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.BalanceFull memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2170,
                                "name": "BalanceFull",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1990,
                                "src": "23579:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BalanceFull_$1990_storage_ptr",
                                  "typeString": "struct BoringHelperV1.BalanceFull"
                                }
                              },
                              "id": 2171,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "23579:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.BalanceFull[]"
                              }
                            }
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23575:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23543:67:0"
                      },
                      {
                        "body": {
                          "id": 2239,
                          "nodeType": "Block",
                          "src": "23670:315:0",
                          "statements": [
                            {
                              "assignments": [
                                2189
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2189,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2239,
                                  "src": "23685:12:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2188,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 54,
                                    "src": "23685:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$54",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2193,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2190,
                                  "name": "addresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2160,
                                  "src": "23700:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$54_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 2192,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2191,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2178,
                                  "src": "23710:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23700:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23685:27:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2194,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "23727:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                                      }
                                    },
                                    "id": 2196,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2195,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2178,
                                      "src": "23736:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23727:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BalanceFull_$1990_memory_ptr",
                                      "typeString": "struct BoringHelperV1.BalanceFull memory"
                                    }
                                  },
                                  "id": 2197,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1983,
                                  "src": "23727:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2198,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2189,
                                      "src": "23753:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7,
                                    "src": "23753:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 2200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23753:19:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23727:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2202,
                              "nodeType": "ExpressionStatement",
                              "src": "23727:45:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2203,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "23787:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                                      }
                                    },
                                    "id": 2205,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2204,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2178,
                                      "src": "23796:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23787:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BalanceFull_$1990_memory_ptr",
                                      "typeString": "struct BoringHelperV1.BalanceFull memory"
                                    }
                                  },
                                  "id": 2206,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1981,
                                  "src": "23787:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2207,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2189,
                                  "src": "23807:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "23787:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2209,
                              "nodeType": "ExpressionStatement",
                              "src": "23787:25:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2210,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "23827:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                                      }
                                    },
                                    "id": 2212,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2211,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2178,
                                      "src": "23836:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23827:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BalanceFull_$1990_memory_ptr",
                                      "typeString": "struct BoringHelperV1.BalanceFull memory"
                                    }
                                  },
                                  "id": 2213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1985,
                                  "src": "23827:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2216,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2157,
                                      "src": "23865:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2214,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2189,
                                      "src": "23849:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "23849:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23849:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23827:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2219,
                              "nodeType": "ExpressionStatement",
                              "src": "23827:42:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2220,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "23884:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                                      }
                                    },
                                    "id": 2222,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2221,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2178,
                                      "src": "23893:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23884:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BalanceFull_$1990_memory_ptr",
                                      "typeString": "struct BoringHelperV1.BalanceFull memory"
                                    }
                                  },
                                  "id": 2223,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "nonce",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1987,
                                  "src": "23884:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2226,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2157,
                                      "src": "23917:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2224,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2189,
                                      "src": "23904:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nonces",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 568,
                                    "src": "23904:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$_t_address_$returns$_t_uint256_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20,address) view returns (uint256)"
                                    }
                                  },
                                  "id": 2227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23904:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23884:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2229,
                              "nodeType": "ExpressionStatement",
                              "src": "23884:37:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2230,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2169,
                                      "src": "23936:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                                      }
                                    },
                                    "id": 2232,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2231,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2178,
                                      "src": "23945:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "23936:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BalanceFull_$1990_memory_ptr",
                                      "typeString": "struct BoringHelperV1.BalanceFull memory"
                                    }
                                  },
                                  "id": 2233,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1989,
                                  "src": "23936:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2235,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2189,
                                      "src": "23967:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 2234,
                                    "name": "getAVAXRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1724,
                                    "src": "23955:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_uint256_$",
                                      "typeString": "function (contract IERC20) view returns (uint256)"
                                    }
                                  },
                                  "id": 2236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23955:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23936:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2238,
                              "nodeType": "ExpressionStatement",
                              "src": "23936:37:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2181,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2178,
                            "src": "23643:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2182,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2160,
                              "src": "23647:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$54_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              }
                            },
                            "id": 2183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "23647:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23643:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2240,
                        "initializationExpression": {
                          "assignments": [
                            2178
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2178,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2240,
                              "src": "23628:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2177,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23628:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2180,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23640:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23628:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "23665:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2185,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2178,
                              "src": "23665:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2187,
                          "nodeType": "ExpressionStatement",
                          "src": "23665:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "23623:362:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2241,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "24004:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.BalanceFull memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2165,
                        "id": 2242,
                        "nodeType": "Return",
                        "src": "23997:15:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "6a385ae9",
                  "id": 2244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalances",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2157,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2244,
                        "src": "23415:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23415:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2160,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2244,
                        "src": "23428:27:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$54_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2158,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 54,
                            "src": "23428:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$54",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2159,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "23428:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$54_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23414:42:0"
                  },
                  "returnParameters": {
                    "id": 2165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2164,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2244,
                        "src": "23505:20:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.BalanceFull[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2162,
                            "name": "BalanceFull",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1990,
                            "src": "23505:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BalanceFull_$1990_storage_ptr",
                              "typeString": "struct BoringHelperV1.BalanceFull"
                            }
                          },
                          "id": 2163,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "23505:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BalanceFull_$1990_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.BalanceFull[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23504:22:0"
                  },
                  "scope": 2907,
                  "src": "23394:626:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.PairBase",
                  "id": 2253,
                  "members": [
                    {
                      "constant": false,
                      "id": 2246,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2253,
                      "src": "24055:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPair_$161",
                        "typeString": "contract IPair"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2245,
                        "name": "IPair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 161,
                        "src": "24055:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2248,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2253,
                      "src": "24077:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2247,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "24077:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2250,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2253,
                      "src": "24101:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2249,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "24101:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2252,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2253,
                      "src": "24125:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24125:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PairBase",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "24028:124:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2338,
                    "nodeType": "Block",
                    "src": "24300:439:0",
                    "statements": [
                      {
                        "assignments": [
                          2268
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2268,
                            "mutability": "mutable",
                            "name": "pairs",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2338,
                            "src": "24311:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.PairBase[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2266,
                                "name": "PairBase",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2253,
                                "src": "24311:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairBase_$2253_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PairBase"
                                }
                              },
                              "id": 2267,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "24311:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PairBase[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2276,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2272,
                                "name": "toID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2259,
                                "src": "24352:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2273,
                                "name": "fromID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2257,
                                "src": "24359:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24352:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "24337:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.PairBase memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2269,
                                "name": "PairBase",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2253,
                                "src": "24341:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairBase_$2253_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PairBase"
                                }
                              },
                              "id": 2270,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "24341:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PairBase[]"
                              }
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24337:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24311:55:0"
                      },
                      {
                        "body": {
                          "id": 2334,
                          "nodeType": "Block",
                          "src": "24422:287:0",
                          "statements": [
                            {
                              "assignments": [
                                2288
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2288,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2334,
                                  "src": "24437:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2287,
                                    "name": "IPair",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 161,
                                    "src": "24437:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2293,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2291,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2278,
                                    "src": "24468:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2289,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2255,
                                    "src": "24451:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFactory_$193",
                                      "typeString": "contract IFactory"
                                    }
                                  },
                                  "id": 2290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allPairs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 173,
                                  "src": "24451:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IPair_$161_$",
                                    "typeString": "function (uint256) view external returns (contract IPair)"
                                  }
                                },
                                "id": 2292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24451:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24437:34:0"
                            },
                            {
                              "assignments": [
                                2295
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2295,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2334,
                                  "src": "24486:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2294,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24486:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2299,
                              "initialValue": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2296,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2278,
                                  "src": "24498:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2297,
                                  "name": "fromID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2257,
                                  "src": "24503:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24498:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24486:23:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2300,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "24524:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                                      }
                                    },
                                    "id": 2302,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2301,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "24530:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24524:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairBase_$2253_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairBase memory"
                                    }
                                  },
                                  "id": 2303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2246,
                                  "src": "24524:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2304,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2288,
                                  "src": "24541:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "src": "24524:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 2306,
                              "nodeType": "ExpressionStatement",
                              "src": "24524:22:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2307,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "24561:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                                      }
                                    },
                                    "id": 2309,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2308,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "24567:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24561:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairBase_$2253_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairBase memory"
                                    }
                                  },
                                  "id": 2310,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token0",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2248,
                                  "src": "24561:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2311,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2288,
                                      "src": "24579:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token0",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 146,
                                    "src": "24579:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                      "typeString": "function () view external returns (contract IERC20)"
                                    }
                                  },
                                  "id": 2313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24579:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "24561:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2315,
                              "nodeType": "ExpressionStatement",
                              "src": "24561:32:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2316,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "24608:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                                      }
                                    },
                                    "id": 2318,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2317,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "24614:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24608:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairBase_$2253_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairBase memory"
                                    }
                                  },
                                  "id": 2319,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2250,
                                  "src": "24608:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2320,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2288,
                                      "src": "24626:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 151,
                                    "src": "24626:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                      "typeString": "function () view external returns (contract IERC20)"
                                    }
                                  },
                                  "id": 2322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24626:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$54",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "24608:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$54",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2324,
                              "nodeType": "ExpressionStatement",
                              "src": "24608:32:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2325,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "24655:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                                      }
                                    },
                                    "id": 2327,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2326,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "24661:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24655:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairBase_$2253_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairBase memory"
                                    }
                                  },
                                  "id": 2328,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2252,
                                  "src": "24655:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2329,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2288,
                                      "src": "24678:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7,
                                    "src": "24678:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 2331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24678:19:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24655:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2333,
                              "nodeType": "ExpressionStatement",
                              "src": "24655:42:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2281,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "24405:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2282,
                            "name": "toID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "24410:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24405:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2335,
                        "initializationExpression": {
                          "assignments": [
                            2278
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2278,
                              "mutability": "mutable",
                              "name": "id",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2335,
                              "src": "24384:10:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2277,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "24384:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2280,
                          "initialValue": {
                            "argumentTypes": null,
                            "id": 2279,
                            "name": "fromID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "24397:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "24384:19:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "24416:4:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2284,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2278,
                              "src": "24416:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2286,
                          "nodeType": "ExpressionStatement",
                          "src": "24416:4:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "24379:330:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2336,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "24726:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PairBase memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2264,
                        "id": 2337,
                        "nodeType": "Return",
                        "src": "24719:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "7e3e2596",
                  "id": 2339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPairs",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2255,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2339,
                        "src": "24188:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 2254,
                          "name": "IFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 193,
                          "src": "24188:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFactory_$193",
                            "typeString": "contract IFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2257,
                        "mutability": "mutable",
                        "name": "fromID",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2339,
                        "src": "24215:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24215:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2259,
                        "mutability": "mutable",
                        "name": "toID",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2339,
                        "src": "24240:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2258,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24240:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24177:82:0"
                  },
                  "returnParameters": {
                    "id": 2264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2263,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2339,
                        "src": "24281:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.PairBase[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2261,
                            "name": "PairBase",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2253,
                            "src": "24281:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairBase_$2253_storage_ptr",
                              "typeString": "struct BoringHelperV1.PairBase"
                            }
                          },
                          "id": 2262,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "24281:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairBase_$2253_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.PairBase[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24280:19:0"
                  },
                  "scope": 2907,
                  "src": "24160:579:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.PairPoll",
                  "id": 2350,
                  "members": [
                    {
                      "constant": false,
                      "id": 2341,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2350,
                      "src": "24774:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPair_$161",
                        "typeString": "contract IPair"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2340,
                        "name": "IPair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 161,
                        "src": "24774:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2343,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2350,
                      "src": "24796:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2345,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2350,
                      "src": "24823:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24823:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2347,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2350,
                      "src": "24850:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24850:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2349,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2350,
                      "src": "24880:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PairPoll",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "24747:156:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2441,
                    "nodeType": "Block",
                    "src": "25043:519:0",
                    "statements": [
                      {
                        "assignments": [
                          2364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2364,
                            "mutability": "mutable",
                            "name": "pairs",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2441,
                            "src": "25054:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.PairPoll[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2362,
                                "name": "PairPoll",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2350,
                                "src": "25054:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairPoll_$2350_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PairPoll"
                                }
                              },
                              "id": 2363,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "25054:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PairPoll[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2371,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2368,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2355,
                                "src": "25095:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IPair_$161_$dyn_calldata_ptr",
                                  "typeString": "contract IPair[] calldata"
                                }
                              },
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "25095:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "25080:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.PairPoll memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2365,
                                "name": "PairPoll",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2350,
                                "src": "25084:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairPoll_$2350_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PairPoll"
                                }
                              },
                              "id": 2366,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "25084:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PairPoll[]"
                              }
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25080:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25054:58:0"
                      },
                      {
                        "body": {
                          "id": 2437,
                          "nodeType": "Block",
                          "src": "25170:362:0",
                          "statements": [
                            {
                              "assignments": [
                                2384
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2384,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2437,
                                  "src": "25185:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2383,
                                    "name": "IPair",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 161,
                                    "src": "25185:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2388,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2385,
                                  "name": "addresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2355,
                                  "src": "25199:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IPair_$161_$dyn_calldata_ptr",
                                    "typeString": "contract IPair[] calldata"
                                  }
                                },
                                "id": 2387,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2386,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2373,
                                  "src": "25209:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "25199:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "25185:26:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2389,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2364,
                                      "src": "25226:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                                      }
                                    },
                                    "id": 2391,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2390,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2373,
                                      "src": "25232:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25226:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairPoll_$2350_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairPoll memory"
                                    }
                                  },
                                  "id": 2392,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2341,
                                  "src": "25226:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2393,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2384,
                                  "src": "25243:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "src": "25226:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 2395,
                              "nodeType": "ExpressionStatement",
                              "src": "25226:22:0"
                            },
                            {
                              "assignments": [
                                2397,
                                2399,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2397,
                                  "mutability": "mutable",
                                  "name": "reserve0",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2437,
                                  "src": "25264:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2396,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25264:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2399,
                                  "mutability": "mutable",
                                  "name": "reserve1",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2437,
                                  "src": "25282:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2398,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25282:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 2403,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2400,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2384,
                                    "src": "25304:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "id": 2401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getReserves",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 160,
                                  "src": "25304:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "function () view external returns (uint112,uint112,uint32)"
                                  }
                                },
                                "id": 2402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25304:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "tuple(uint112,uint112,uint32)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "25263:60:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2404,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2364,
                                      "src": "25338:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                                      }
                                    },
                                    "id": 2406,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2405,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2373,
                                      "src": "25344:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25338:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairPoll_$2350_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairPoll memory"
                                    }
                                  },
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "reserve0",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2343,
                                  "src": "25338:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2408,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2397,
                                  "src": "25358:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25338:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2410,
                              "nodeType": "ExpressionStatement",
                              "src": "25338:28:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2411,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2364,
                                      "src": "25381:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                                      }
                                    },
                                    "id": 2413,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2412,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2373,
                                      "src": "25387:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25381:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairPoll_$2350_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairPoll memory"
                                    }
                                  },
                                  "id": 2414,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "reserve1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2345,
                                  "src": "25381:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2415,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2399,
                                  "src": "25401:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25381:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2417,
                              "nodeType": "ExpressionStatement",
                              "src": "25381:28:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2418,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2364,
                                      "src": "25424:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                                      }
                                    },
                                    "id": 2420,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2419,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2373,
                                      "src": "25430:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25424:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairPoll_$2350_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairPoll memory"
                                    }
                                  },
                                  "id": 2421,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2349,
                                  "src": "25424:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2424,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2352,
                                      "src": "25459:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2422,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2384,
                                      "src": "25443:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "25443:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25443:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25424:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2427,
                              "nodeType": "ExpressionStatement",
                              "src": "25424:39:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2428,
                                      "name": "pairs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2364,
                                      "src": "25478:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                                      }
                                    },
                                    "id": 2430,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2429,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2373,
                                      "src": "25484:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "25478:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairPoll_$2350_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PairPoll memory"
                                    }
                                  },
                                  "id": 2431,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2347,
                                  "src": "25478:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2432,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2384,
                                      "src": "25501:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7,
                                    "src": "25501:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 2434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25501:19:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25478:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2436,
                              "nodeType": "ExpressionStatement",
                              "src": "25478:42:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2376,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2373,
                            "src": "25143:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2377,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2355,
                              "src": "25147:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IPair_$161_$dyn_calldata_ptr",
                                "typeString": "contract IPair[] calldata"
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "25147:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25143:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2438,
                        "initializationExpression": {
                          "assignments": [
                            2373
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2373,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2438,
                              "src": "25128:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2372,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "25128:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2375,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25140:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "25128:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "25165:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2380,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2373,
                              "src": "25165:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2382,
                          "nodeType": "ExpressionStatement",
                          "src": "25165:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "25123:409:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2439,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2364,
                          "src": "25549:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PairPoll memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2360,
                        "id": 2440,
                        "nodeType": "Return",
                        "src": "25542:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a959dd80",
                  "id": 2442,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pollPairs",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2352,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2442,
                        "src": "24930:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24930:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2355,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2442,
                        "src": "24943:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IPair_$161_$dyn_calldata_ptr",
                          "typeString": "contract IPair[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2353,
                            "name": "IPair",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 161,
                            "src": "24943:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPair_$161",
                              "typeString": "contract IPair"
                            }
                          },
                          "id": 2354,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "24943:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IPair_$161_$dyn_storage_ptr",
                            "typeString": "contract IPair[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24929:41:0"
                  },
                  "returnParameters": {
                    "id": 2360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2359,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2442,
                        "src": "25019:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.PairPoll[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2357,
                            "name": "PairPoll",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2350,
                            "src": "25019:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairPoll_$2350_storage_ptr",
                              "typeString": "struct BoringHelperV1.PairPoll"
                            }
                          },
                          "id": 2358,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "25019:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PairPoll_$2350_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.PairPoll[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "25018:19:0"
                  },
                  "scope": 2907,
                  "src": "24911:651:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.PoolsInfo",
                  "id": 2447,
                  "members": [
                    {
                      "constant": false,
                      "id": 2444,
                      "mutability": "mutable",
                      "name": "totalAllocPoint",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2447,
                      "src": "25598:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2443,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25598:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2446,
                      "mutability": "mutable",
                      "name": "poolLength",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2447,
                      "src": "25632:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25632:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolsInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "25570:88:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.PoolInfo",
                  "id": 2468,
                  "members": [
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "pid",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25693:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25693:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2451,
                      "mutability": "mutable",
                      "name": "lpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25715:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPair_$161",
                        "typeString": "contract IPair"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2450,
                        "name": "IPair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 161,
                        "src": "25715:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$161",
                          "typeString": "contract IPair"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2453,
                      "mutability": "mutable",
                      "name": "allocPoint",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25739:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25739:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2455,
                      "mutability": "mutable",
                      "name": "isPair",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25768:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2454,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "25768:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2457,
                      "mutability": "mutable",
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25790:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactory_$193",
                        "typeString": "contract IFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2456,
                        "name": "IFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 193,
                        "src": "25790:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$193",
                          "typeString": "contract IFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2459,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25817:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2458,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "25817:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2461,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25841:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$54",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2460,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 54,
                        "src": "25841:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$54",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2463,
                      "mutability": "mutable",
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25865:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2462,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "25865:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2465,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25887:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2464,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "25887:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2467,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2468,
                      "src": "25911:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2466,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "25911:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "25666:267:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2641,
                    "nodeType": "Block",
                    "src": "26074:990:0",
                    "statements": [
                      {
                        "assignments": [
                          2480
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2480,
                            "mutability": "mutable",
                            "name": "info",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2641,
                            "src": "26085:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolsInfo_$2447_memory_ptr",
                              "typeString": "struct BoringHelperV1.PoolsInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 2479,
                              "name": "PoolsInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2447,
                              "src": "26085:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolsInfo_$2447_storage_ptr",
                                "typeString": "struct BoringHelperV1.PoolsInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2481,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26085:21:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2482,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "26117:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolsInfo_$2447_memory_ptr",
                                "typeString": "struct BoringHelperV1.PoolsInfo memory"
                              }
                            },
                            "id": 2484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalAllocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2444,
                            "src": "26117:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2485,
                                "name": "chef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1432,
                                "src": "26140:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMasterChef_$139",
                                  "typeString": "contract IMasterChef"
                                }
                              },
                              "id": 2486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAllocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 94,
                              "src": "26140:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26140:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26117:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2489,
                        "nodeType": "ExpressionStatement",
                        "src": "26117:45:0"
                      },
                      {
                        "assignments": [
                          2491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2491,
                            "mutability": "mutable",
                            "name": "poolLength",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2641,
                            "src": "26173:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2490,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26173:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2495,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2492,
                              "name": "chef",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "26194:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMasterChef_$139",
                                "typeString": "contract IMasterChef"
                              }
                            },
                            "id": 2493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "poolLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 99,
                            "src": "26194:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26194:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26173:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2496,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "26222:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolsInfo_$2447_memory_ptr",
                                "typeString": "struct BoringHelperV1.PoolsInfo memory"
                              }
                            },
                            "id": 2498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "poolLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2446,
                            "src": "26222:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2499,
                            "name": "poolLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "26240:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26222:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2501,
                        "nodeType": "ExpressionStatement",
                        "src": "26222:28:0"
                      },
                      {
                        "assignments": [
                          2505
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2505,
                            "mutability": "mutable",
                            "name": "pools",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2641,
                            "src": "26263:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.PoolInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2503,
                                "name": "PoolInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2468,
                                "src": "26263:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2468_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PoolInfo"
                                }
                              },
                              "id": 2504,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "26263:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PoolInfo[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2512,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2509,
                                "name": "pids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2471,
                                "src": "26304:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 2510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "26304:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "26289:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.PoolInfo memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2506,
                                "name": "PoolInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2468,
                                "src": "26293:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2468_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PoolInfo"
                                }
                              },
                              "id": 2507,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "26293:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PoolInfo[]"
                              }
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26289:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26263:53:0"
                      },
                      {
                        "body": {
                          "id": 2635,
                          "nodeType": "Block",
                          "src": "26371:655:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2524,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26386:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2526,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2525,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26392:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26386:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2527,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "pid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2449,
                                  "src": "26386:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2528,
                                    "name": "pids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2471,
                                    "src": "26401:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 2530,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2529,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2514,
                                    "src": "26406:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "26401:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26386:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2532,
                              "nodeType": "ExpressionStatement",
                              "src": "26386:22:0"
                            },
                            {
                              "assignments": [
                                2534,
                                2536,
                                null,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2534,
                                  "mutability": "mutable",
                                  "name": "lpToken",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2635,
                                  "src": "26424:15:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2533,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "26424:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 2536,
                                  "mutability": "mutable",
                                  "name": "allocPoint",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2635,
                                  "src": "26441:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2535,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "26441:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null,
                                null
                              ],
                              "id": 2543,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2539,
                                      "name": "pids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2471,
                                      "src": "26481:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 2541,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2540,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26486:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26481:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2537,
                                    "name": "chef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "26467:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                                      "typeString": "contract IMasterChef"
                                    }
                                  },
                                  "id": 2538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "poolInfo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 112,
                                  "src": "26467:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26467:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256,uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "26423:66:0"
                            },
                            {
                              "assignments": [
                                2545
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2545,
                                  "mutability": "mutable",
                                  "name": "pair",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2635,
                                  "src": "26504:10:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2544,
                                    "name": "IPair",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 161,
                                    "src": "26504:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2549,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2547,
                                    "name": "lpToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2534,
                                    "src": "26523:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2546,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "26517:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$161_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 2548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26517:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "26504:27:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2550,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26546:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2552,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2551,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26552:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26546:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2553,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lpToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2451,
                                  "src": "26546:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2554,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2545,
                                  "src": "26565:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  }
                                },
                                "src": "26546:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 2556,
                              "nodeType": "ExpressionStatement",
                              "src": "26546:23:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2557,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26584:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2559,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2558,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26590:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26584:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2560,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2453,
                                  "src": "26584:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2561,
                                  "name": "allocPoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2536,
                                  "src": "26606:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26584:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2563,
                              "nodeType": "ExpressionStatement",
                              "src": "26584:32:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2564,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26633:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2566,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2565,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26639:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26633:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2567,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2463,
                                  "src": "26633:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2568,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2545,
                                      "src": "26649:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 437,
                                    "src": "26649:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (string memory)"
                                    }
                                  },
                                  "id": 2570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26649:11:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "26633:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2572,
                              "nodeType": "ExpressionStatement",
                              "src": "26633:27:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2573,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26675:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2575,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2574,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26681:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26675:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2576,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2465,
                                  "src": "26675:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2577,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2545,
                                      "src": "26693:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 407,
                                    "src": "26693:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_string_memory_ptr_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (string memory)"
                                    }
                                  },
                                  "id": 2579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26693:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "src": "26675:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 2581,
                              "nodeType": "ExpressionStatement",
                              "src": "26675:31:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2582,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26721:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2584,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2583,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26727:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26721:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2585,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "decimals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2467,
                                  "src": "26721:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2586,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2545,
                                      "src": "26741:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 476,
                                    "src": "26741:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$54_$returns$_t_uint8_$bound_to$_t_contract$_IERC20_$54_$",
                                      "typeString": "function (contract IERC20) view returns (uint8)"
                                    }
                                  },
                                  "id": 2588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26741:15:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "26721:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 2590,
                              "nodeType": "ExpressionStatement",
                              "src": "26721:35:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2591,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26773:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2593,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2592,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26779:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26773:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2594,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "factory",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2457,
                                  "src": "26773:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2595,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2545,
                                      "src": "26792:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPair_$161",
                                        "typeString": "contract IPair"
                                      }
                                    },
                                    "id": 2596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "factory",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 609,
                                    "src": "26792:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_contract$_IPair_$161_$returns$_t_contract$_IFactory_$193_$bound_to$_t_contract$_IPair_$161_$",
                                      "typeString": "function (contract IPair) view returns (contract IFactory)"
                                    }
                                  },
                                  "id": 2597,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26792:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "src": "26773:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                }
                              },
                              "id": 2599,
                              "nodeType": "ExpressionStatement",
                              "src": "26773:33:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                },
                                "id": 2607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2600,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2505,
                                      "src": "26825:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2602,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2601,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2514,
                                      "src": "26831:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26825:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolInfo memory"
                                    }
                                  },
                                  "id": 2603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "factory",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2457,
                                  "src": "26825:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 2605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "26854:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2604,
                                    "name": "IFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 193,
                                    "src": "26845:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                      "typeString": "type(contract IFactory)"
                                    }
                                  },
                                  "id": 2606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26845:11:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "src": "26825:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2634,
                              "nodeType": "IfStatement",
                              "src": "26821:194:0",
                              "trueBody": {
                                "id": 2633,
                                "nodeType": "Block",
                                "src": "26858:157:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2608,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2505,
                                            "src": "26877:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2610,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2609,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2514,
                                            "src": "26883:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "26877:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                            "typeString": "struct BoringHelperV1.PoolInfo memory"
                                          }
                                        },
                                        "id": 2611,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "isPair",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2455,
                                        "src": "26877:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 2612,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "26895:4:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "26877:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2614,
                                    "nodeType": "ExpressionStatement",
                                    "src": "26877:22:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2615,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2505,
                                            "src": "26918:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2617,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2616,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2514,
                                            "src": "26924:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "26918:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                            "typeString": "struct BoringHelperV1.PoolInfo memory"
                                          }
                                        },
                                        "id": 2618,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "token0",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2459,
                                        "src": "26918:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2619,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2545,
                                            "src": "26936:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2620,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token0",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 146,
                                          "src": "26936:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                            "typeString": "function () view external returns (contract IERC20)"
                                          }
                                        },
                                        "id": 2621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "26936:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "src": "26918:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2623,
                                    "nodeType": "ExpressionStatement",
                                    "src": "26918:31:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2624,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2505,
                                            "src": "26968:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2626,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2625,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2514,
                                            "src": "26974:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "26968:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolInfo_$2468_memory_ptr",
                                            "typeString": "struct BoringHelperV1.PoolInfo memory"
                                          }
                                        },
                                        "id": 2627,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "token1",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2461,
                                        "src": "26968:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2628,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2545,
                                            "src": "26986:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2629,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token1",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 151,
                                          "src": "26986:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$54_$",
                                            "typeString": "function () view external returns (contract IERC20)"
                                          }
                                        },
                                        "id": 2630,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "26986:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$54",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "src": "26968:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$54",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2632,
                                    "nodeType": "ExpressionStatement",
                                    "src": "26968:31:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2517,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2514,
                            "src": "26349:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2518,
                              "name": "pids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2471,
                              "src": "26353:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 2519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "26353:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26349:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2636,
                        "initializationExpression": {
                          "assignments": [
                            2514
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2514,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2636,
                              "src": "26334:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2513,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26334:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2516,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26346:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26334:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "26366:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2521,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2514,
                              "src": "26366:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2523,
                          "nodeType": "ExpressionStatement",
                          "src": "26366:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "26329:697:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 2637,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "27044:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolsInfo_$2447_memory_ptr",
                                "typeString": "struct BoringHelperV1.PoolsInfo memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2638,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2505,
                              "src": "27050:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct BoringHelperV1.PoolInfo memory[] memory"
                              }
                            }
                          ],
                          "id": 2639,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "27043:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_PoolsInfo_$2447_memory_ptr_$_t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct BoringHelperV1.PoolsInfo memory,struct BoringHelperV1.PoolInfo memory[] memory)"
                          }
                        },
                        "functionReturnParameters": 2478,
                        "id": 2640,
                        "nodeType": "Return",
                        "src": "27036:20:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "2952dde8",
                  "id": 2642,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPools",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2471,
                        "mutability": "mutable",
                        "name": "pids",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2642,
                        "src": "25959:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2469,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "25959:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2470,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "25959:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "25958:25:0"
                  },
                  "returnParameters": {
                    "id": 2478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2474,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2642,
                        "src": "26032:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolsInfo_$2447_memory_ptr",
                          "typeString": "struct BoringHelperV1.PoolsInfo"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 2473,
                          "name": "PoolsInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2447,
                          "src": "26032:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolsInfo_$2447_storage_ptr",
                            "typeString": "struct BoringHelperV1.PoolsInfo"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2477,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2642,
                        "src": "26050:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.PoolInfo[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2475,
                            "name": "PoolInfo",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2468,
                            "src": "26050:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2468_storage_ptr",
                              "typeString": "struct BoringHelperV1.PoolInfo"
                            }
                          },
                          "id": 2476,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "26050:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2468_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.PoolInfo[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "26031:37:0"
                  },
                  "scope": 2907,
                  "src": "25941:1123:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.PoolFound",
                  "id": 2647,
                  "members": [
                    {
                      "constant": false,
                      "id": 2644,
                      "mutability": "mutable",
                      "name": "pid",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2647,
                      "src": "27100:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27100:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2646,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2647,
                      "src": "27122:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27122:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolFound",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "27072:73:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2707,
                    "nodeType": "Block",
                    "src": "27283:267:0",
                    "statements": [
                      {
                        "assignments": [
                          2661
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2661,
                            "mutability": "mutable",
                            "name": "pools",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2707,
                            "src": "27294:24:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.PoolFound[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2659,
                                "name": "PoolFound",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2647,
                                "src": "27294:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolFound_$2647_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PoolFound"
                                }
                              },
                              "id": 2660,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "27294:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PoolFound[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2668,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2665,
                                "name": "pids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2652,
                                "src": "27337:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 2666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "27337:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "27321:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.PoolFound memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2662,
                                "name": "PoolFound",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2647,
                                "src": "27325:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolFound_$2647_storage_ptr",
                                  "typeString": "struct BoringHelperV1.PoolFound"
                                }
                              },
                              "id": 2663,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "27325:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.PoolFound[]"
                              }
                            }
                          },
                          "id": 2667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27321:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PoolFound memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27294:55:0"
                      },
                      {
                        "body": {
                          "id": 2703,
                          "nodeType": "Block",
                          "src": "27404:114:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2680,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2661,
                                      "src": "27419:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.PoolFound memory[] memory"
                                      }
                                    },
                                    "id": 2682,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2681,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2670,
                                      "src": "27425:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "27419:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolFound_$2647_memory_ptr",
                                      "typeString": "struct BoringHelperV1.PoolFound memory"
                                    }
                                  },
                                  "id": 2683,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "pid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2644,
                                  "src": "27419:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2684,
                                    "name": "pids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2652,
                                    "src": "27434:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 2686,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2685,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2670,
                                    "src": "27439:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "27434:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27419:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2688,
                              "nodeType": "ExpressionStatement",
                              "src": "27419:22:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 2689,
                                          "name": "pools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2661,
                                          "src": "27457:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct BoringHelperV1.PoolFound memory[] memory"
                                          }
                                        },
                                        "id": 2691,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 2690,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2670,
                                          "src": "27463:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "27457:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolFound_$2647_memory_ptr",
                                          "typeString": "struct BoringHelperV1.PoolFound memory"
                                        }
                                      },
                                      "id": 2692,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2646,
                                      "src": "27457:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 2693,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "27456:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$__$",
                                    "typeString": "tuple(uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2696,
                                        "name": "pids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2652,
                                        "src": "27493:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                          "typeString": "uint256[] calldata"
                                        }
                                      },
                                      "id": 2698,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2697,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2670,
                                        "src": "27498:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "27493:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2699,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2649,
                                      "src": "27502:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2694,
                                      "name": "chef",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1432,
                                      "src": "27479:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IMasterChef_$139",
                                        "typeString": "contract IMasterChef"
                                      }
                                    },
                                    "id": 2695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userInfo",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 123,
                                    "src": "27479:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (uint256,address) view external returns (uint256,uint256)"
                                    }
                                  },
                                  "id": 2700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27479:27:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "27456:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2702,
                              "nodeType": "ExpressionStatement",
                              "src": "27456:50:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2673,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2670,
                            "src": "27382:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2674,
                              "name": "pids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2652,
                              "src": "27386:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 2675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "27386:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27382:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2704,
                        "initializationExpression": {
                          "assignments": [
                            2670
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2670,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2704,
                              "src": "27367:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2669,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "27367:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2672,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27379:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "27367:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "27399:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2677,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2670,
                              "src": "27399:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2679,
                          "nodeType": "ExpressionStatement",
                          "src": "27399:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "27362:156:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2705,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2661,
                          "src": "27537:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.PoolFound memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2657,
                        "id": 2706,
                        "nodeType": "Return",
                        "src": "27530:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "ac6091f8",
                  "id": 2708,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "findPools",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2649,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2708,
                        "src": "27172:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27172:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2652,
                        "mutability": "mutable",
                        "name": "pids",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2708,
                        "src": "27185:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2650,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "27185:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2651,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "27185:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "27171:38:0"
                  },
                  "returnParameters": {
                    "id": 2657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2656,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2708,
                        "src": "27258:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.PoolFound[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2654,
                            "name": "PoolFound",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2647,
                            "src": "27258:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolFound_$2647_storage_ptr",
                              "typeString": "struct BoringHelperV1.PoolFound"
                            }
                          },
                          "id": 2655,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "27258:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolFound_$2647_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.PoolFound[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "27257:20:0"
                  },
                  "scope": 2907,
                  "src": "27153:397:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "canonicalName": "BoringHelperV1.UserPoolInfo",
                  "id": 2729,
                  "members": [
                    {
                      "constant": false,
                      "id": 2710,
                      "mutability": "mutable",
                      "name": "pid",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27589:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27589:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2712,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27611:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2714,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27663:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2713,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2716,
                      "mutability": "mutable",
                      "name": "lpBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27719:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27719:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2718,
                      "mutability": "mutable",
                      "name": "lpTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27782:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2717,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27782:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2720,
                      "mutability": "mutable",
                      "name": "lpAllowance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27842:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27842:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2722,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27909:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2721,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27909:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2724,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27936:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2726,
                      "mutability": "mutable",
                      "name": "rewardDebt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27963:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27963:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2728,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2729,
                      "src": "27992:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserPoolInfo",
                  "nodeType": "StructDefinition",
                  "scope": 2907,
                  "src": "27558:474:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2905,
                    "nodeType": "Block",
                    "src": "28173:1084:0",
                    "statements": [
                      {
                        "assignments": [
                          2743
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2743,
                            "mutability": "mutable",
                            "name": "pools",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2905,
                            "src": "28184:27:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BoringHelperV1.UserPoolInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2741,
                                "name": "UserPoolInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2729,
                                "src": "28184:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPoolInfo_$2729_storage_ptr",
                                  "typeString": "struct BoringHelperV1.UserPoolInfo"
                                }
                              },
                              "id": 2742,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "28184:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.UserPoolInfo[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2750,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2747,
                                "name": "pids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2734,
                                "src": "28233:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 2748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "28233:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "28214:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BoringHelperV1.UserPoolInfo memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 2744,
                                "name": "UserPoolInfo",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 2729,
                                "src": "28218:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPoolInfo_$2729_storage_ptr",
                                  "typeString": "struct BoringHelperV1.UserPoolInfo"
                                }
                              },
                              "id": 2745,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "28218:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_storage_$dyn_storage_ptr",
                                "typeString": "struct BoringHelperV1.UserPoolInfo[]"
                              }
                            }
                          },
                          "id": 2749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28214:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28184:61:0"
                      },
                      {
                        "body": {
                          "id": 2901,
                          "nodeType": "Block",
                          "src": "28300:927:0",
                          "statements": [
                            {
                              "assignments": [
                                2763,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2763,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2901,
                                  "src": "28316:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2762,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28316:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 2771,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2766,
                                      "name": "pids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2734,
                                      "src": "28350:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 2768,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2767,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28355:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28350:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2769,
                                    "name": "who",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2731,
                                    "src": "28359:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2764,
                                    "name": "chef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "28336:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                                      "typeString": "contract IMasterChef"
                                    }
                                  },
                                  "id": 2765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userInfo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 123,
                                  "src": "28336:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (uint256,address) view external returns (uint256,uint256)"
                                  }
                                },
                                "id": 2770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28336:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "28315:48:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2772,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2743,
                                      "src": "28378:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2774,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2773,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28384:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28378:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                    }
                                  },
                                  "id": 2775,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2712,
                                  "src": "28378:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2776,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2763,
                                  "src": "28397:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28378:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2778,
                              "nodeType": "ExpressionStatement",
                              "src": "28378:25:0"
                            },
                            {
                              "assignments": [
                                2780,
                                null,
                                null,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2780,
                                  "mutability": "mutable",
                                  "name": "pendingJoe",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2901,
                                  "src": "28419:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2779,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28419:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null,
                                null,
                                null
                              ],
                              "id": 2788,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2783,
                                      "name": "pids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2734,
                                      "src": "28466:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 2785,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2784,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28471:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28466:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2786,
                                    "name": "who",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2731,
                                    "src": "28475:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2781,
                                    "name": "chef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "28447:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                                      "typeString": "contract IMasterChef"
                                    }
                                  },
                                  "id": 2782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pendingTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 138,
                                  "src": "28447:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$",
                                    "typeString": "function (uint256,address) view external returns (uint256,address,string memory,uint256)"
                                  }
                                },
                                "id": 2787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28447:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(uint256,address,string memory,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "28418:61:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2789,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2743,
                                      "src": "28494:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2791,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2790,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28500:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28494:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                    }
                                  },
                                  "id": 2792,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "pending",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2728,
                                  "src": "28494:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2793,
                                  "name": "pendingJoe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2780,
                                  "src": "28513:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28494:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2795,
                              "nodeType": "ExpressionStatement",
                              "src": "28494:29:0"
                            },
                            {
                              "assignments": [
                                2797,
                                null,
                                null,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2797,
                                  "mutability": "mutable",
                                  "name": "lpToken",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2901,
                                  "src": "28541:15:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2796,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28541:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null,
                                null,
                                null
                              ],
                              "id": 2804,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2800,
                                      "name": "pids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2734,
                                      "src": "28580:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 2802,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2801,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28585:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28580:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2798,
                                    "name": "chef",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1432,
                                    "src": "28566:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMasterChef_$139",
                                      "typeString": "contract IMasterChef"
                                    }
                                  },
                                  "id": 2799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "poolInfo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 112,
                                  "src": "28566:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28566:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256,uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "28540:48:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2805,
                                      "name": "pools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2743,
                                      "src": "28603:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                      }
                                    },
                                    "id": 2807,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2806,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2752,
                                      "src": "28609:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28603:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                      "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                    }
                                  },
                                  "id": 2808,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "pid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2710,
                                  "src": "28603:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2809,
                                    "name": "pids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2734,
                                    "src": "28618:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 2811,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2810,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2752,
                                    "src": "28623:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "28618:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28603:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2813,
                              "nodeType": "ExpressionStatement",
                              "src": "28603:22:0"
                            },
                            {
                              "assignments": [
                                2815
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2815,
                                  "mutability": "mutable",
                                  "name": "pair",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2901,
                                  "src": "28640:10:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPair_$161",
                                    "typeString": "contract IPair"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2814,
                                    "name": "IPair",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 161,
                                    "src": "28640:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2819,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2817,
                                    "name": "lpToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2797,
                                    "src": "28659:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2816,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "28653:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$161_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 2818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28653:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$161",
                                  "typeString": "contract IPair"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "28640:27:0"
                            },
                            {
                              "assignments": [
                                2821
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2821,
                                  "mutability": "mutable",
                                  "name": "factory",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2901,
                                  "src": "28682:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 2820,
                                    "name": "IFactory",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 193,
                                    "src": "28682:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFactory_$193",
                                      "typeString": "contract IFactory"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2825,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2822,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2815,
                                    "src": "28701:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPair_$161",
                                      "typeString": "contract IPair"
                                    }
                                  },
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "factory",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 609,
                                  "src": "28701:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_contract$_IPair_$161_$returns$_t_contract$_IFactory_$193_$bound_to$_t_contract$_IPair_$161_$",
                                    "typeString": "function (contract IPair) view returns (contract IFactory)"
                                  }
                                },
                                "id": 2824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28701:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "28682:33:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IFactory_$193",
                                  "typeString": "contract IFactory"
                                },
                                "id": 2830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2826,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2821,
                                  "src": "28734:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 2828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28754:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2827,
                                    "name": "IFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 193,
                                    "src": "28745:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFactory_$193_$",
                                      "typeString": "type(contract IFactory)"
                                    }
                                  },
                                  "id": 2829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "28745:11:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFactory_$193",
                                    "typeString": "contract IFactory"
                                  }
                                },
                                "src": "28734:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2900,
                              "nodeType": "IfStatement",
                              "src": "28730:486:0",
                              "trueBody": {
                                "id": 2899,
                                "nodeType": "Block",
                                "src": "28758:458:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2831,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "28777:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2833,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2832,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "28783:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "28777:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2834,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "totalSupply",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2714,
                                        "src": "28777:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 2839,
                                                "name": "chef",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1432,
                                                "src": "28823:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IMasterChef_$139",
                                                  "typeString": "contract IMasterChef"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IMasterChef_$139",
                                                  "typeString": "contract IMasterChef"
                                                }
                                              ],
                                              "id": 2838,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "28815:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2837,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "28815:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 2840,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "28815:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2835,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2815,
                                            "src": "28800:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2836,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14,
                                          "src": "28800:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "28800:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "28777:52:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2843,
                                    "nodeType": "ExpressionStatement",
                                    "src": "28777:52:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2856,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2844,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "28848:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2846,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2845,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "28854:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "28848:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2847,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lpAllowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2720,
                                        "src": "28848:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 2850,
                                            "name": "who",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2731,
                                            "src": "28886:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 2853,
                                                "name": "chef",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1432,
                                                "src": "28899:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IMasterChef_$139",
                                                  "typeString": "contract IMasterChef"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IMasterChef_$139",
                                                  "typeString": "contract IMasterChef"
                                                }
                                              ],
                                              "id": 2852,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "28891:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2851,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "28891:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 2854,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "28891:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2848,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2815,
                                            "src": "28871:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2849,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "allowance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 23,
                                          "src": "28871:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address,address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2855,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "28871:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "28848:57:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2857,
                                    "nodeType": "ExpressionStatement",
                                    "src": "28848:57:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2858,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "28924:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2860,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2859,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "28930:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "28924:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2861,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lpBalance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2716,
                                        "src": "28924:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 2864,
                                            "name": "who",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2731,
                                            "src": "28960:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2862,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2815,
                                            "src": "28945:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2863,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14,
                                          "src": "28945:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2865,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "28945:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "28924:40:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2867,
                                    "nodeType": "ExpressionStatement",
                                    "src": "28924:40:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2875,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2868,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "28983:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2870,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2869,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "28989:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "28983:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2871,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lpTotalSupply",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2718,
                                        "src": "28983:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2872,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2815,
                                            "src": "29008:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IPair_$161",
                                              "typeString": "contract IPair"
                                            }
                                          },
                                          "id": 2873,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "totalSupply",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 7,
                                          "src": "29008:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 2874,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "29008:18:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "28983:43:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2876,
                                    "nodeType": "ExpressionStatement",
                                    "src": "28983:43:0"
                                  },
                                  {
                                    "assignments": [
                                      2878,
                                      2880,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2878,
                                        "mutability": "mutable",
                                        "name": "reserve0",
                                        "nodeType": "VariableDeclaration",
                                        "overrides": null,
                                        "scope": 2899,
                                        "src": "29048:16:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        },
                                        "typeName": {
                                          "id": 2877,
                                          "name": "uint112",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "29048:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      {
                                        "constant": false,
                                        "id": 2880,
                                        "mutability": "mutable",
                                        "name": "reserve1",
                                        "nodeType": "VariableDeclaration",
                                        "overrides": null,
                                        "scope": 2899,
                                        "src": "29066:16:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        },
                                        "typeName": {
                                          "id": 2879,
                                          "name": "uint112",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "29066:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 2884,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2881,
                                          "name": "pair",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2815,
                                          "src": "29088:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IPair_$161",
                                            "typeString": "contract IPair"
                                          }
                                        },
                                        "id": 2882,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getReserves",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 160,
                                        "src": "29088:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                                        }
                                      },
                                      "id": 2883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "29088:18:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                        "typeString": "tuple(uint112,uint112,uint32)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "29047:59:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2890,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2885,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "29125:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2887,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2886,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "29131:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29125:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2888,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "reserve0",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2722,
                                        "src": "29125:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 2889,
                                        "name": "reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2878,
                                        "src": "29145:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "29125:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2891,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29125:28:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2897,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2892,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2743,
                                            "src": "29172:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                                            }
                                          },
                                          "id": 2894,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2893,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2752,
                                            "src": "29178:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29172:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserPoolInfo_$2729_memory_ptr",
                                            "typeString": "struct BoringHelperV1.UserPoolInfo memory"
                                          }
                                        },
                                        "id": 2895,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "reserve1",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2724,
                                        "src": "29172:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 2896,
                                        "name": "reserve1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2880,
                                        "src": "29192:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "29172:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2898,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29172:28:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2755,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2752,
                            "src": "28278:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2756,
                              "name": "pids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2734,
                              "src": "28282:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 2757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "28282:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28278:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2902,
                        "initializationExpression": {
                          "assignments": [
                            2752
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2752,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2902,
                              "src": "28263:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2751,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "28263:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2754,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28275:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "28263:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "28295:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2759,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2752,
                              "src": "28295:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2761,
                          "nodeType": "ExpressionStatement",
                          "src": "28295:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "28258:969:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2903,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2743,
                          "src": "29244:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BoringHelperV1.UserPoolInfo memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2739,
                        "id": 2904,
                        "nodeType": "Return",
                        "src": "29237:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "3009f414",
                  "id": 2906,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pollPools",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2731,
                        "mutability": "mutable",
                        "name": "who",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2906,
                        "src": "28059:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28059:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2734,
                        "mutability": "mutable",
                        "name": "pids",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2906,
                        "src": "28072:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2732,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "28072:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2733,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "28072:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "28058:38:0"
                  },
                  "returnParameters": {
                    "id": 2739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2738,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2906,
                        "src": "28145:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BoringHelperV1.UserPoolInfo[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 2736,
                            "name": "UserPoolInfo",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2729,
                            "src": "28145:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPoolInfo_$2729_storage_ptr",
                              "typeString": "struct BoringHelperV1.UserPoolInfo"
                            }
                          },
                          "id": 2737,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "28145:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserPoolInfo_$2729_storage_$dyn_storage_ptr",
                            "typeString": "struct BoringHelperV1.UserPoolInfo[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "28144:23:0"
                  },
                  "scope": 2907,
                  "src": "28040:1217:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2908,
              "src": "16648:12612:0"
            }
          ],
          "src": "472:28790:0"
        },
        "id": 0
      }
    }
  }
}
