/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Cliff } from "../Cliff";

export class Cliff__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _beneficiary: string,
    _startTimestamp: BigNumberish,
    _cliffInMonths: BigNumberish,
    overrides?: Overrides
  ): Promise<Cliff> {
    return super.deploy(
      _token,
      _beneficiary,
      _startTimestamp,
      _cliffInMonths,
      overrides || {}
    ) as Promise<Cliff>;
  }
  getDeployTransaction(
    _token: string,
    _beneficiary: string,
    _startTimestamp: BigNumberish,
    _cliffInMonths: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _beneficiary,
      _startTimestamp,
      _cliffInMonths,
      overrides || {}
    );
  }
  attach(address: string): Cliff {
    return super.attach(address) as Cliff;
  }
  connect(signer: Signer): Cliff__factory {
    return super.connect(signer) as Cliff__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cliff {
    return new Contract(address, _abi, signerOrProvider) as Cliff;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliffInMonths",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [],
    name: "SECONDS_PER_MONTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffInMonths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610a1d380380610a1d8339818101604052608081101561003457600080fd5b50805160208201516040830151606090930151919290916001600160a01b0383166100905760405162461bcd60e51b81526004018080602001828103825260228152602001806109fb6022913960400191505060405180910390fd5b6001600160601b0319606085811b821660a05284901b1660805260c081905281156100bb57816100c3565b6100c36100d0565b60e052506100d492505050565b4290565b60805160601c60a05160601c60c05160e0516108ce61012d6000398061013f528061017b52806103b85250806101bd528061038a52508061020e528061030b52806103dc525080610119528061032d52506108ce6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063928d89ae11610066578063928d89ae146100e857806396132521146100f0578063adb61832146100f8578063e6fd48bc14610100578063fc0c546a1461010857610093565b806310786deb1461009857806338af3eed146100b257806344b1231f146100d657806386d1a69f146100de575b600080fd5b6100a0610110565b60408051918252519081900360200190f35b6100ba610117565b604080516001600160a01b039092168252519081900360200190f35b6100a061013b565b6100e661028d565b005b6100a0610388565b6100a06103ac565b6100a06103b2565b6100a06103b6565b6100ba6103da565b62278d0081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006101666103b2565b10156101745750600061028a565b60006101a87f00000000000000000000000000000000000000000000000000000000000000006101a26103b2565b906103fe565b905060006101b98262278d0061045b565b90507f00000000000000000000000000000000000000000000000000000000000000008110156101ee5760009250505061028a565b604080516370a0823160e01b815230600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a08231916024808301926020929190829003018186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d602081101561027e57600080fd5b5051925061028a915050565b90565b600061029761013b565b9050600081116102ee576040805162461bcd60e51b815260206004820152601b60248201527f436c6966663a204e6f20746f6b656e7320746f2072656c656173650000000000604482015290519081900360640190fd5b6000546102fb90826104c2565b6000556103526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610523565b6040805182815290517ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b4290565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082821115610455576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008082116104b1576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816104ba57fe5b049392505050565b60008282018381101561051c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261057590849061057a565b505050565b60606105cf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661062b9092919063ffffffff16565b805190915015610575578080602001905160208110156105ee57600080fd5b50516105755760405162461bcd60e51b815260040180806020018281038252602a81526020018061086f602a913960400191505060405180910390fd5b606061063a8484600085610642565b949350505050565b6060824710156106835760405162461bcd60e51b81526004018080602001828103825260268152602001806108496026913960400191505060405180910390fd5b61068c8561079e565b6106dd576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061071c5780518252601f1990920191602091820191016106fd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b50915091506107938282866107a4565b979650505050505050565b3b151590565b606083156107b357508161051c565b8251156107c35782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080d5781810151838201526020016107f5565b50505050905090810190601f16801561083a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122060347234bc0de3ccea7f16f635483c8e901efb486e5c16ebd6be84a70ad5448664736f6c634300060c0033436c6966663a2042656e65666963696172792063616e6e6f7420626520656d707479";
