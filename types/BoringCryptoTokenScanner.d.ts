/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BoringCryptoTokenScannerInterface extends ethers.utils.Interface {
  functions: {
    "findBalances(address,address[])": FunctionFragment;
    "findPairs(address,address,uint256,uint256)": FunctionFragment;
    "getBalances(address,address[],address,address)": FunctionFragment;
    "getFactoryInfo(address[])": FunctionFragment;
    "getPairs(address,uint256,uint256)": FunctionFragment;
    "getPairsFull(address,address[])": FunctionFragment;
    "getTokenInfo(address[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "findBalances",
    values: [string, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "findPairs",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBalances",
    values: [string, string[], string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryInfo",
    values: [string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getPairs",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPairsFull",
    values: [string, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenInfo",
    values: [string[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "findBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "findPairs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPairs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPairsFull",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenInfo",
    data: BytesLike
  ): Result;

  events: {};
}

export class BoringCryptoTokenScanner extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BoringCryptoTokenScannerInterface;

  functions: {
    findBalances(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [([string, BigNumber] & { token: string; balance: BigNumber })[]]
    >;

    "findBalances(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [([string, BigNumber] & { token: string; balance: BigNumber })[]]
    >;

    findPairs(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string] & {
          token: string;
          token0: string;
          token1: string;
        })[]
      ]
    >;

    "findPairs(address,address,uint256,uint256)"(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string] & {
          token: string;
          token0: string;
          token1: string;
        })[]
      ]
    >;

    getBalances(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, BigNumber] & {
          token: string;
          balance: BigNumber;
          rate: BigNumber;
        })[]
      ]
    >;

    "getBalances(address,address[],address,address)"(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, BigNumber] & {
          token: string;
          balance: BigNumber;
          rate: BigNumber;
        })[]
      ]
    >;

    getFactoryInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, string, string] & {
          factory: string;
          allPairsLength: BigNumber;
          feeTo: string;
          feeToSetter: string;
        })[]
      ]
    >;

    "getFactoryInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, string, string] & {
          factory: string;
          allPairsLength: BigNumber;
          feeTo: string;
          feeToSetter: string;
        })[]
      ]
    >;

    getPairs(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string] & {
          token: string;
          token0: string;
          token1: string;
        })[]
      ]
    >;

    "getPairs(address,uint256,uint256)"(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string] & {
          token: string;
          token0: string;
          token1: string;
        })[]
      ]
    >;

    getPairsFull(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          token: string;
          token0: string;
          token1: string;
          reserve0: BigNumber;
          reserve1: BigNumber;
          totalSupply: BigNumber;
          balance: BigNumber;
        })[]
      ]
    >;

    "getPairsFull(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          token: string;
          token0: string;
          token1: string;
          reserve0: BigNumber;
          reserve1: BigNumber;
          totalSupply: BigNumber;
          balance: BigNumber;
        })[]
      ]
    >;

    getTokenInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, string, string] & {
          token: string;
          decimals: BigNumber;
          name: string;
          symbol: string;
        })[]
      ]
    >;

    "getTokenInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, BigNumber, string, string] & {
          token: string;
          decimals: BigNumber;
          name: string;
          symbol: string;
        })[]
      ]
    >;
  };

  findBalances(
    who: string,
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<([string, BigNumber] & { token: string; balance: BigNumber })[]>;

  "findBalances(address,address[])"(
    who: string,
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<([string, BigNumber] & { token: string; balance: BigNumber })[]>;

  findPairs(
    who: string,
    factory: string,
    fromID: BigNumberish,
    toID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string] & {
      token: string;
      token0: string;
      token1: string;
    })[]
  >;

  "findPairs(address,address,uint256,uint256)"(
    who: string,
    factory: string,
    fromID: BigNumberish,
    toID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string] & {
      token: string;
      token0: string;
      token1: string;
    })[]
  >;

  getBalances(
    who: string,
    addresses: string[],
    factory: string,
    currency: string,
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, BigNumber] & {
      token: string;
      balance: BigNumber;
      rate: BigNumber;
    })[]
  >;

  "getBalances(address,address[],address,address)"(
    who: string,
    addresses: string[],
    factory: string,
    currency: string,
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, BigNumber] & {
      token: string;
      balance: BigNumber;
      rate: BigNumber;
    })[]
  >;

  getFactoryInfo(
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, string, string] & {
      factory: string;
      allPairsLength: BigNumber;
      feeTo: string;
      feeToSetter: string;
    })[]
  >;

  "getFactoryInfo(address[])"(
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, string, string] & {
      factory: string;
      allPairsLength: BigNumber;
      feeTo: string;
      feeToSetter: string;
    })[]
  >;

  getPairs(
    factory: string,
    fromID: BigNumberish,
    toID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string] & {
      token: string;
      token0: string;
      token1: string;
    })[]
  >;

  "getPairs(address,uint256,uint256)"(
    factory: string,
    fromID: BigNumberish,
    toID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string] & {
      token: string;
      token0: string;
      token1: string;
    })[]
  >;

  getPairsFull(
    who: string,
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
      token: string;
      token0: string;
      token1: string;
      reserve0: BigNumber;
      reserve1: BigNumber;
      totalSupply: BigNumber;
      balance: BigNumber;
    })[]
  >;

  "getPairsFull(address,address[])"(
    who: string,
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
      token: string;
      token0: string;
      token1: string;
      reserve0: BigNumber;
      reserve1: BigNumber;
      totalSupply: BigNumber;
      balance: BigNumber;
    })[]
  >;

  getTokenInfo(
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, string, string] & {
      token: string;
      decimals: BigNumber;
      name: string;
      symbol: string;
    })[]
  >;

  "getTokenInfo(address[])"(
    addresses: string[],
    overrides?: CallOverrides
  ): Promise<
    ([string, BigNumber, string, string] & {
      token: string;
      decimals: BigNumber;
      name: string;
      symbol: string;
    })[]
  >;

  callStatic: {
    findBalances(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<([string, BigNumber] & { token: string; balance: BigNumber })[]>;

    "findBalances(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<([string, BigNumber] & { token: string; balance: BigNumber })[]>;

    findPairs(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string] & {
        token: string;
        token0: string;
        token1: string;
      })[]
    >;

    "findPairs(address,address,uint256,uint256)"(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string] & {
        token: string;
        token0: string;
        token1: string;
      })[]
    >;

    getBalances(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, BigNumber] & {
        token: string;
        balance: BigNumber;
        rate: BigNumber;
      })[]
    >;

    "getBalances(address,address[],address,address)"(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, BigNumber] & {
        token: string;
        balance: BigNumber;
        rate: BigNumber;
      })[]
    >;

    getFactoryInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, string, string] & {
        factory: string;
        allPairsLength: BigNumber;
        feeTo: string;
        feeToSetter: string;
      })[]
    >;

    "getFactoryInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, string, string] & {
        factory: string;
        allPairsLength: BigNumber;
        feeTo: string;
        feeToSetter: string;
      })[]
    >;

    getPairs(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string] & {
        token: string;
        token0: string;
        token1: string;
      })[]
    >;

    "getPairs(address,uint256,uint256)"(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string] & {
        token: string;
        token0: string;
        token1: string;
      })[]
    >;

    getPairsFull(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
        token: string;
        token0: string;
        token1: string;
        reserve0: BigNumber;
        reserve1: BigNumber;
        totalSupply: BigNumber;
        balance: BigNumber;
      })[]
    >;

    "getPairsFull(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
        token: string;
        token0: string;
        token1: string;
        reserve0: BigNumber;
        reserve1: BigNumber;
        totalSupply: BigNumber;
        balance: BigNumber;
      })[]
    >;

    getTokenInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, string, string] & {
        token: string;
        decimals: BigNumber;
        name: string;
        symbol: string;
      })[]
    >;

    "getTokenInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<
      ([string, BigNumber, string, string] & {
        token: string;
        decimals: BigNumber;
        name: string;
        symbol: string;
      })[]
    >;
  };

  filters: {};

  estimateGas: {
    findBalances(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "findBalances(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    findPairs(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "findPairs(address,address,uint256,uint256)"(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBalances(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBalances(address,address[],address,address)"(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPairs(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairs(address,uint256,uint256)"(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPairsFull(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairsFull(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    findBalances(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "findBalances(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    findPairs(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "findPairs(address,address,uint256,uint256)"(
      who: string,
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBalances(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBalances(address,address[],address,address)"(
      who: string,
      addresses: string[],
      factory: string,
      currency: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPairs(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPairs(address,uint256,uint256)"(
      factory: string,
      fromID: BigNumberish,
      toID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPairsFull(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPairsFull(address,address[])"(
      who: string,
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenInfo(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenInfo(address[])"(
      addresses: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
