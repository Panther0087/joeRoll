/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { JoeMakerExploitMock } from "../JoeMakerExploitMock";

export class JoeMakerExploitMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _joeMaker: string,
    overrides?: Overrides
  ): Promise<JoeMakerExploitMock> {
    return super.deploy(
      _joeMaker,
      overrides || {}
    ) as Promise<JoeMakerExploitMock>;
  }
  getDeployTransaction(
    _joeMaker: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_joeMaker, overrides || {});
  }
  attach(address: string): JoeMakerExploitMock {
    return super.attach(address) as JoeMakerExploitMock;
  }
  connect(signer: Signer): JoeMakerExploitMock__factory {
    return super.connect(signer) as JoeMakerExploitMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JoeMakerExploitMock {
    return new Contract(address, _abi, signerOrProvider) as JoeMakerExploitMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_joeMaker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joeMaker",
    outputs: [
      {
        internalType: "contract JoeMaker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516101ef3803806101ef8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661018561006a600039806091528060b552506101856000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806344a6f0011461003b578063bd1b820c1461005f575b600080fd5b61004361008f565b604080516001600160a01b039092168252519081900360200190f35b61008d6004803603604081101561007557600080fd5b506001600160a01b03813581169160200135166100b3565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd1b820c83836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b15801561013357600080fd5b505af1158015610147573d6000803e3d6000fd5b50505050505056fea2646970667358221220effd3872372539cad5c6201d4e121cef1daf0c8f53f409f05e3d10fb574d3b0e64736f6c634300060c0033";
